name: Docker

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  release:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    env:
      GITHUB_URL: https://github.com/${{ github.repository }}
      ADD_CHROME_VERSION: 120
      IMAGE: ulixee/ulixee-cloud

    steps:
      # 1. Checkout the repository
      - uses: actions/checkout@v4

      # 2. Read the version from package.json
      - name: Read version
        shell: bash
        working-directory: cloud/main
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      # 3. Set the build date
      - name: Set build date
        id: build_date
        run: echo "DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

      # 4. Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # 5. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 6. Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 7. Build and push Docker images to GHCR
      - name: Build and Push to GHCR
        uses: docker/build-push-action@v4
        with:
          context: cloud/tools/docker
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/evotechmike/ulixee-platform:v${{ env.VERSION }}
            ghcr.io/evotechmike/ulixee-platform:latest
          build-args: |
            BUILD_DATE=${{ env.DATE }}
            GITHUB_SHA=${{ github.sha }}
            ADD_TO_INSTALL=yarn add "@ulixee/chrome-${{ env.ADD_CHROME_VERSION }}-0"
            VERSION=${{ env.VERSION }}
          labels: |
            org.label-schema.build-date=${{ env.DATE }}
            org.label-schema.vcs-url=${{ env.GITHUB_URL }}
            org.label-schema.vcs-ref=${{ github.sha }}
            org.opencontainers.image.created=${{ env.DATE }}
            org.opencontainers.image.source=${{ env.GITHUB_URL }}
            org.opencontainers.image.revision=${{ github.sha }}
