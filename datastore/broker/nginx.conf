# Steps to activate:
# 1. Install Nginx $sudo apt-get install nginx
# 2. Install Certbot $sudo apt-get install certbot python3-certbot-nginx
# 3. Obtain SSL certificate (will prompt for instructions) $sudo certbot --nginx
# 4. Copy this file to /etc/nginx/sites-available/yourdomain.com.conf (replace yourdomain.com with your domain)
# 5. Create a .htpasswd file for basic authentication $sudo htpasswd -c /etc/nginx/.htpasswd username
# 6. Modify the domain and allowed ips in the configuration below
# 7. Add htpasswd user for basic authentication (replace username) $sudo htpasswd -c /etc/nginx/.htpasswd username
# 8. Create a symbolic link to sites-enabled $sudo ln -s /etc/nginx/sites-available/yourdomain.com.conf /etc/nginx/sites-enabled/yourdomain.com.conf
# 9. Restart Nginx $sudo systemctl reload nginx

server {
    listen 80;
    server_name yourdomain.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name yourdomain.com;

    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;

        proxy_pass http://localhost:1814;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /admin/ {
        # Basic authentication for admin access
        auth_basic "Restricted Access";
        # Add user to .htpasswd file $sudo htpasswd -c /etc/nginx/.htpasswd <username>
        auth_basic_user_file /etc/nginx/.htpasswd;

        # IP whitelisting
        allow 127.0.0.1; # Always Allow localhost
#         allow YOUR.IP.ADDRESS; # Allow specific IP address
        deny all; # Deny all other IP addresses

        rewrite ^/admin/(.*)$ /$1 break;

        # WebSocket support
        proxy_pass http://localhost:18171;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
