"use strict";(function(){var i=window.Document.prototype.createElement,r=window.Document.prototype.createElementNS,c=window.Document.prototype.importNode,p=window.Document.prototype.prepend,h=window.Document.prototype.append,E=window.DocumentFragment.prototype.prepend,v=window.DocumentFragment.prototype.append,x=window.Node.prototype.cloneNode,m=window.Node.prototype.appendChild,C=window.Node.prototype.insertBefore,_=window.Node.prototype.removeChild,S=window.Node.prototype.replaceChild,I=Object.getOwnPropertyDescriptor(window.Node.prototype,"textContent"),j=window.Element.prototype.attachShadow,V=Object.getOwnPropertyDescriptor(window.Element.prototype,"innerHTML"),$=window.Element.prototype.getAttribute,ce=window.Element.prototype.setAttribute,ae=window.Element.prototype.removeAttribute,X=window.Element.prototype.toggleAttribute,z=window.Element.prototype.getAttributeNS,de=window.Element.prototype.setAttributeNS,ue=window.Element.prototype.removeAttributeNS,pe=window.Element.prototype.insertAdjacentElement,he=window.Element.prototype.insertAdjacentHTML,ze=window.Element.prototype.prepend,Ge=window.Element.prototype.append,fe=window.Element.prototype.before,me=window.Element.prototype.after,ge=window.Element.prototype.replaceWith,ve=window.Element.prototype.remove,Ue=window.HTMLElement,Q=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,"innerHTML"),Ee=window.HTMLElement.prototype.insertAdjacentElement,ye=window.HTMLElement.prototype.insertAdjacentHTML,we=new Set;"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" ").forEach(function(e){return we.add(e)});function Ce(e){var t=we.has(e);return e=/^[a-z][.0-9_a-z]*-[-.0-9_a-z]*$/.test(e),!t&&e}var We=document.contains?document.contains.bind(document):document.documentElement.contains.bind(document.documentElement);function y(e){var t=e.isConnected;if(t!==void 0)return t;if(We(e))return!0;for(;e&&!(e.__CE_isImportDocument||e instanceof Document);)e=e.parentNode||(window.ShadowRoot&&e instanceof ShadowRoot?e.host:void 0);return!(!e||!(e.__CE_isImportDocument||e instanceof Document))}function Z(e){var t=e.children;if(t)return Array.prototype.slice.call(t);for(t=[],e=e.firstChild;e;e=e.nextSibling)e.nodeType===Node.ELEMENT_NODE&&t.push(e);return t}function ee(e,t){for(;t&&t!==e&&!t.nextSibling;)t=t.parentNode;return t&&t!==e?t.nextSibling:null}function te(e,t,o){for(var s=e;s;){if(s.nodeType===Node.ELEMENT_NODE){var n=s;t(n);var l=n.localName;if(l==="link"&&n.getAttribute("rel")==="import"){if(s=n.import,o===void 0&&(o=new Set),s instanceof Node&&!o.has(s))for(o.add(s),s=s.firstChild;s;s=s.nextSibling)te(s,t,o);s=ee(e,n);continue}else if(l==="template"){s=ee(e,n);continue}if(n=n.__CE_shadowRoot)for(n=n.firstChild;n;n=n.nextSibling)te(n,t,o)}s=s.firstChild?s.firstChild:ee(e,s)}}function G(){var e=!(N==null||!N.noDocumentConstructionObserver),t=!(N==null||!N.shadyDomFastWalk);this.m=[],this.g=[],this.j=!1,this.shadyDomFastWalk=t,this.I=!e}function M(e,t,o,s){var n=window.ShadyDOM;if(e.shadyDomFastWalk&&n&&n.inUse){if(t.nodeType===Node.ELEMENT_NODE&&o(t),t.querySelectorAll)for(e=n.nativeMethods.querySelectorAll.call(t,"*"),t=0;t<e.length;t++)o(e[t])}else te(t,o,s)}function qe(e,t){e.j=!0,e.m.push(t)}function Ke(e,t){e.j=!0,e.g.push(t)}function ne(e,t){e.j&&M(e,t,function(o){return D(e,o)})}function D(e,t){if(e.j&&!t.__CE_patched){t.__CE_patched=!0;for(var o=0;o<e.m.length;o++)e.m[o](t);for(o=0;o<e.g.length;o++)e.g[o](t)}}function O(e,t){var o=[];for(M(e,t,function(n){return o.push(n)}),t=0;t<o.length;t++){var s=o[t];s.__CE_state===1?e.connectedCallback(s):U(e,s)}}function T(e,t){var o=[];for(M(e,t,function(n){return o.push(n)}),t=0;t<o.length;t++){var s=o[t];s.__CE_state===1&&e.disconnectedCallback(s)}}function k(e,t,o){o=o===void 0?{}:o;var s=o.J,n=o.upgrade||function(a){return U(e,a)},l=[];for(M(e,t,function(a){if(e.j&&D(e,a),a.localName==="link"&&a.getAttribute("rel")==="import"){var d=a.import;d instanceof Node&&(d.__CE_isImportDocument=!0,d.__CE_registry=document.__CE_registry),d&&d.readyState==="complete"?d.__CE_documentLoadHandled=!0:a.addEventListener("load",function(){var u=a.import;if(!u.__CE_documentLoadHandled){u.__CE_documentLoadHandled=!0;var f=new Set;s&&(s.forEach(function(g){return f.add(g)}),f.delete(u)),k(e,u,{J:f,upgrade:n})}})}else l.push(a)},s),t=0;t<l.length;t++)n(l[t])}function U(e,t){try{var o=t.ownerDocument,s=o.__CE_registry,n=s&&(o.defaultView||o.__CE_isImportDocument)?W(s,t.localName):void 0;if(n&&t.__CE_state===void 0){n.constructionStack.push(t);try{try{if(new n.constructorFunction!==t)throw Error("The custom element constructor did not produce the element being upgraded.")}finally{n.constructionStack.pop()}}catch(u){throw t.__CE_state=2,u}if(t.__CE_state=1,t.__CE_definition=n,n.attributeChangedCallback&&t.hasAttributes()){var l=n.observedAttributes;for(n=0;n<l.length;n++){var a=l[n],d=t.getAttribute(a);d!==null&&e.attributeChangedCallback(t,a,null,d,null)}}y(t)&&e.connectedCallback(t)}}catch(u){F(u)}}G.prototype.connectedCallback=function(e){var t=e.__CE_definition;if(t.connectedCallback)try{t.connectedCallback.call(e)}catch(o){F(o)}},G.prototype.disconnectedCallback=function(e){var t=e.__CE_definition;if(t.disconnectedCallback)try{t.disconnectedCallback.call(e)}catch(o){F(o)}},G.prototype.attributeChangedCallback=function(e,t,o,s,n){var l=e.__CE_definition;if(l.attributeChangedCallback&&-1<l.observedAttributes.indexOf(t))try{l.attributeChangedCallback.call(e,t,o,s,n)}catch(a){F(a)}};function be(e,t,o,s){var n=t.__CE_registry;if(n&&(s===null||s==="http://www.w3.org/1999/xhtml")&&(n=W(n,o)))try{var l=new n.constructorFunction;if(l.__CE_state===void 0||l.__CE_definition===void 0)throw Error("Failed to construct '"+o+"': The returned value was not constructed with the HTMLElement constructor.");if(l.namespaceURI!=="http://www.w3.org/1999/xhtml")throw Error("Failed to construct '"+o+"': The constructed element's namespace must be the HTML namespace.");if(l.hasAttributes())throw Error("Failed to construct '"+o+"': The constructed element must not have any attributes.");if(l.firstChild!==null)throw Error("Failed to construct '"+o+"': The constructed element must not have any children.");if(l.parentNode!==null)throw Error("Failed to construct '"+o+"': The constructed element must not have a parent node.");if(l.ownerDocument!==t)throw Error("Failed to construct '"+o+"': The constructed element's owner document is incorrect.");if(l.localName!==o)throw Error("Failed to construct '"+o+"': The constructed element's local name is incorrect.");return l}catch(a){return F(a),t=s===null?i.call(t,o):r.call(t,s,o),Object.setPrototypeOf(t,HTMLUnknownElement.prototype),t.__CE_state=2,t.__CE_definition=void 0,D(e,t),t}return t=s===null?i.call(t,o):r.call(t,s,o),D(e,t),t}function F(e){var t="",o="",s=0,n=0;e instanceof Error?(t=e.message,o=e.sourceURL||e.fileName||"",s=e.line||e.lineNumber||0,n=e.column||e.columnNumber||0):t="Uncaught "+String(e);var l=void 0;ErrorEvent.prototype.initErrorEvent===void 0?l=new ErrorEvent("error",{cancelable:!0,message:t,filename:o,lineno:s,colno:n,error:e}):(l=document.createEvent("ErrorEvent"),l.initErrorEvent("error",!1,!0,t,o,s),l.preventDefault=function(){Object.defineProperty(this,"defaultPrevented",{configurable:!0,get:function(){return!0}})}),l.error===void 0&&Object.defineProperty(l,"error",{configurable:!0,enumerable:!0,get:function(){return e}}),window.dispatchEvent(l),l.defaultPrevented||console.error(e)}function xe(){var e=this;this.g=void 0,this.F=new Promise(function(t){e.l=t})}xe.prototype.resolve=function(e){if(this.g)throw Error("Already resolved.");this.g=e,this.l(e)};function _e(e){var t=document;this.l=void 0,this.h=e,this.g=t,k(this.h,this.g),this.g.readyState==="loading"&&(this.l=new MutationObserver(this.G.bind(this)),this.l.observe(this.g,{childList:!0,subtree:!0}))}function Te(e){e.l&&e.l.disconnect()}_e.prototype.G=function(e){var t=this.g.readyState;for(t!=="interactive"&&t!=="complete"||Te(this),t=0;t<e.length;t++)for(var o=e[t].addedNodes,s=0;s<o.length;s++)k(this.h,o[s])};function w(e){this.s=new Map,this.u=new Map,this.C=new Map,this.A=!1,this.B=new Map,this.o=function(t){return t()},this.i=!1,this.v=[],this.h=e,this.D=e.I?new _e(e):void 0}w.prototype.H=function(e,t){var o=this;if(!(t instanceof Function))throw new TypeError("Custom element constructor getters must be functions.");Se(this,e),this.s.set(e,t),this.v.push(e),this.i||(this.i=!0,this.o(function(){return Ne(o)}))},w.prototype.define=function(e,t){var o=this;if(!(t instanceof Function))throw new TypeError("Custom element constructors must be functions.");Se(this,e),Oe(this,e,t),this.v.push(e),this.i||(this.i=!0,this.o(function(){return Ne(o)}))};function Se(e,t){if(!Ce(t))throw new SyntaxError("The element name '"+t+"' is not valid.");if(W(e,t))throw Error("A custom element with name '"+(t+"' has already been defined."));if(e.A)throw Error("A custom element is already being defined.")}function Oe(e,t,o){e.A=!0;var s;try{var n=o.prototype;if(!(n instanceof Object))throw new TypeError("The custom element constructor's prototype is not an object.");var l=function(g){var A=n[g];if(A!==void 0&&!(A instanceof Function))throw Error("The '"+g+"' callback must be a function.");return A},a=l("connectedCallback"),d=l("disconnectedCallback"),u=l("adoptedCallback"),f=(s=l("attributeChangedCallback"))&&o.observedAttributes||[]}catch(g){throw g}finally{e.A=!1}return o={localName:t,constructorFunction:o,connectedCallback:a,disconnectedCallback:d,adoptedCallback:u,attributeChangedCallback:s,observedAttributes:f,constructionStack:[]},e.u.set(t,o),e.C.set(o.constructorFunction,o),o}w.prototype.upgrade=function(e){k(this.h,e)};function Ne(e){if(e.i!==!1){e.i=!1;for(var t=[],o=e.v,s=new Map,n=0;n<o.length;n++)s.set(o[n],[]);for(k(e.h,document,{upgrade:function(u){if(u.__CE_state===void 0){var f=u.localName,g=s.get(f);g?g.push(u):e.u.has(f)&&t.push(u)}}}),n=0;n<t.length;n++)U(e.h,t[n]);for(n=0;n<o.length;n++){for(var l=o[n],a=s.get(l),d=0;d<a.length;d++)U(e.h,a[d]);(l=e.B.get(l))&&l.resolve(void 0)}o.length=0}}w.prototype.get=function(e){if(e=W(this,e))return e.constructorFunction},w.prototype.whenDefined=function(e){if(!Ce(e))return Promise.reject(new SyntaxError("'"+e+"' is not a valid custom element name."));var t=this.B.get(e);if(t)return t.F;t=new xe,this.B.set(e,t);var o=this.u.has(e)||this.s.has(e);return e=this.v.indexOf(e)===-1,o&&e&&t.resolve(void 0),t.F},w.prototype.polyfillWrapFlushCallback=function(e){this.D&&Te(this.D);var t=this.o;this.o=function(o){return e(function(){return t(o)})}};function W(e,t){var o=e.u.get(t);if(o)return o;if(o=e.s.get(t)){e.s.delete(t);try{return Oe(e,t,o())}catch(s){F(s)}}}w.prototype.define=w.prototype.define,w.prototype.upgrade=w.prototype.upgrade,w.prototype.get=w.prototype.get,w.prototype.whenDefined=w.prototype.whenDefined,w.prototype.polyfillDefineLazy=w.prototype.H,w.prototype.polyfillWrapFlushCallback=w.prototype.polyfillWrapFlushCallback;function oe(e,t,o){function s(n){return function(l){for(var a=[],d=0;d<arguments.length;++d)a[d]=arguments[d];d=[];for(var u=[],f=0;f<a.length;f++){var g=a[f];if(g instanceof Element&&y(g)&&u.push(g),g instanceof DocumentFragment)for(g=g.firstChild;g;g=g.nextSibling)d.push(g);else d.push(g)}for(n.apply(this,a),a=0;a<u.length;a++)T(e,u[a]);if(y(this))for(a=0;a<d.length;a++)u=d[a],u instanceof Element&&O(e,u)}}o.prepend!==void 0&&(t.prepend=s(o.prepend)),o.append!==void 0&&(t.append=s(o.append))}function Ye(e){Document.prototype.createElement=function(t){return be(e,this,t,null)},Document.prototype.importNode=function(t,o){return t=c.call(this,t,!!o),this.__CE_registry?k(e,t):ne(e,t),t},Document.prototype.createElementNS=function(t,o){return be(e,this,o,t)},oe(e,Document.prototype,{prepend:p,append:h})}function Je(e){function t(s){return function(n){for(var l=[],a=0;a<arguments.length;++a)l[a]=arguments[a];a=[];for(var d=[],u=0;u<l.length;u++){var f=l[u];if(f instanceof Element&&y(f)&&d.push(f),f instanceof DocumentFragment)for(f=f.firstChild;f;f=f.nextSibling)a.push(f);else a.push(f)}for(s.apply(this,l),l=0;l<d.length;l++)T(e,d[l]);if(y(this))for(l=0;l<a.length;l++)d=a[l],d instanceof Element&&O(e,d)}}var o=Element.prototype;fe!==void 0&&(o.before=t(fe)),me!==void 0&&(o.after=t(me)),ge!==void 0&&(o.replaceWith=function(s){for(var n=[],l=0;l<arguments.length;++l)n[l]=arguments[l];l=[];for(var a=[],d=0;d<n.length;d++){var u=n[d];if(u instanceof Element&&y(u)&&a.push(u),u instanceof DocumentFragment)for(u=u.firstChild;u;u=u.nextSibling)l.push(u);else l.push(u)}for(d=y(this),ge.apply(this,n),n=0;n<a.length;n++)T(e,a[n]);if(d)for(T(e,this),n=0;n<l.length;n++)a=l[n],a instanceof Element&&O(e,a)}),ve!==void 0&&(o.remove=function(){var s=y(this);ve.call(this),s&&T(e,this)})}function Ve(e){function t(n,l){Object.defineProperty(n,"innerHTML",{enumerable:l.enumerable,configurable:!0,get:l.get,set:function(a){var d=this,u=void 0;if(y(this)&&(u=[],M(e,this,function(A){A!==d&&u.push(A)})),l.set.call(this,a),u)for(var f=0;f<u.length;f++){var g=u[f];g.__CE_state===1&&e.disconnectedCallback(g)}return this.ownerDocument.__CE_registry?k(e,this):ne(e,this),a}})}function o(n,l){n.insertAdjacentElement=function(a,d){var u=y(d);return a=l.call(this,a,d),u&&T(e,d),y(a)&&O(e,d),a}}function s(n,l){function a(d,u){for(var f=[];d!==u;d=d.nextSibling)f.push(d);for(u=0;u<f.length;u++)k(e,f[u])}n.insertAdjacentHTML=function(d,u){if(d=d.toLowerCase(),d==="beforebegin"){var f=this.previousSibling;l.call(this,d,u),a(f||this.parentNode.firstChild,this)}else if(d==="afterbegin")f=this.firstChild,l.call(this,d,u),a(this.firstChild,f);else if(d==="beforeend")f=this.lastChild,l.call(this,d,u),a(f||this.firstChild,null);else if(d==="afterend")f=this.nextSibling,l.call(this,d,u),a(this.nextSibling,f);else throw new SyntaxError("The value provided ("+String(d)+") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.")}}j&&(Element.prototype.attachShadow=function(n){if(n=j.call(this,n),e.j&&!n.__CE_patched){n.__CE_patched=!0;for(var l=0;l<e.m.length;l++)e.m[l](n)}return this.__CE_shadowRoot=n}),V&&V.get?t(Element.prototype,V):Q&&Q.get?t(HTMLElement.prototype,Q):Ke(e,function(n){t(n,{enumerable:!0,configurable:!0,get:function(){return x.call(this,!0).innerHTML},set:function(l){var a=this.localName==="template",d=a?this.content:this,u=r.call(document,this.namespaceURI,this.localName);for(u.innerHTML=l;0<d.childNodes.length;)_.call(d,d.childNodes[0]);for(l=a?u.content:u;0<l.childNodes.length;)m.call(d,l.childNodes[0])}})}),Element.prototype.setAttribute=function(n,l){if(this.__CE_state!==1)return ce.call(this,n,l);var a=$.call(this,n);ce.call(this,n,l),l=$.call(this,n),e.attributeChangedCallback(this,n,a,l,null)},Element.prototype.setAttributeNS=function(n,l,a){if(this.__CE_state!==1)return de.call(this,n,l,a);var d=z.call(this,n,l);de.call(this,n,l,a),a=z.call(this,n,l),e.attributeChangedCallback(this,l,d,a,n)},Element.prototype.removeAttribute=function(n){if(this.__CE_state!==1)return ae.call(this,n);var l=$.call(this,n);ae.call(this,n),l!==null&&e.attributeChangedCallback(this,n,l,null,null)},X&&(Element.prototype.toggleAttribute=function(n,l){if(this.__CE_state!==1)return X.call(this,n,l);var a=$.call(this,n),d=a!==null;return l=X.call(this,n,l),d!==l&&e.attributeChangedCallback(this,n,a,l?"":null,null),l}),Element.prototype.removeAttributeNS=function(n,l){if(this.__CE_state!==1)return ue.call(this,n,l);var a=z.call(this,n,l);ue.call(this,n,l);var d=z.call(this,n,l);a!==d&&e.attributeChangedCallback(this,l,a,d,n)},Ee?o(HTMLElement.prototype,Ee):pe&&o(Element.prototype,pe),ye?s(HTMLElement.prototype,ye):he&&s(Element.prototype,he),oe(e,Element.prototype,{prepend:ze,append:Ge}),Je(e)}var Ie={};function Xe(e){function t(){var o=this.constructor,s=document.__CE_registry.C.get(o);if(!s)throw Error("Failed to construct a custom element: The constructor was not registered with `customElements`.");var n=s.constructionStack;if(n.length===0)return n=i.call(document,s.localName),Object.setPrototypeOf(n,o.prototype),n.__CE_state=1,n.__CE_definition=s,D(e,n),n;var l=n.length-1,a=n[l];if(a===Ie)throw Error("Failed to construct '"+s.localName+"': This element was already constructed.");return n[l]=Ie,Object.setPrototypeOf(a,o.prototype),D(e,a),a}t.prototype=Ue.prototype,Object.defineProperty(HTMLElement.prototype,"constructor",{writable:!0,configurable:!0,enumerable:!1,value:t}),window.HTMLElement=t}function Qe(e){function t(o,s){Object.defineProperty(o,"textContent",{enumerable:s.enumerable,configurable:!0,get:s.get,set:function(n){if(this.nodeType===Node.TEXT_NODE)s.set.call(this,n);else{var l=void 0;if(this.firstChild){var a=this.childNodes,d=a.length;if(0<d&&y(this)){l=Array(d);for(var u=0;u<d;u++)l[u]=a[u]}}if(s.set.call(this,n),l)for(n=0;n<l.length;n++)T(e,l[n])}}})}Node.prototype.insertBefore=function(o,s){if(o instanceof DocumentFragment){var n=Z(o);if(o=C.call(this,o,s),y(this))for(s=0;s<n.length;s++)O(e,n[s]);return o}return n=o instanceof Element&&y(o),s=C.call(this,o,s),n&&T(e,o),y(this)&&O(e,o),s},Node.prototype.appendChild=function(o){if(o instanceof DocumentFragment){var s=Z(o);if(o=m.call(this,o),y(this))for(var n=0;n<s.length;n++)O(e,s[n]);return o}return s=o instanceof Element&&y(o),n=m.call(this,o),s&&T(e,o),y(this)&&O(e,o),n},Node.prototype.cloneNode=function(o){return o=x.call(this,!!o),this.ownerDocument.__CE_registry?k(e,o):ne(e,o),o},Node.prototype.removeChild=function(o){var s=o instanceof Element&&y(o),n=_.call(this,o);return s&&T(e,o),n},Node.prototype.replaceChild=function(o,s){if(o instanceof DocumentFragment){var n=Z(o);if(o=S.call(this,o,s),y(this))for(T(e,s),s=0;s<n.length;s++)O(e,n[s]);return o}n=o instanceof Element&&y(o);var l=S.call(this,o,s),a=y(this);return a&&T(e,s),n&&T(e,o),a&&O(e,o),l},I&&I.get?t(Node.prototype,I):qe(e,function(o){t(o,{enumerable:!0,configurable:!0,get:function(){for(var s=[],n=this.firstChild;n;n=n.nextSibling)n.nodeType!==Node.COMMENT_NODE&&s.push(n.textContent);return s.join("")},set:function(s){for(;this.firstChild;)_.call(this,this.firstChild);s!=null&&s!==""&&m.call(this,document.createTextNode(s))}})})}var N=window.customElements;function ke(){var e=new G;Xe(e),Ye(e),oe(e,DocumentFragment.prototype,{prepend:E,append:v}),Qe(e),Ve(e),window.CustomElementRegistry=w,e=new w(e),document.__CE_registry=e,Object.defineProperty(window,"customElements",{configurable:!0,enumerable:!0,value:e})}N&&!N.forcePolyfill&&typeof N.define=="function"&&typeof N.get=="function"||ke(),window.__CE_installPolyfill=ke}).call(self);let Ze=(i=21)=>crypto.getRandomValues(new Uint8Array(i)).reduce((r,c)=>(c&=63,c<36?r+=c.toString(36):c<62?r+=(c-26).toString(36).toUpperCase():c>62?r+="-":r+="_",r),"");const De=":",Fe=20,et=De.length,Ae=1,tt=1,He=tt+Fe+et;var b=(i=>(i.OpenSelectorGeneratorPanel="OpenSelectorGeneratorPanel",i.CloseElementOptionsOverlay="CloseElementOptionsOverlay",i.InspectElementModeChanged="InspectElementModeChanged",i.OpenElementOptionsOverlay="OpenElementOptionsOverlay",i.HideElementOptionsOverlay="HideElementOptionsOverlay",i.RemoveHideFromElementOptionsOverlay="RemoveHideFromElementOptionsOverlay",i.ContentScriptNeedsElement="ContentScriptNeedsElement",i.RunSelectorGenerator="RunSelectorGenerator",i.ResetSelectorGenerator="ResetSelectorGenerator",i.AddIncludedElement="AddIncludedElement",i.RemoveIncludedElement="RemoveIncludedElement",i.AddExcludedElement="AddExcludedElement",i.RemoveExcludedElement="RemoveExcludedElement",i.FinishedSelectorGeneration="FinishedSelectorGeneration",i.UpdateElementOptions="UpdateElementOptions",i.CloseDevtoolsPanel="CloseDevtoolsPanel",i.ToggleInspectElementMode="ToggleInspectElementMode",i.UndockedFocusChange="UndockedFocusChange",i))(b||{}),B=(i=>(i.DevtoolsPrivate="DevtoolsPrivate",i.DevtoolsScript="DevtoolsScript",i.ContentScript="ContentScript",i.Core="Core",i))(B||{});const Me="___sendToCore",nt="___receiveFromCore";var P=(i=>(i.Y="Y",i.N="N",i.R="R",i))(P||{});function ot(){return Ze()}function Re(i){if(typeof i=="string"){if(le(i))return i;throw new Error("Unknown message format")}const{destLocation:r}=i,c=i.responseCode||"N",p={...i};delete p.destLocation,delete p.responseCode;const h=JSON.stringify(p);return`:${r.padEnd(Fe)}:${c}:${h}`}function le(i){return i.substr(0,1)===De}function it(i){if(typeof i=="string"){if(le(i))return i.substr(He,Ae)==="Y";throw new Error("Unknown message format")}return i.responseCode==="Y"}function rt(i){if(typeof i=="string"){if(le(i))return i.substr(He,Ae)==="R";throw new Error("Unknown message format")}return i.responseCode==="R"}class lt extends HTMLElement{constructor(){super(...arguments),this.hasStartedInitialization=!1,this.hasFinishedInitialization=!1,this.isOpen=!1,this.isTmpHidden=!1}attachElementsBucket(r){this.elementsBucket=r}openByBackendNodeId(r){this.elementsBucket.getByBackendNodeId(r).then(c=>this.open(r,c)).catch(c=>{console.log(`ERROR: Could not fetch element for backendNodeId: ${r}`,c)})}open(r,c){if(!this.hasFinishedInitialization)return this.hasFinishedInitialization=!0,setTimeout(()=>{this.open(r,c)});if(this.selectedElem=c,this.selectedBackendNodeId=r,!c)return;const p=c.localName,h=Array.from(c.classList),E=[`<span class="tag">${p}</span>`,...h].join("."),{width:v,height:x,top:m,left:C}=c.getBoundingClientRect(),_=C+window.scrollX,S=m+window.scrollY,I=`${Math.round(v*100)/100} x ${Math.round(x*100)/100}`;this.isOpen=!0,this.style.left=`${_}px`,this.style.top=`${S}px`,this.style.width=`${v}px`,this.style.height=`${x}px`,this.titleNameElem.innerHTML=E,this.positionElem.textContent=I,this.style.display="block";const j=this.overlayElem.offsetHeight;m-j<0?(this.overlayElem.classList.remove("top"),this.overlayElem.classList.add("bottom")):(this.overlayElem.classList.remove("bottom"),this.overlayElem.classList.add("top")),this.elementsBucket.isIncludedBackendNodeId(this.selectedBackendNodeId)?this.addOnClassToIncludeToggle():this.addOffClassToIncludeToggle(),this.elementsBucket.isExcludedBackendNodeId(this.selectedBackendNodeId)?this.addOnClassToExcludeToggle():this.addOffClassToExcludeToggle()}tmpHide(r){this.isOpen&&(r===!0?(this.isTmpHidden=!0,this.style.display="none"):this.isTmpHidden&&(this.isTmpHidden=!1,this.style.display="block"))}close(){this.isOpen=!1,this.isTmpHidden=!1,this.style.display="none"}addOffClassToIncludeToggle(){this.mustIncludeToggle.classList.remove("on"),this.mustIncludeToggle.classList.add("off")}addOnClassToIncludeToggle(){this.mustIncludeToggle.classList.remove("off"),this.mustIncludeToggle.classList.add("on"),this.addOffClassToExcludeToggle()}addOnClassToExcludeToggle(){this.mustExcludeToggle.classList.add("on"),this.mustExcludeToggle.classList.remove("off"),this.addOffClassToIncludeToggle()}addOffClassToExcludeToggle(){this.mustExcludeToggle.classList.add("off"),this.mustExcludeToggle.classList.remove("on")}toggleIncluded(){Le(),this.elementsBucket.isIncludedBackendNodeId(this.selectedBackendNodeId)?(this.elementsBucket.removeIncludedElement(this.selectedBackendNodeId),this.addOffClassToIncludeToggle()):(this.elementsBucket.addIncludedElement(this.selectedBackendNodeId,this.selectedElem),this.addOnClassToIncludeToggle())}toggleMustExclude(){Le(),this.elementsBucket.isExcludedBackendNodeId(this.selectedBackendNodeId)?(this.elementsBucket.removeExcludedElement(this.selectedBackendNodeId),this.addOffClassToExcludeToggle()):(this.elementsBucket.addExcludedElement(this.selectedBackendNodeId,this.selectedElem),this.addOnClassToExcludeToggle())}initialize(){this.style.position="absolute",this.style.zIndex="2147483647",this.attachShadow({mode:"open"}),this.createStyleElem(),this.createHighlighterElem(),this.createOverlayElem(),this.shadowRoot.addEventListener("click",r=>{r.cancelBubble=!0})}createOverlayElem(){const c=document.createElement("div");c.setAttribute("class","overlay"),c.innerHTML=`
      <div class="overlay-panel">
        <div class="title">
          <div class="name">------</div>
          <div class="position"></div>
        </div>
        <div class="controller">
          <div class="intro">Selector Generator Options:</div>
          <div class="option must-include">
            <div class="symbol plus"></div>
            <label>Must Include</label>
            <div id="must-include" class="toggle-component">
              <span class="label off">OFF</span>
              <span class="label on">ON</span>
              <div class="toggle"></div>
            </div>
          </div>
          <div class="option must-exclude">
            <div class="symbol minus"></div>
            <label>Must Exclude</label>
            <div id="must-exclude" class="toggle-component">
              <span class="label off">OFF</span>
              <span class="label on">ON</span>
              <div class="toggle"></div>
            </div>
          </div>
        </div>
      </div>
      <div class="overlay-triangle" style="width: ${Math.sqrt(2)*15+5}px; height: ${Math.sqrt(2)*(15/2)+5}px">
        <div style="width: 15px; height: 15px"></div>
      </div>
    `,this.mustIncludeToggle=c.querySelector("div#must-include"),this.mustIncludeToggle.addEventListener("click",p=>{this.toggleIncluded(),p.cancelBubble=!0}),this.mustExcludeToggle=c.querySelector("div#must-exclude"),this.mustExcludeToggle.addEventListener("click",p=>{this.toggleMustExclude(),p.cancelBubble=!0}),this.overlayElem=c,this.titleNameElem=c.querySelector(".title .name"),this.positionElem=c.querySelector(".title .position"),this.shadowRoot.appendChild(c)}createHighlighterElem(){this.highlightElem||(this.highlightElem=document.createElement("div"),this.highlightElem.setAttribute("class","highlighter"),this.shadowRoot.appendChild(this.highlightElem))}createStyleElem(){const r=`
      .highlighter {
        background: rgba(91, 150, 202, 0.5);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
      }
      .overlay {
        position: absolute;
        z-index: 2;
      }      
      .overlay-panel {
        position: relative;
        left: 0;
        bottom: 0;
        z-index: 2;
        background: white;
        padding: 5px 10px;
        border-radius: 4px;
        box-shadow: 1px 1px 8px 0 rgb(0 0 0 / 40%);
        min-width: 290px;
        max-width: 390px;
      }
      
      .overlay-triangle {
        position: absolute;
        overflow: hidden;
      }
      .overlay-triangle div {
        position: absolute;
        transform: rotate(45deg);
        height: 15px;
        width: 15px;
        pointer-events: none;
        background: #ffffff;
        box-shadow: 1px 1px 8px 0 rgb(0 0 0 / 40%);
      }
      
      .overlay.top {
        left: 0;
        bottom: calc(100% + 8px);
      }
      .overlay.top .overlay-triangle {
        left: 15px;
        top: 100%;
        z-index: 2;
      }
      .overlay.top .overlay-triangle div {
        top: -7px;
        left: 5px;
      }
      
      .overlay.bottom {
        left: 0;
        top: calc(100% + 8px);
      }
      .overlay.bottom .overlay-triangle {
        left: 15px;
        top: -15px;
        z-index: 2;
      }
      .overlay.bottom .overlay-triangle div {
        top: 7px;
        left: 5px;
      }
      
      .title {
        position: relative;
      }
      .title .name {
        white-space: nowrap;
        color: #1A1AA6;
        font-weight: bold;
        overflow: hidden;
        margin-right: 100px;
        padding: 5px 0;
        text-overflow: ellipsis;
      }
      .title .name .tag {
        color: #881280;
      }
      .title .position {
        padding: 5px 0;
        color: silver;
        width: 100px;
        text-align: right;
        position: absolute;
        top: 0;
        right: 0;
      }
      
      .controller {
        border-top: 1px solid rgba(0,0,0,0.1);
        padding: 5px 0;
      }
      .controller .intro {
        font-weight: 100;
        color: #595959;
        padding: 10px 0; 
      }
      .controller .option {
        padding: 10px 0;
        border-top: 1px solid rgba(0,0,0,0.1);
        position: relative;
        line-height: 20px;
      }
      .controller .option label {
        font-weight: bold;
      }
      .controller .option .symbol {
        width: 20px;
        height: 20px;
        position: relative;
        display: inline-block;
        vertical-align: middle;
      }
      .controller .option .symbol:before {
        content: "";
        position: absolute;
        left: 4px;
        top: 6px;
        width: 12px;
        height: 4px;
      }
      .controller .option .symbol.plus:before {
        background: #1CA600;
      }
      .controller .option .symbol.plus:after {
        content: "";
        position: absolute;
        top: 2px;
        left: 8px;
        width: 4px;
        height: 12px;
        background: #1CA600;
      }
      .controller .option .symbol.minus:before {
        background: #E20000;
      }
      .controller .option.must-include {
        color: #1CA600;
      }
      .controller .option.must-exclude {
        color: #E20000;
      }
      
      .toggle-component {
        background: #EFEFEF;
        width: 90px;
        height: 20px;
        border: 1px solid #B3B3B3;
        border-radius: 25px;
        float: right;
        position: relative;
        color: silver;
        text-shadow: 1px 1px white;
        cursor: default;
      }
      .toggle-component .label {
        width: 40px;
        display: inline-block;
        text-align: center;
        z-index: 2;
        position: relative;
      }
      .toggle-component .toggle {
        width: 45px;
        background: white;
        border: 1px solid #8E8E8E;
        position: absolute;
        top: -1px;
        height: 20px;
        z-index: 1;
        border-radius: 20px;
        box-shadow: 1px 1px 1px rgb(0 0 0 / 10%);
      }
      .toggle-component.on .label.on {
        color: black;
      }
      .toggle-component.off .label.off {
        color: black;
      }
      .toggle-component.on .toggle {
        right: -1px;
      }
      .toggle-component.off .toggle {
        left: -1px;
      }
    `,c=document.createElement("style");c.appendChild(document.createTextNode(r)),this.shadowRoot.appendChild(c)}connectedCallback(){this.hasStartedInitialization||(this.hasStartedInitialization=!0,this.initialize())}}function Le(){const i={destLocation:B.DevtoolsPrivate,origLocation:B.ContentScript,responseCode:P.N,payload:{event:b.OpenSelectorGeneratorPanel}},r=Re(i);window[Me](r)}const Y=B.ContentScript;function H(i,r){const c={destLocation:B.DevtoolsScript,origLocation:Y,payload:i,...se(r)};J(c)}window.sendToDevtoolsScript=H;function q(i,r){const c={destLocation:B.DevtoolsPrivate,origLocation:Y,payload:i,...se(r)};J(c)}function st(i,r){const c={destLocation:B.Core,origLocation:Y,payload:i,...se(r)};J(c)}let ie;function ct(i){if(ie)throw new Error("onMessage has already been called");ie=i}window[nt]=(i,r,c)=>{const p={destLocation:i,responseCode:r,...c};if(p.destLocation===Y)rt(p)?dt(p):at(p);else throw new Error("Unknown destLocation")};const re={};function at(i){const c=it(i)?p=>ut(i,p):void 0;ie(i.payload,c)}function dt(i){const r=re[i.responseId];if(!r)throw new Error(`Incoming response (${i.responseId}) could not be handled`);delete re[i.responseId],clearTimeout(r.timeoutId),r.responseFn(i.payload)}function ut(i,r){const c=P.R,{responseId:p,origLocation:h}=i,E={destLocation:h,origLocation:B.Core,responseId:p,responseCode:c,payload:r};J(E)}function J(i){const r=Re(i);window[Me](r)}function se(i){if(i){const r=ot();return re[r]={responseFn:i,timeoutId:setTimeout(()=>{throw new Error(`Response for ${r} not received within 10s`)},1e4)},{responseCode:P.Y,responseId:r}}return{responseCode:P.N}}const R={};class pt{constructor(){this.includedElementsById=new Map,this.excludedElementsById=new Map}get includedElements(){return Array.from(this.includedElementsById.values())}async getByBackendNodeId(r){const c=window.onElementFromCore.name,h=await new Promise((E,v)=>{R[r]={resolve:E,reject:v},st({event:b.ContentScriptNeedsElement,backendNodeId:r,callbackFnName:c})});return delete R[r],h}reset(){this.includedElementsById=new Map,this.excludedElementsById=new Map}isIncludedBackendNodeId(r){return this.includedElementsById.has(r)}addIncludedElement(r,c){const p=Be(c);this.includedElementsById.set(r,c),this.removeExcludedElement(r);const h={event:b.AddIncludedElement,name:p,backendNodeId:r};H(h),q(h)}removeIncludedElement(r){this.includedElementsById.delete(r);const c={event:b.RemoveIncludedElement,backendNodeId:r};H(c),q(c)}isExcludedBackendNodeId(r){return this.excludedElementsById.has(r)}addExcludedElement(r,c){const p=Be(c);this.excludedElementsById.set(r,c),this.removeIncludedElement(r);const h={event:b.AddExcludedElement,backendNodeId:r,name:p};H(h),q(h)}removeExcludedElement(r){this.excludedElementsById.delete(r);const c={event:b.RemoveExcludedElement,backendNodeId:r};H(c),q(c)}getByKey(r){return this.includedElementsById.get(r)||this.excludedElementsById.get(r)}}function Be(i){const r=i.outerHTML,c=r.length,p=r[c-2]==="/"?c:c-i.innerHTML.length-(i.tagName.length+3);return r.slice(0,p)}window.onElementFromCore=function(r,c){R[r]&&(R[r].resolve(c),delete R[r])};const K={tag:1,id:2,class:3,attr:4};function Pe(i,r){return i.length-r.length}function ht(i){const r=Et(i),c=yt(i),p=vt(r,c),h=[...c,r],E=wt(h,p);console.log("target: ",r),console.log("ancestors: ",c),console.log("ancestorsKeyPairs: ",p),console.log("possibleSelectors: ",E);const v=ft(h,p);return console.log("selectors: ",v),v.sort(Pe)}function ft(i,r){const c=[];let h=0;for(;c.length<1e3;){const E=1e3-c.length,v=mt(h,i,r,E);for(const x of v)document.querySelectorAll(x).length===1&&c.push(x);h+=1}return c}function mt(i,r,c,p){const h=[];for(const E of c.filter(v=>v.length===i+2)){let v=[""];for(const x of E){let m=!1;const _=r[x].selectorOptions.filter(S=>S.length===i+1);v=gt(v,_,m)}if(h.push(...v),h.length>=p)break}return h}function gt(i,r,c){const p=[],h=c?" > ":" ";for(const E of r)try{const v=E.join("");for(const x of i)p.push(`${x}${h}${v}`)}catch(v){throw console.log(E),v}return p}function vt(i,r){const c=$e(Object.keys(r)),p=[];for(const h of c)p.push([...h,r.length.toString()]);return p.sort(Pe)}function Et(i){const r=je(i),c=i.parentElement;try{const p=r.filter(h=>c.querySelectorAll(h.join("")).length===1);return{element:i,selectorOptions:p}}catch(p){throw console.log(r),p}}function yt(i){const r=[];for(;i;){const c=i.parentElement;if(c.localName==="body")break;const p=je(c);r.unshift({element:c,selectorOptions:p}),i=c}return r}function je(i){const r=i.localName,c=i.id&&!i.id.match(/^[0-9]/)?`#${i.id}`:null,p=Array.from(i.classList).map(m=>`.${m}`),E=i.getAttributeNames().filter(m=>!["class"].includes(m)).map(m=>{const C=i.getAttribute(m);if(!(m==="id"&&C&&!C.match(/^[0-9]/)))return`[${m}="${C}"]`}),v=[{type:"tag",rank:K.tag,value:r},{type:"id",rank:K.id,value:c},...p.map(m=>({type:"class",rank:K.class,value:m})),...E.map(m=>({type:"attr",rank:K.attr,value:m}))].filter(m=>m.value),x=$e(v).map(m=>m.sort((C,_)=>C.rank-_.rank));return x.sort((m,C)=>{let _=m.length;m.some(I=>I.type==="attr")&&(_+=1),m[0].type==="attr"&&(_+=1);let S=C.length;return C.some(I=>I.type==="attr")&&(S+=1),C[0].type==="attr"&&(S+=1),_-S}),x.map(m=>m.map(C=>C.value))}function $e(i){function r(c,p,h){if(!(!c.length&&!p.length))return p.length?(r([...c,p[0]],p.slice(1),h),r([...c],p.slice(1),h)):h.push(c),h}return r([],[...i],[])}function wt(i,r){let c=0;for(const p of r){let h=1;for(const E of p)h*=i[E].selectorOptions.length;c+=h}return c}customElements.define("chromealive-element-options-overlay",lt);const L=new pt;ct(async i=>{const{event:r,backendNodeId:c}=i;if(r===b.InspectElementModeChanged)i.isActive;else if(r!==b.OpenElementOptionsOverlay){if(r!==b.HideElementOptionsOverlay){if(r!==b.RemoveHideFromElementOptionsOverlay){if(r!==b.CloseElementOptionsOverlay)if(r===b.UpdateElementOptions){if("isIncluded"in i)if(i.isIncluded){const p=await L.getByBackendNodeId(c);L.addIncludedElement(c,p)}else L.removeIncludedElement(c);else if("isExcluded"in i)if(i.isExcluded){const p=await L.getByBackendNodeId(c);L.addExcludedElement(c,p)}else L.removeExcludedElement(c)}else if(r===b.RunSelectorGenerator){const p=L.includedElements[0],h=ht(p).map(E=>E.split(" "));H({event:b.FinishedSelectorGeneration,selectors:h})}else r===b.ResetSelectorGenerator?L.reset():console.log("UNHANDLED MESSAGE: ",i)}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B3ZWJjb21wb25lbnRzL2N1c3RvbS1lbGVtZW50cy9jdXN0b20tZWxlbWVudHMubWluLmpzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25hbm9pZC9pbmRleC5icm93c2VyLmpzIiwiLi4vLi4vLi4vLi4vLi4vY29yZS9saWIvQnJpZGdlSGVscGVycy50cyIsIi4uLy4uLy4uLy4uLy4uL2Nocm9tZS1leHRlbnNpb24vc3JjL2xpYi9FbGVtZW50T3B0aW9uc092ZXJsYXkudHMiLCIuLi8uLi8uLi8uLi8uLi9jaHJvbWUtZXh0ZW5zaW9uL3NyYy9saWIvY29udGVudC9Db250ZW50TWVzc2VuZ2VyLnRzIiwiLi4vLi4vLi4vLi4vLi4vY2hyb21lLWV4dGVuc2lvbi9zcmMvbGliL0VsZW1lbnRzQnVja2V0LnRzIiwiLi4vLi4vLi4vLi4vLi4vY2hyb21lLWV4dGVuc2lvbi9zcmMvbGliL2NvbnRlbnQvZmluZFNlbGVjdG9ycy50cyIsIi4uLy4uLy4uLy4uLy4uL2Nocm9tZS1leHRlbnNpb24vc3JjL2NvbnRlbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XG4vKlxuXG4gQ29weXJpZ2h0IChjKSAyMDE2IFRoZSBQb2x5bWVyIFByb2plY3QgQXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiBUaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXRcbiBodHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZFxuIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9BVVRIT1JTLnR4dCBUaGUgY29tcGxldGUgc2V0IG9mIGNvbnRyaWJ1dG9ycyBtYXlcbiBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4dCBDb2RlIGRpc3RyaWJ1dGVkIGJ5XG4gR29vZ2xlIGFzIHBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUFxuIHJpZ2h0cyBncmFudCBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vUEFURU5UUy50eHRcbiovXG4ndXNlIHN0cmljdCc7dmFyIG49d2luZG93LkRvY3VtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50LHA9d2luZG93LkRvY3VtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50TlMsYWE9d2luZG93LkRvY3VtZW50LnByb3RvdHlwZS5pbXBvcnROb2RlLGJhPXdpbmRvdy5Eb2N1bWVudC5wcm90b3R5cGUucHJlcGVuZCxjYT13aW5kb3cuRG9jdW1lbnQucHJvdG90eXBlLmFwcGVuZCxkYT13aW5kb3cuRG9jdW1lbnRGcmFnbWVudC5wcm90b3R5cGUucHJlcGVuZCxlYT13aW5kb3cuRG9jdW1lbnRGcmFnbWVudC5wcm90b3R5cGUuYXBwZW5kLHE9d2luZG93Lk5vZGUucHJvdG90eXBlLmNsb25lTm9kZSxyPXdpbmRvdy5Ob2RlLnByb3RvdHlwZS5hcHBlbmRDaGlsZCx0PXdpbmRvdy5Ob2RlLnByb3RvdHlwZS5pbnNlcnRCZWZvcmUsdT13aW5kb3cuTm9kZS5wcm90b3R5cGUucmVtb3ZlQ2hpbGQsdj13aW5kb3cuTm9kZS5wcm90b3R5cGUucmVwbGFjZUNoaWxkLHc9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih3aW5kb3cuTm9kZS5wcm90b3R5cGUsXG5cInRleHRDb250ZW50XCIpLHk9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLmF0dGFjaFNoYWRvdyx6PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iod2luZG93LkVsZW1lbnQucHJvdG90eXBlLFwiaW5uZXJIVE1MXCIpLEE9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLmdldEF0dHJpYnV0ZSxCPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGUsQz13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQXR0cmlidXRlLEQ9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLnRvZ2dsZUF0dHJpYnV0ZSxFPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5nZXRBdHRyaWJ1dGVOUyxGPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGVOUyxHPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5yZW1vdmVBdHRyaWJ1dGVOUyxIPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5pbnNlcnRBZGphY2VudEVsZW1lbnQsZmE9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLmluc2VydEFkamFjZW50SFRNTCxcbmhhPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5wcmVwZW5kLGlhPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5hcHBlbmQsamE9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLmJlZm9yZSxrYT13aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuYWZ0ZXIsbGE9d2luZG93LkVsZW1lbnQucHJvdG90eXBlLnJlcGxhY2VXaXRoLG1hPXdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5yZW1vdmUsbmE9d2luZG93LkhUTUxFbGVtZW50LEk9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih3aW5kb3cuSFRNTEVsZW1lbnQucHJvdG90eXBlLFwiaW5uZXJIVE1MXCIpLG9hPXdpbmRvdy5IVE1MRWxlbWVudC5wcm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50LHBhPXdpbmRvdy5IVE1MRWxlbWVudC5wcm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRIVE1MO3ZhciBxYT1uZXcgU2V0O1wiYW5ub3RhdGlvbi14bWwgY29sb3ItcHJvZmlsZSBmb250LWZhY2UgZm9udC1mYWNlLXNyYyBmb250LWZhY2UtdXJpIGZvbnQtZmFjZS1mb3JtYXQgZm9udC1mYWNlLW5hbWUgbWlzc2luZy1nbHlwaFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBxYS5hZGQoYSl9KTtmdW5jdGlvbiByYShhKXt2YXIgYj1xYS5oYXMoYSk7YT0vXlthLXpdWy4wLTlfYS16XSotWy0uMC05X2Etel0qJC8udGVzdChhKTtyZXR1cm4hYiYmYX12YXIgc2E9ZG9jdW1lbnQuY29udGFpbnM/ZG9jdW1lbnQuY29udGFpbnMuYmluZChkb2N1bWVudCk6ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNvbnRhaW5zLmJpbmQoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTtcbmZ1bmN0aW9uIEooYSl7dmFyIGI9YS5pc0Nvbm5lY3RlZDtpZih2b2lkIDAhPT1iKXJldHVybiBiO2lmKHNhKGEpKXJldHVybiEwO2Zvcig7YSYmIShhLl9fQ0VfaXNJbXBvcnREb2N1bWVudHx8YSBpbnN0YW5jZW9mIERvY3VtZW50KTspYT1hLnBhcmVudE5vZGV8fCh3aW5kb3cuU2hhZG93Um9vdCYmYSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Q/YS5ob3N0OnZvaWQgMCk7cmV0dXJuISghYXx8IShhLl9fQ0VfaXNJbXBvcnREb2N1bWVudHx8YSBpbnN0YW5jZW9mIERvY3VtZW50KSl9ZnVuY3Rpb24gSyhhKXt2YXIgYj1hLmNoaWxkcmVuO2lmKGIpcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGIpO2I9W107Zm9yKGE9YS5maXJzdENoaWxkO2E7YT1hLm5leHRTaWJsaW5nKWEubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERSYmYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gTChhLGIpe2Zvcig7YiYmYiE9PWEmJiFiLm5leHRTaWJsaW5nOyliPWIucGFyZW50Tm9kZTtyZXR1cm4gYiYmYiE9PWE/Yi5uZXh0U2libGluZzpudWxsfVxuZnVuY3Rpb24gTShhLGIsZCl7Zm9yKHZhciBmPWE7Zjspe2lmKGYubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERSl7dmFyIGM9ZjtiKGMpO3ZhciBlPWMubG9jYWxOYW1lO2lmKFwibGlua1wiPT09ZSYmXCJpbXBvcnRcIj09PWMuZ2V0QXR0cmlidXRlKFwicmVsXCIpKXtmPWMuaW1wb3J0O3ZvaWQgMD09PWQmJihkPW5ldyBTZXQpO2lmKGYgaW5zdGFuY2VvZiBOb2RlJiYhZC5oYXMoZikpZm9yKGQuYWRkKGYpLGY9Zi5maXJzdENoaWxkO2Y7Zj1mLm5leHRTaWJsaW5nKU0oZixiLGQpO2Y9TChhLGMpO2NvbnRpbnVlfWVsc2UgaWYoXCJ0ZW1wbGF0ZVwiPT09ZSl7Zj1MKGEsYyk7Y29udGludWV9aWYoYz1jLl9fQ0Vfc2hhZG93Um9vdClmb3IoYz1jLmZpcnN0Q2hpbGQ7YztjPWMubmV4dFNpYmxpbmcpTShjLGIsZCl9Zj1mLmZpcnN0Q2hpbGQ/Zi5maXJzdENoaWxkOkwoYSxmKX19O2Z1bmN0aW9uIE4oKXt2YXIgYT0hKG51bGw9PT1PfHx2b2lkIDA9PT1PfHwhTy5ub0RvY3VtZW50Q29uc3RydWN0aW9uT2JzZXJ2ZXIpLGI9IShudWxsPT09T3x8dm9pZCAwPT09T3x8IU8uc2hhZHlEb21GYXN0V2Fsayk7dGhpcy5tPVtdO3RoaXMuZz1bXTt0aGlzLmo9ITE7dGhpcy5zaGFkeURvbUZhc3RXYWxrPWI7dGhpcy5JPSFhfWZ1bmN0aW9uIFAoYSxiLGQsZil7dmFyIGM9d2luZG93LlNoYWR5RE9NO2lmKGEuc2hhZHlEb21GYXN0V2FsayYmYyYmYy5pblVzZSl7aWYoYi5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFJiZkKGIpLGIucXVlcnlTZWxlY3RvckFsbClmb3IoYT1jLm5hdGl2ZU1ldGhvZHMucXVlcnlTZWxlY3RvckFsbC5jYWxsKGIsXCIqXCIpLGI9MDtiPGEubGVuZ3RoO2IrKylkKGFbYl0pfWVsc2UgTShiLGQsZil9ZnVuY3Rpb24gdGEoYSxiKXthLmo9ITA7YS5tLnB1c2goYil9ZnVuY3Rpb24gdWEoYSxiKXthLmo9ITA7YS5nLnB1c2goYil9XG5mdW5jdGlvbiBRKGEsYil7YS5qJiZQKGEsYixmdW5jdGlvbihkKXtyZXR1cm4gUihhLGQpfSl9ZnVuY3Rpb24gUihhLGIpe2lmKGEuaiYmIWIuX19DRV9wYXRjaGVkKXtiLl9fQ0VfcGF0Y2hlZD0hMDtmb3IodmFyIGQ9MDtkPGEubS5sZW5ndGg7ZCsrKWEubVtkXShiKTtmb3IoZD0wO2Q8YS5nLmxlbmd0aDtkKyspYS5nW2RdKGIpfX1mdW5jdGlvbiBTKGEsYil7dmFyIGQ9W107UChhLGIsZnVuY3Rpb24oYyl7cmV0dXJuIGQucHVzaChjKX0pO2ZvcihiPTA7YjxkLmxlbmd0aDtiKyspe3ZhciBmPWRbYl07MT09PWYuX19DRV9zdGF0ZT9hLmNvbm5lY3RlZENhbGxiYWNrKGYpOlQoYSxmKX19ZnVuY3Rpb24gVShhLGIpe3ZhciBkPVtdO1AoYSxiLGZ1bmN0aW9uKGMpe3JldHVybiBkLnB1c2goYyl9KTtmb3IoYj0wO2I8ZC5sZW5ndGg7YisrKXt2YXIgZj1kW2JdOzE9PT1mLl9fQ0Vfc3RhdGUmJmEuZGlzY29ubmVjdGVkQ2FsbGJhY2soZil9fVxuZnVuY3Rpb24gVihhLGIsZCl7ZD12b2lkIDA9PT1kP3t9OmQ7dmFyIGY9ZC5KLGM9ZC51cGdyYWRlfHxmdW5jdGlvbihnKXtyZXR1cm4gVChhLGcpfSxlPVtdO1AoYSxiLGZ1bmN0aW9uKGcpe2EuaiYmUihhLGcpO2lmKFwibGlua1wiPT09Zy5sb2NhbE5hbWUmJlwiaW1wb3J0XCI9PT1nLmdldEF0dHJpYnV0ZShcInJlbFwiKSl7dmFyIGg9Zy5pbXBvcnQ7aCBpbnN0YW5jZW9mIE5vZGUmJihoLl9fQ0VfaXNJbXBvcnREb2N1bWVudD0hMCxoLl9fQ0VfcmVnaXN0cnk9ZG9jdW1lbnQuX19DRV9yZWdpc3RyeSk7aCYmXCJjb21wbGV0ZVwiPT09aC5yZWFkeVN0YXRlP2guX19DRV9kb2N1bWVudExvYWRIYW5kbGVkPSEwOmcuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbigpe3ZhciBrPWcuaW1wb3J0O2lmKCFrLl9fQ0VfZG9jdW1lbnRMb2FkSGFuZGxlZCl7ay5fX0NFX2RvY3VtZW50TG9hZEhhbmRsZWQ9ITA7dmFyIGw9bmV3IFNldDtmJiYoZi5mb3JFYWNoKGZ1bmN0aW9uKG0pe3JldHVybiBsLmFkZChtKX0pLFxubC5kZWxldGUoaykpO1YoYSxrLHtKOmwsdXBncmFkZTpjfSl9fSl9ZWxzZSBlLnB1c2goZyl9LGYpO2ZvcihiPTA7YjxlLmxlbmd0aDtiKyspYyhlW2JdKX1cbmZ1bmN0aW9uIFQoYSxiKXt0cnl7dmFyIGQ9Yi5vd25lckRvY3VtZW50LGY9ZC5fX0NFX3JlZ2lzdHJ5O3ZhciBjPWYmJihkLmRlZmF1bHRWaWV3fHxkLl9fQ0VfaXNJbXBvcnREb2N1bWVudCk/VyhmLGIubG9jYWxOYW1lKTp2b2lkIDA7aWYoYyYmdm9pZCAwPT09Yi5fX0NFX3N0YXRlKXtjLmNvbnN0cnVjdGlvblN0YWNrLnB1c2goYik7dHJ5e3RyeXtpZihuZXcgYy5jb25zdHJ1Y3RvckZ1bmN0aW9uIT09Yil0aHJvdyBFcnJvcihcIlRoZSBjdXN0b20gZWxlbWVudCBjb25zdHJ1Y3RvciBkaWQgbm90IHByb2R1Y2UgdGhlIGVsZW1lbnQgYmVpbmcgdXBncmFkZWQuXCIpO31maW5hbGx5e2MuY29uc3RydWN0aW9uU3RhY2sucG9wKCl9fWNhdGNoKGspe3Rocm93IGIuX19DRV9zdGF0ZT0yLGs7fWIuX19DRV9zdGF0ZT0xO2IuX19DRV9kZWZpbml0aW9uPWM7aWYoYy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2smJmIuaGFzQXR0cmlidXRlcygpKXt2YXIgZT1jLm9ic2VydmVkQXR0cmlidXRlcztcbmZvcihjPTA7YzxlLmxlbmd0aDtjKyspe3ZhciBnPWVbY10saD1iLmdldEF0dHJpYnV0ZShnKTtudWxsIT09aCYmYS5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soYixnLG51bGwsaCxudWxsKX19SihiKSYmYS5jb25uZWN0ZWRDYWxsYmFjayhiKX19Y2F0Y2goayl7WChrKX19Ti5wcm90b3R5cGUuY29ubmVjdGVkQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9YS5fX0NFX2RlZmluaXRpb247aWYoYi5jb25uZWN0ZWRDYWxsYmFjayl0cnl7Yi5jb25uZWN0ZWRDYWxsYmFjay5jYWxsKGEpfWNhdGNoKGQpe1goZCl9fTtOLnByb3RvdHlwZS5kaXNjb25uZWN0ZWRDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1hLl9fQ0VfZGVmaW5pdGlvbjtpZihiLmRpc2Nvbm5lY3RlZENhbGxiYWNrKXRyeXtiLmRpc2Nvbm5lY3RlZENhbGxiYWNrLmNhbGwoYSl9Y2F0Y2goZCl7WChkKX19O1xuTi5wcm90b3R5cGUuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrPWZ1bmN0aW9uKGEsYixkLGYsYyl7dmFyIGU9YS5fX0NFX2RlZmluaXRpb247aWYoZS5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2smJi0xPGUub2JzZXJ2ZWRBdHRyaWJ1dGVzLmluZGV4T2YoYikpdHJ5e2UuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrLmNhbGwoYSxiLGQsZixjKX1jYXRjaChnKXtYKGcpfX07XG5mdW5jdGlvbiB2YShhLGIsZCxmKXt2YXIgYz1iLl9fQ0VfcmVnaXN0cnk7aWYoYyYmKG51bGw9PT1mfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWYpJiYoYz1XKGMsZCkpKXRyeXt2YXIgZT1uZXcgYy5jb25zdHJ1Y3RvckZ1bmN0aW9uO2lmKHZvaWQgMD09PWUuX19DRV9zdGF0ZXx8dm9pZCAwPT09ZS5fX0NFX2RlZmluaXRpb24pdGhyb3cgRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdcIitkK1wiJzogVGhlIHJldHVybmVkIHZhbHVlIHdhcyBub3QgY29uc3RydWN0ZWQgd2l0aCB0aGUgSFRNTEVsZW1lbnQgY29uc3RydWN0b3IuXCIpO2lmKFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiIT09ZS5uYW1lc3BhY2VVUkkpdGhyb3cgRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdcIitkK1wiJzogVGhlIGNvbnN0cnVjdGVkIGVsZW1lbnQncyBuYW1lc3BhY2UgbXVzdCBiZSB0aGUgSFRNTCBuYW1lc3BhY2UuXCIpO2lmKGUuaGFzQXR0cmlidXRlcygpKXRocm93IEVycm9yKFwiRmFpbGVkIHRvIGNvbnN0cnVjdCAnXCIrXG5kK1wiJzogVGhlIGNvbnN0cnVjdGVkIGVsZW1lbnQgbXVzdCBub3QgaGF2ZSBhbnkgYXR0cmlidXRlcy5cIik7aWYobnVsbCE9PWUuZmlyc3RDaGlsZCl0aHJvdyBFcnJvcihcIkZhaWxlZCB0byBjb25zdHJ1Y3QgJ1wiK2QrXCInOiBUaGUgY29uc3RydWN0ZWQgZWxlbWVudCBtdXN0IG5vdCBoYXZlIGFueSBjaGlsZHJlbi5cIik7aWYobnVsbCE9PWUucGFyZW50Tm9kZSl0aHJvdyBFcnJvcihcIkZhaWxlZCB0byBjb25zdHJ1Y3QgJ1wiK2QrXCInOiBUaGUgY29uc3RydWN0ZWQgZWxlbWVudCBtdXN0IG5vdCBoYXZlIGEgcGFyZW50IG5vZGUuXCIpO2lmKGUub3duZXJEb2N1bWVudCE9PWIpdGhyb3cgRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdcIitkK1wiJzogVGhlIGNvbnN0cnVjdGVkIGVsZW1lbnQncyBvd25lciBkb2N1bWVudCBpcyBpbmNvcnJlY3QuXCIpO2lmKGUubG9jYWxOYW1lIT09ZCl0aHJvdyBFcnJvcihcIkZhaWxlZCB0byBjb25zdHJ1Y3QgJ1wiK2QrXCInOiBUaGUgY29uc3RydWN0ZWQgZWxlbWVudCdzIGxvY2FsIG5hbWUgaXMgaW5jb3JyZWN0LlwiKTtcbnJldHVybiBlfWNhdGNoKGcpe3JldHVybiBYKGcpLGI9bnVsbD09PWY/bi5jYWxsKGIsZCk6cC5jYWxsKGIsZixkKSxPYmplY3Quc2V0UHJvdG90eXBlT2YoYixIVE1MVW5rbm93bkVsZW1lbnQucHJvdG90eXBlKSxiLl9fQ0Vfc3RhdGU9MixiLl9fQ0VfZGVmaW5pdGlvbj12b2lkIDAsUihhLGIpLGJ9Yj1udWxsPT09Zj9uLmNhbGwoYixkKTpwLmNhbGwoYixmLGQpO1IoYSxiKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFgoYSl7dmFyIGI9XCJcIixkPVwiXCIsZj0wLGM9MDthIGluc3RhbmNlb2YgRXJyb3I/KGI9YS5tZXNzYWdlLGQ9YS5zb3VyY2VVUkx8fGEuZmlsZU5hbWV8fFwiXCIsZj1hLmxpbmV8fGEubGluZU51bWJlcnx8MCxjPWEuY29sdW1ufHxhLmNvbHVtbk51bWJlcnx8MCk6Yj1cIlVuY2F1Z2h0IFwiK1N0cmluZyhhKTt2YXIgZT12b2lkIDA7dm9pZCAwPT09RXJyb3JFdmVudC5wcm90b3R5cGUuaW5pdEVycm9yRXZlbnQ/ZT1uZXcgRXJyb3JFdmVudChcImVycm9yXCIse2NhbmNlbGFibGU6ITAsbWVzc2FnZTpiLGZpbGVuYW1lOmQsbGluZW5vOmYsY29sbm86YyxlcnJvcjphfSk6KGU9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJFcnJvckV2ZW50XCIpLGUuaW5pdEVycm9yRXZlbnQoXCJlcnJvclwiLCExLCEwLGIsZCxmKSxlLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJkZWZhdWx0UHJldmVudGVkXCIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH19KX0pO1xudm9pZCAwPT09ZS5lcnJvciYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJlcnJvclwiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYX19KTt3aW5kb3cuZGlzcGF0Y2hFdmVudChlKTtlLmRlZmF1bHRQcmV2ZW50ZWR8fGNvbnNvbGUuZXJyb3IoYSl9O2Z1bmN0aW9uIHdhKCl7dmFyIGE9dGhpczt0aGlzLmc9dm9pZCAwO3RoaXMuRj1uZXcgUHJvbWlzZShmdW5jdGlvbihiKXthLmw9Yn0pfXdhLnByb3RvdHlwZS5yZXNvbHZlPWZ1bmN0aW9uKGEpe2lmKHRoaXMuZyl0aHJvdyBFcnJvcihcIkFscmVhZHkgcmVzb2x2ZWQuXCIpO3RoaXMuZz1hO3RoaXMubChhKX07ZnVuY3Rpb24geGEoYSl7dmFyIGI9ZG9jdW1lbnQ7dGhpcy5sPXZvaWQgMDt0aGlzLmg9YTt0aGlzLmc9YjtWKHRoaXMuaCx0aGlzLmcpO1wibG9hZGluZ1wiPT09dGhpcy5nLnJlYWR5U3RhdGUmJih0aGlzLmw9bmV3IE11dGF0aW9uT2JzZXJ2ZXIodGhpcy5HLmJpbmQodGhpcykpLHRoaXMubC5vYnNlcnZlKHRoaXMuZyx7Y2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KSl9ZnVuY3Rpb24geWEoYSl7YS5sJiZhLmwuZGlzY29ubmVjdCgpfXhhLnByb3RvdHlwZS5HPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZy5yZWFkeVN0YXRlO1wiaW50ZXJhY3RpdmVcIiE9PWImJlwiY29tcGxldGVcIiE9PWJ8fHlhKHRoaXMpO2ZvcihiPTA7YjxhLmxlbmd0aDtiKyspZm9yKHZhciBkPWFbYl0uYWRkZWROb2RlcyxmPTA7ZjxkLmxlbmd0aDtmKyspVih0aGlzLmgsZFtmXSl9O2Z1bmN0aW9uIFkoYSl7dGhpcy5zPW5ldyBNYXA7dGhpcy51PW5ldyBNYXA7dGhpcy5DPW5ldyBNYXA7dGhpcy5BPSExO3RoaXMuQj1uZXcgTWFwO3RoaXMubz1mdW5jdGlvbihiKXtyZXR1cm4gYigpfTt0aGlzLmk9ITE7dGhpcy52PVtdO3RoaXMuaD1hO3RoaXMuRD1hLkk/bmV3IHhhKGEpOnZvaWQgMH1ZLnByb3RvdHlwZS5IPWZ1bmN0aW9uKGEsYil7dmFyIGQ9dGhpcztpZighKGIgaW5zdGFuY2VvZiBGdW5jdGlvbikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkN1c3RvbSBlbGVtZW50IGNvbnN0cnVjdG9yIGdldHRlcnMgbXVzdCBiZSBmdW5jdGlvbnMuXCIpO3phKHRoaXMsYSk7dGhpcy5zLnNldChhLGIpO3RoaXMudi5wdXNoKGEpO3RoaXMuaXx8KHRoaXMuaT0hMCx0aGlzLm8oZnVuY3Rpb24oKXtyZXR1cm4gQWEoZCl9KSl9O1xuWS5wcm90b3R5cGUuZGVmaW5lPWZ1bmN0aW9uKGEsYil7dmFyIGQ9dGhpcztpZighKGIgaW5zdGFuY2VvZiBGdW5jdGlvbikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkN1c3RvbSBlbGVtZW50IGNvbnN0cnVjdG9ycyBtdXN0IGJlIGZ1bmN0aW9ucy5cIik7emEodGhpcyxhKTtCYSh0aGlzLGEsYik7dGhpcy52LnB1c2goYSk7dGhpcy5pfHwodGhpcy5pPSEwLHRoaXMubyhmdW5jdGlvbigpe3JldHVybiBBYShkKX0pKX07ZnVuY3Rpb24gemEoYSxiKXtpZighcmEoYikpdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiVGhlIGVsZW1lbnQgbmFtZSAnXCIrYitcIicgaXMgbm90IHZhbGlkLlwiKTtpZihXKGEsYikpdGhyb3cgRXJyb3IoXCJBIGN1c3RvbSBlbGVtZW50IHdpdGggbmFtZSAnXCIrKGIrXCInIGhhcyBhbHJlYWR5IGJlZW4gZGVmaW5lZC5cIikpO2lmKGEuQSl0aHJvdyBFcnJvcihcIkEgY3VzdG9tIGVsZW1lbnQgaXMgYWxyZWFkeSBiZWluZyBkZWZpbmVkLlwiKTt9XG5mdW5jdGlvbiBCYShhLGIsZCl7YS5BPSEwO3ZhciBmO3RyeXt2YXIgYz1kLnByb3RvdHlwZTtpZighKGMgaW5zdGFuY2VvZiBPYmplY3QpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgY3VzdG9tIGVsZW1lbnQgY29uc3RydWN0b3IncyBwcm90b3R5cGUgaXMgbm90IGFuIG9iamVjdC5cIik7dmFyIGU9ZnVuY3Rpb24obSl7dmFyIHg9Y1ttXTtpZih2b2lkIDAhPT14JiYhKHggaW5zdGFuY2VvZiBGdW5jdGlvbikpdGhyb3cgRXJyb3IoXCJUaGUgJ1wiK20rXCInIGNhbGxiYWNrIG11c3QgYmUgYSBmdW5jdGlvbi5cIik7cmV0dXJuIHh9O3ZhciBnPWUoXCJjb25uZWN0ZWRDYWxsYmFja1wiKTt2YXIgaD1lKFwiZGlzY29ubmVjdGVkQ2FsbGJhY2tcIik7dmFyIGs9ZShcImFkb3B0ZWRDYWxsYmFja1wiKTt2YXIgbD0oZj1lKFwiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrXCIpKSYmZC5vYnNlcnZlZEF0dHJpYnV0ZXN8fFtdfWNhdGNoKG0pe3Rocm93IG07fWZpbmFsbHl7YS5BPSExfWQ9e2xvY2FsTmFtZTpiLFxuY29uc3RydWN0b3JGdW5jdGlvbjpkLGNvbm5lY3RlZENhbGxiYWNrOmcsZGlzY29ubmVjdGVkQ2FsbGJhY2s6aCxhZG9wdGVkQ2FsbGJhY2s6ayxhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2s6ZixvYnNlcnZlZEF0dHJpYnV0ZXM6bCxjb25zdHJ1Y3Rpb25TdGFjazpbXX07YS51LnNldChiLGQpO2EuQy5zZXQoZC5jb25zdHJ1Y3RvckZ1bmN0aW9uLGQpO3JldHVybiBkfVkucHJvdG90eXBlLnVwZ3JhZGU9ZnVuY3Rpb24oYSl7Vih0aGlzLmgsYSl9O1xuZnVuY3Rpb24gQWEoYSl7aWYoITEhPT1hLmkpe2EuaT0hMTtmb3IodmFyIGI9W10sZD1hLnYsZj1uZXcgTWFwLGM9MDtjPGQubGVuZ3RoO2MrKylmLnNldChkW2NdLFtdKTtWKGEuaCxkb2N1bWVudCx7dXBncmFkZTpmdW5jdGlvbihrKXtpZih2b2lkIDA9PT1rLl9fQ0Vfc3RhdGUpe3ZhciBsPWsubG9jYWxOYW1lLG09Zi5nZXQobCk7bT9tLnB1c2goayk6YS51LmhhcyhsKSYmYi5wdXNoKGspfX19KTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKVQoYS5oLGJbY10pO2ZvcihjPTA7YzxkLmxlbmd0aDtjKyspe2Zvcih2YXIgZT1kW2NdLGc9Zi5nZXQoZSksaD0wO2g8Zy5sZW5ndGg7aCsrKVQoYS5oLGdbaF0pOyhlPWEuQi5nZXQoZSkpJiZlLnJlc29sdmUodm9pZCAwKX1kLmxlbmd0aD0wfX1ZLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oYSl7aWYoYT1XKHRoaXMsYSkpcmV0dXJuIGEuY29uc3RydWN0b3JGdW5jdGlvbn07XG5ZLnByb3RvdHlwZS53aGVuRGVmaW5lZD1mdW5jdGlvbihhKXtpZighcmEoYSkpcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBTeW50YXhFcnJvcihcIidcIithK1wiJyBpcyBub3QgYSB2YWxpZCBjdXN0b20gZWxlbWVudCBuYW1lLlwiKSk7dmFyIGI9dGhpcy5CLmdldChhKTtpZihiKXJldHVybiBiLkY7Yj1uZXcgd2E7dGhpcy5CLnNldChhLGIpO3ZhciBkPXRoaXMudS5oYXMoYSl8fHRoaXMucy5oYXMoYSk7YT0tMT09PXRoaXMudi5pbmRleE9mKGEpO2QmJmEmJmIucmVzb2x2ZSh2b2lkIDApO3JldHVybiBiLkZ9O1kucHJvdG90eXBlLnBvbHlmaWxsV3JhcEZsdXNoQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dGhpcy5EJiZ5YSh0aGlzLkQpO3ZhciBiPXRoaXMubzt0aGlzLm89ZnVuY3Rpb24oZCl7cmV0dXJuIGEoZnVuY3Rpb24oKXtyZXR1cm4gYihkKX0pfX07XG5mdW5jdGlvbiBXKGEsYil7dmFyIGQ9YS51LmdldChiKTtpZihkKXJldHVybiBkO2lmKGQ9YS5zLmdldChiKSl7YS5zLmRlbGV0ZShiKTt0cnl7cmV0dXJuIEJhKGEsYixkKCkpfWNhdGNoKGYpe1goZil9fX1ZLnByb3RvdHlwZS5kZWZpbmU9WS5wcm90b3R5cGUuZGVmaW5lO1kucHJvdG90eXBlLnVwZ3JhZGU9WS5wcm90b3R5cGUudXBncmFkZTtZLnByb3RvdHlwZS5nZXQ9WS5wcm90b3R5cGUuZ2V0O1kucHJvdG90eXBlLndoZW5EZWZpbmVkPVkucHJvdG90eXBlLndoZW5EZWZpbmVkO1kucHJvdG90eXBlLnBvbHlmaWxsRGVmaW5lTGF6eT1ZLnByb3RvdHlwZS5IO1kucHJvdG90eXBlLnBvbHlmaWxsV3JhcEZsdXNoQ2FsbGJhY2s9WS5wcm90b3R5cGUucG9seWZpbGxXcmFwRmx1c2hDYWxsYmFjaztmdW5jdGlvbiBaKGEsYixkKXtmdW5jdGlvbiBmKGMpe3JldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIGc9W10saD0wO2g8YXJndW1lbnRzLmxlbmd0aDsrK2gpZ1toXT1hcmd1bWVudHNbaF07aD1bXTtmb3IodmFyIGs9W10sbD0wO2w8Zy5sZW5ndGg7bCsrKXt2YXIgbT1nW2xdO20gaW5zdGFuY2VvZiBFbGVtZW50JiZKKG0pJiZrLnB1c2gobSk7aWYobSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpZm9yKG09bS5maXJzdENoaWxkO207bT1tLm5leHRTaWJsaW5nKWgucHVzaChtKTtlbHNlIGgucHVzaChtKX1jLmFwcGx5KHRoaXMsZyk7Zm9yKGc9MDtnPGsubGVuZ3RoO2crKylVKGEsa1tnXSk7aWYoSih0aGlzKSlmb3IoZz0wO2c8aC5sZW5ndGg7ZysrKWs9aFtnXSxrIGluc3RhbmNlb2YgRWxlbWVudCYmUyhhLGspfX12b2lkIDAhPT1kLnByZXBlbmQmJihiLnByZXBlbmQ9ZihkLnByZXBlbmQpKTt2b2lkIDAhPT1kLmFwcGVuZCYmKGIuYXBwZW5kPWYoZC5hcHBlbmQpKX07ZnVuY3Rpb24gQ2EoYSl7RG9jdW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnQ9ZnVuY3Rpb24oYil7cmV0dXJuIHZhKGEsdGhpcyxiLG51bGwpfTtEb2N1bWVudC5wcm90b3R5cGUuaW1wb3J0Tm9kZT1mdW5jdGlvbihiLGQpe2I9YWEuY2FsbCh0aGlzLGIsISFkKTt0aGlzLl9fQ0VfcmVnaXN0cnk/VihhLGIpOlEoYSxiKTtyZXR1cm4gYn07RG9jdW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnROUz1mdW5jdGlvbihiLGQpe3JldHVybiB2YShhLHRoaXMsZCxiKX07WihhLERvY3VtZW50LnByb3RvdHlwZSx7cHJlcGVuZDpiYSxhcHBlbmQ6Y2F9KX07ZnVuY3Rpb24gRGEoYSl7ZnVuY3Rpb24gYihmKXtyZXR1cm4gZnVuY3Rpb24oYyl7Zm9yKHZhciBlPVtdLGc9MDtnPGFyZ3VtZW50cy5sZW5ndGg7KytnKWVbZ109YXJndW1lbnRzW2ddO2c9W107Zm9yKHZhciBoPVtdLGs9MDtrPGUubGVuZ3RoO2srKyl7dmFyIGw9ZVtrXTtsIGluc3RhbmNlb2YgRWxlbWVudCYmSihsKSYmaC5wdXNoKGwpO2lmKGwgaW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50KWZvcihsPWwuZmlyc3RDaGlsZDtsO2w9bC5uZXh0U2libGluZylnLnB1c2gobCk7ZWxzZSBnLnB1c2gobCl9Zi5hcHBseSh0aGlzLGUpO2ZvcihlPTA7ZTxoLmxlbmd0aDtlKyspVShhLGhbZV0pO2lmKEoodGhpcykpZm9yKGU9MDtlPGcubGVuZ3RoO2UrKyloPWdbZV0saCBpbnN0YW5jZW9mIEVsZW1lbnQmJlMoYSxoKX19dmFyIGQ9RWxlbWVudC5wcm90b3R5cGU7dm9pZCAwIT09amEmJihkLmJlZm9yZT1iKGphKSk7dm9pZCAwIT09a2EmJihkLmFmdGVyPWIoa2EpKTt2b2lkIDAhPT1sYSYmXG4oZC5yZXBsYWNlV2l0aD1mdW5jdGlvbihmKXtmb3IodmFyIGM9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDsrK2UpY1tlXT1hcmd1bWVudHNbZV07ZT1bXTtmb3IodmFyIGc9W10saD0wO2g8Yy5sZW5ndGg7aCsrKXt2YXIgaz1jW2hdO2sgaW5zdGFuY2VvZiBFbGVtZW50JiZKKGspJiZnLnB1c2goayk7aWYoayBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpZm9yKGs9ay5maXJzdENoaWxkO2s7az1rLm5leHRTaWJsaW5nKWUucHVzaChrKTtlbHNlIGUucHVzaChrKX1oPUoodGhpcyk7bGEuYXBwbHkodGhpcyxjKTtmb3IoYz0wO2M8Zy5sZW5ndGg7YysrKVUoYSxnW2NdKTtpZihoKWZvcihVKGEsdGhpcyksYz0wO2M8ZS5sZW5ndGg7YysrKWc9ZVtjXSxnIGluc3RhbmNlb2YgRWxlbWVudCYmUyhhLGcpfSk7dm9pZCAwIT09bWEmJihkLnJlbW92ZT1mdW5jdGlvbigpe3ZhciBmPUoodGhpcyk7bWEuY2FsbCh0aGlzKTtmJiZVKGEsdGhpcyl9KX07ZnVuY3Rpb24gRWEoYSl7ZnVuY3Rpb24gYihjLGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShjLFwiaW5uZXJIVE1MXCIse2VudW1lcmFibGU6ZS5lbnVtZXJhYmxlLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZS5nZXQsc2V0OmZ1bmN0aW9uKGcpe3ZhciBoPXRoaXMsaz12b2lkIDA7Sih0aGlzKSYmKGs9W10sUChhLHRoaXMsZnVuY3Rpb24oeCl7eCE9PWgmJmsucHVzaCh4KX0pKTtlLnNldC5jYWxsKHRoaXMsZyk7aWYoaylmb3IodmFyIGw9MDtsPGsubGVuZ3RoO2wrKyl7dmFyIG09a1tsXTsxPT09bS5fX0NFX3N0YXRlJiZhLmRpc2Nvbm5lY3RlZENhbGxiYWNrKG0pfXRoaXMub3duZXJEb2N1bWVudC5fX0NFX3JlZ2lzdHJ5P1YoYSx0aGlzKTpRKGEsdGhpcyk7cmV0dXJuIGd9fSl9ZnVuY3Rpb24gZChjLGUpe2MuaW5zZXJ0QWRqYWNlbnRFbGVtZW50PWZ1bmN0aW9uKGcsaCl7dmFyIGs9SihoKTtnPWUuY2FsbCh0aGlzLGcsaCk7ayYmVShhLGgpO0ooZykmJlMoYSxoKTtyZXR1cm4gZ319ZnVuY3Rpb24gZihjLFxuZSl7ZnVuY3Rpb24gZyhoLGspe2Zvcih2YXIgbD1bXTtoIT09aztoPWgubmV4dFNpYmxpbmcpbC5wdXNoKGgpO2ZvcihrPTA7azxsLmxlbmd0aDtrKyspVihhLGxba10pfWMuaW5zZXJ0QWRqYWNlbnRIVE1MPWZ1bmN0aW9uKGgsayl7aD1oLnRvTG93ZXJDYXNlKCk7aWYoXCJiZWZvcmViZWdpblwiPT09aCl7dmFyIGw9dGhpcy5wcmV2aW91c1NpYmxpbmc7ZS5jYWxsKHRoaXMsaCxrKTtnKGx8fHRoaXMucGFyZW50Tm9kZS5maXJzdENoaWxkLHRoaXMpfWVsc2UgaWYoXCJhZnRlcmJlZ2luXCI9PT1oKWw9dGhpcy5maXJzdENoaWxkLGUuY2FsbCh0aGlzLGgsayksZyh0aGlzLmZpcnN0Q2hpbGQsbCk7ZWxzZSBpZihcImJlZm9yZWVuZFwiPT09aClsPXRoaXMubGFzdENoaWxkLGUuY2FsbCh0aGlzLGgsayksZyhsfHx0aGlzLmZpcnN0Q2hpbGQsbnVsbCk7ZWxzZSBpZihcImFmdGVyZW5kXCI9PT1oKWw9dGhpcy5uZXh0U2libGluZyxlLmNhbGwodGhpcyxoLGspLGcodGhpcy5uZXh0U2libGluZyxsKTtcbmVsc2UgdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiVGhlIHZhbHVlIHByb3ZpZGVkIChcIitTdHJpbmcoaCkrXCIpIGlzIG5vdCBvbmUgb2YgJ2JlZm9yZWJlZ2luJywgJ2FmdGVyYmVnaW4nLCAnYmVmb3JlZW5kJywgb3IgJ2FmdGVyZW5kJy5cIik7fX15JiYoRWxlbWVudC5wcm90b3R5cGUuYXR0YWNoU2hhZG93PWZ1bmN0aW9uKGMpe2M9eS5jYWxsKHRoaXMsYyk7aWYoYS5qJiYhYy5fX0NFX3BhdGNoZWQpe2MuX19DRV9wYXRjaGVkPSEwO2Zvcih2YXIgZT0wO2U8YS5tLmxlbmd0aDtlKyspYS5tW2VdKGMpfXJldHVybiB0aGlzLl9fQ0Vfc2hhZG93Um9vdD1jfSk7eiYmei5nZXQ/YihFbGVtZW50LnByb3RvdHlwZSx6KTpJJiZJLmdldD9iKEhUTUxFbGVtZW50LnByb3RvdHlwZSxJKTp1YShhLGZ1bmN0aW9uKGMpe2IoYyx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHEuY2FsbCh0aGlzLCEwKS5pbm5lckhUTUx9LHNldDpmdW5jdGlvbihlKXt2YXIgZz1cblwidGVtcGxhdGVcIj09PXRoaXMubG9jYWxOYW1lLGg9Zz90aGlzLmNvbnRlbnQ6dGhpcyxrPXAuY2FsbChkb2N1bWVudCx0aGlzLm5hbWVzcGFjZVVSSSx0aGlzLmxvY2FsTmFtZSk7Zm9yKGsuaW5uZXJIVE1MPWU7MDxoLmNoaWxkTm9kZXMubGVuZ3RoOyl1LmNhbGwoaCxoLmNoaWxkTm9kZXNbMF0pO2ZvcihlPWc/ay5jb250ZW50Oms7MDxlLmNoaWxkTm9kZXMubGVuZ3RoOylyLmNhbGwoaCxlLmNoaWxkTm9kZXNbMF0pfX0pfSk7RWxlbWVudC5wcm90b3R5cGUuc2V0QXR0cmlidXRlPWZ1bmN0aW9uKGMsZSl7aWYoMSE9PXRoaXMuX19DRV9zdGF0ZSlyZXR1cm4gQi5jYWxsKHRoaXMsYyxlKTt2YXIgZz1BLmNhbGwodGhpcyxjKTtCLmNhbGwodGhpcyxjLGUpO2U9QS5jYWxsKHRoaXMsYyk7YS5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sodGhpcyxjLGcsZSxudWxsKX07RWxlbWVudC5wcm90b3R5cGUuc2V0QXR0cmlidXRlTlM9ZnVuY3Rpb24oYyxlLGcpe2lmKDEhPT10aGlzLl9fQ0Vfc3RhdGUpcmV0dXJuIEYuY2FsbCh0aGlzLFxuYyxlLGcpO3ZhciBoPUUuY2FsbCh0aGlzLGMsZSk7Ri5jYWxsKHRoaXMsYyxlLGcpO2c9RS5jYWxsKHRoaXMsYyxlKTthLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLGUsaCxnLGMpfTtFbGVtZW50LnByb3RvdHlwZS5yZW1vdmVBdHRyaWJ1dGU9ZnVuY3Rpb24oYyl7aWYoMSE9PXRoaXMuX19DRV9zdGF0ZSlyZXR1cm4gQy5jYWxsKHRoaXMsYyk7dmFyIGU9QS5jYWxsKHRoaXMsYyk7Qy5jYWxsKHRoaXMsYyk7bnVsbCE9PWUmJmEuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKHRoaXMsYyxlLG51bGwsbnVsbCl9O0QmJihFbGVtZW50LnByb3RvdHlwZS50b2dnbGVBdHRyaWJ1dGU9ZnVuY3Rpb24oYyxlKXtpZigxIT09dGhpcy5fX0NFX3N0YXRlKXJldHVybiBELmNhbGwodGhpcyxjLGUpO3ZhciBnPUEuY2FsbCh0aGlzLGMpLGg9bnVsbCE9PWc7ZT1ELmNhbGwodGhpcyxjLGUpO2ghPT1lJiZhLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLGMsZyxlP1wiXCI6bnVsbCxudWxsKTtcbnJldHVybiBlfSk7RWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQXR0cmlidXRlTlM9ZnVuY3Rpb24oYyxlKXtpZigxIT09dGhpcy5fX0NFX3N0YXRlKXJldHVybiBHLmNhbGwodGhpcyxjLGUpO3ZhciBnPUUuY2FsbCh0aGlzLGMsZSk7Ry5jYWxsKHRoaXMsYyxlKTt2YXIgaD1FLmNhbGwodGhpcyxjLGUpO2chPT1oJiZhLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLGUsZyxoLGMpfTtvYT9kKEhUTUxFbGVtZW50LnByb3RvdHlwZSxvYSk6SCYmZChFbGVtZW50LnByb3RvdHlwZSxIKTtwYT9mKEhUTUxFbGVtZW50LnByb3RvdHlwZSxwYSk6ZmEmJmYoRWxlbWVudC5wcm90b3R5cGUsZmEpO1ooYSxFbGVtZW50LnByb3RvdHlwZSx7cHJlcGVuZDpoYSxhcHBlbmQ6aWF9KTtEYShhKX07dmFyIEZhPXt9O2Z1bmN0aW9uIEdhKGEpe2Z1bmN0aW9uIGIoKXt2YXIgZD10aGlzLmNvbnN0cnVjdG9yO3ZhciBmPWRvY3VtZW50Ll9fQ0VfcmVnaXN0cnkuQy5nZXQoZCk7aWYoIWYpdGhyb3cgRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0IGEgY3VzdG9tIGVsZW1lbnQ6IFRoZSBjb25zdHJ1Y3RvciB3YXMgbm90IHJlZ2lzdGVyZWQgd2l0aCBgY3VzdG9tRWxlbWVudHNgLlwiKTt2YXIgYz1mLmNvbnN0cnVjdGlvblN0YWNrO2lmKDA9PT1jLmxlbmd0aClyZXR1cm4gYz1uLmNhbGwoZG9jdW1lbnQsZi5sb2NhbE5hbWUpLE9iamVjdC5zZXRQcm90b3R5cGVPZihjLGQucHJvdG90eXBlKSxjLl9fQ0Vfc3RhdGU9MSxjLl9fQ0VfZGVmaW5pdGlvbj1mLFIoYSxjKSxjO3ZhciBlPWMubGVuZ3RoLTEsZz1jW2VdO2lmKGc9PT1GYSl0aHJvdyBFcnJvcihcIkZhaWxlZCB0byBjb25zdHJ1Y3QgJ1wiK2YubG9jYWxOYW1lK1wiJzogVGhpcyBlbGVtZW50IHdhcyBhbHJlYWR5IGNvbnN0cnVjdGVkLlwiKTtjW2VdPUZhO1xuT2JqZWN0LnNldFByb3RvdHlwZU9mKGcsZC5wcm90b3R5cGUpO1IoYSxnKTtyZXR1cm4gZ31iLnByb3RvdHlwZT1uYS5wcm90b3R5cGU7T2JqZWN0LmRlZmluZVByb3BlcnR5KEhUTUxFbGVtZW50LnByb3RvdHlwZSxcImNvbnN0cnVjdG9yXCIse3dyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHZhbHVlOmJ9KTt3aW5kb3cuSFRNTEVsZW1lbnQ9Yn07ZnVuY3Rpb24gSGEoYSl7ZnVuY3Rpb24gYihkLGYpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShkLFwidGV4dENvbnRlbnRcIix7ZW51bWVyYWJsZTpmLmVudW1lcmFibGUsY29uZmlndXJhYmxlOiEwLGdldDpmLmdldCxzZXQ6ZnVuY3Rpb24oYyl7aWYodGhpcy5ub2RlVHlwZT09PU5vZGUuVEVYVF9OT0RFKWYuc2V0LmNhbGwodGhpcyxjKTtlbHNle3ZhciBlPXZvaWQgMDtpZih0aGlzLmZpcnN0Q2hpbGQpe3ZhciBnPXRoaXMuY2hpbGROb2RlcyxoPWcubGVuZ3RoO2lmKDA8aCYmSih0aGlzKSl7ZT1BcnJheShoKTtmb3IodmFyIGs9MDtrPGg7aysrKWVba109Z1trXX19Zi5zZXQuY2FsbCh0aGlzLGMpO2lmKGUpZm9yKGM9MDtjPGUubGVuZ3RoO2MrKylVKGEsZVtjXSl9fX0pfU5vZGUucHJvdG90eXBlLmluc2VydEJlZm9yZT1mdW5jdGlvbihkLGYpe2lmKGQgaW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50KXt2YXIgYz1LKGQpO2Q9dC5jYWxsKHRoaXMsZCxmKTtpZihKKHRoaXMpKWZvcihmPVxuMDtmPGMubGVuZ3RoO2YrKylTKGEsY1tmXSk7cmV0dXJuIGR9Yz1kIGluc3RhbmNlb2YgRWxlbWVudCYmSihkKTtmPXQuY2FsbCh0aGlzLGQsZik7YyYmVShhLGQpO0oodGhpcykmJlMoYSxkKTtyZXR1cm4gZn07Tm9kZS5wcm90b3R5cGUuYXBwZW5kQ2hpbGQ9ZnVuY3Rpb24oZCl7aWYoZCBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpe3ZhciBmPUsoZCk7ZD1yLmNhbGwodGhpcyxkKTtpZihKKHRoaXMpKWZvcih2YXIgYz0wO2M8Zi5sZW5ndGg7YysrKVMoYSxmW2NdKTtyZXR1cm4gZH1mPWQgaW5zdGFuY2VvZiBFbGVtZW50JiZKKGQpO2M9ci5jYWxsKHRoaXMsZCk7ZiYmVShhLGQpO0oodGhpcykmJlMoYSxkKTtyZXR1cm4gY307Tm9kZS5wcm90b3R5cGUuY2xvbmVOb2RlPWZ1bmN0aW9uKGQpe2Q9cS5jYWxsKHRoaXMsISFkKTt0aGlzLm93bmVyRG9jdW1lbnQuX19DRV9yZWdpc3RyeT9WKGEsZCk6UShhLGQpO3JldHVybiBkfTtOb2RlLnByb3RvdHlwZS5yZW1vdmVDaGlsZD1mdW5jdGlvbihkKXt2YXIgZj1cbmQgaW5zdGFuY2VvZiBFbGVtZW50JiZKKGQpLGM9dS5jYWxsKHRoaXMsZCk7ZiYmVShhLGQpO3JldHVybiBjfTtOb2RlLnByb3RvdHlwZS5yZXBsYWNlQ2hpbGQ9ZnVuY3Rpb24oZCxmKXtpZihkIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCl7dmFyIGM9SyhkKTtkPXYuY2FsbCh0aGlzLGQsZik7aWYoSih0aGlzKSlmb3IoVShhLGYpLGY9MDtmPGMubGVuZ3RoO2YrKylTKGEsY1tmXSk7cmV0dXJuIGR9Yz1kIGluc3RhbmNlb2YgRWxlbWVudCYmSihkKTt2YXIgZT12LmNhbGwodGhpcyxkLGYpLGc9Sih0aGlzKTtnJiZVKGEsZik7YyYmVShhLGQpO2cmJlMoYSxkKTtyZXR1cm4gZX07dyYmdy5nZXQ/YihOb2RlLnByb3RvdHlwZSx3KTp0YShhLGZ1bmN0aW9uKGQpe2IoZCx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBmPVtdLGM9dGhpcy5maXJzdENoaWxkO2M7Yz1jLm5leHRTaWJsaW5nKWMubm9kZVR5cGUhPT1Ob2RlLkNPTU1FTlRfTk9ERSYmXG5mLnB1c2goYy50ZXh0Q29udGVudCk7cmV0dXJuIGYuam9pbihcIlwiKX0sc2V0OmZ1bmN0aW9uKGYpe2Zvcig7dGhpcy5maXJzdENoaWxkOyl1LmNhbGwodGhpcyx0aGlzLmZpcnN0Q2hpbGQpO251bGwhPWYmJlwiXCIhPT1mJiZyLmNhbGwodGhpcyxkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShmKSl9fSl9KX07dmFyIE89d2luZG93LmN1c3RvbUVsZW1lbnRzO2Z1bmN0aW9uIElhKCl7dmFyIGE9bmV3IE47R2EoYSk7Q2EoYSk7WihhLERvY3VtZW50RnJhZ21lbnQucHJvdG90eXBlLHtwcmVwZW5kOmRhLGFwcGVuZDplYX0pO0hhKGEpO0VhKGEpO3dpbmRvdy5DdXN0b21FbGVtZW50UmVnaXN0cnk9WTthPW5ldyBZKGEpO2RvY3VtZW50Ll9fQ0VfcmVnaXN0cnk9YTtPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LFwiY3VzdG9tRWxlbWVudHNcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsdmFsdWU6YX0pfU8mJiFPLmZvcmNlUG9seWZpbGwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIE8uZGVmaW5lJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBPLmdldHx8SWEoKTt3aW5kb3cuX19DRV9pbnN0YWxsUG9seWZpbGw9SWE7XG59KS5jYWxsKHNlbGYpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jdXN0b20tZWxlbWVudHMubWluLmpzLm1hcFxuIiwiaW1wb3J0IHsgdXJsQWxwaGFiZXQgfSBmcm9tICcuL3VybC1hbHBoYWJldC9pbmRleC5qcydcbmxldCByYW5kb20gPSBieXRlcyA9PiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KGJ5dGVzKSlcbmxldCBjdXN0b21SYW5kb20gPSAoYWxwaGFiZXQsIGRlZmF1bHRTaXplLCBnZXRSYW5kb20pID0+IHtcbiAgbGV0IG1hc2sgPSAoMiA8PCAoTWF0aC5sb2coYWxwaGFiZXQubGVuZ3RoIC0gMSkgLyBNYXRoLkxOMikpIC0gMVxuICBsZXQgc3RlcCA9IC1+KCgxLjYgKiBtYXNrICogZGVmYXVsdFNpemUpIC8gYWxwaGFiZXQubGVuZ3RoKVxuICByZXR1cm4gKHNpemUgPSBkZWZhdWx0U2l6ZSkgPT4ge1xuICAgIGxldCBpZCA9ICcnXG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGxldCBieXRlcyA9IGdldFJhbmRvbShzdGVwKVxuICAgICAgbGV0IGogPSBzdGVwXG4gICAgICB3aGlsZSAoai0tKSB7XG4gICAgICAgIGlkICs9IGFscGhhYmV0W2J5dGVzW2pdICYgbWFza10gfHwgJydcbiAgICAgICAgaWYgKGlkLmxlbmd0aCA9PT0gc2l6ZSkgcmV0dXJuIGlkXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5sZXQgY3VzdG9tQWxwaGFiZXQgPSAoYWxwaGFiZXQsIHNpemUgPSAyMSkgPT5cbiAgY3VzdG9tUmFuZG9tKGFscGhhYmV0LCBzaXplLCByYW5kb20pXG5sZXQgbmFub2lkID0gKHNpemUgPSAyMSkgPT5cbiAgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheShzaXplKSkucmVkdWNlKChpZCwgYnl0ZSkgPT4ge1xuICAgIGJ5dGUgJj0gNjNcbiAgICBpZiAoYnl0ZSA8IDM2KSB7XG4gICAgICBpZCArPSBieXRlLnRvU3RyaW5nKDM2KVxuICAgIH0gZWxzZSBpZiAoYnl0ZSA8IDYyKSB7XG4gICAgICBpZCArPSAoYnl0ZSAtIDI2KS50b1N0cmluZygzNikudG9VcHBlckNhc2UoKVxuICAgIH0gZWxzZSBpZiAoYnl0ZSA+IDYyKSB7XG4gICAgICBpZCArPSAnLSdcbiAgICB9IGVsc2Uge1xuICAgICAgaWQgKz0gJ18nXG4gICAgfVxuICAgIHJldHVybiBpZFxuICB9LCAnJylcbmV4cG9ydCB7IG5hbm9pZCwgY3VzdG9tQWxwaGFiZXQsIGN1c3RvbVJhbmRvbSwgdXJsQWxwaGFiZXQsIHJhbmRvbSB9XG4iLCJpbXBvcnQgeyBuYW5vaWQgfSBmcm9tICduYW5vaWQnO1xuXG4vKiBQYWNrZWQgbWVzc2FnZXMgc3RhcnQgd2l0aCBhIGNvbG9uIGFuZCBoYXZlIHR3byBmaXhlZCBsZW5ndGggZmllbGRzIGZvbGxvd2VkIGJ5IG9uZSB2YXJpYWJsZSBmaWVsZDpcbiAgLSBjb2xvbiAobGVuZ3RoOiAxKVxuICAtIGRlc3RMb2NhdGlvbiAobGVuZ3RoOiAyMClcbiAgLSBjb2xvbiAobGVuZ3RoOiAxKVxuICAtIHJlc3BvbnNlQ29kZSAobGVuZ3RoOiAxKVxuICAtIGNvbG9uIChsZW5ndGg6IDEpXG4gIC0gc3RyaW5naWZpZWRNZXNzYWdlIChsZW5ndGg6ID8pXG4gKi9cblxuY29uc3QgZmllbGREaXZpZGVyID0gJzonO1xuXG5jb25zdCBsZW5ndGhPZkRlc3RMb2NhdGlvbkZpZWxkID0gMjA7XG5jb25zdCBsZW5ndGhPZkZpZWxkRGl2aWRlciA9IGZpZWxkRGl2aWRlci5sZW5ndGg7XG5jb25zdCBsZW5ndGhPZlJlc3BvbnNlQ29kZUZpZWxkID0gMTtcblxuY29uc3Qgc3RhcnRPZkRlc3RMb2NhdGlvbkZpZWxkID0gMTtcbmNvbnN0IHN0YXJ0T2ZSZXNwb25zZUNvZGVGaWVsZCA9XG4gIHN0YXJ0T2ZEZXN0TG9jYXRpb25GaWVsZCArIGxlbmd0aE9mRGVzdExvY2F0aW9uRmllbGQgKyBsZW5ndGhPZkZpZWxkRGl2aWRlcjtcbmNvbnN0IHN0YXJ0T2ZTdHJpbmdpZmllZE1lc3NhZ2VGaWVsZCA9XG4gIHN0YXJ0T2ZSZXNwb25zZUNvZGVGaWVsZCArIGxlbmd0aE9mUmVzcG9uc2VDb2RlRmllbGQgKyBsZW5ndGhPZkZpZWxkRGl2aWRlcjtcblxuZXhwb3J0IGVudW0gTWVzc2FnZUV2ZW50VHlwZSB7XG4gIE9wZW5TZWxlY3RvckdlbmVyYXRvclBhbmVsID0gJ09wZW5TZWxlY3RvckdlbmVyYXRvclBhbmVsJyxcbiAgQ2xvc2VFbGVtZW50T3B0aW9uc092ZXJsYXkgPSAnQ2xvc2VFbGVtZW50T3B0aW9uc092ZXJsYXknLFxuICBJbnNwZWN0RWxlbWVudE1vZGVDaGFuZ2VkID0gJ0luc3BlY3RFbGVtZW50TW9kZUNoYW5nZWQnLFxuICBPcGVuRWxlbWVudE9wdGlvbnNPdmVybGF5ID0gJ09wZW5FbGVtZW50T3B0aW9uc092ZXJsYXknLFxuICBIaWRlRWxlbWVudE9wdGlvbnNPdmVybGF5ID0gJ0hpZGVFbGVtZW50T3B0aW9uc092ZXJsYXknLFxuICBSZW1vdmVIaWRlRnJvbUVsZW1lbnRPcHRpb25zT3ZlcmxheSA9ICdSZW1vdmVIaWRlRnJvbUVsZW1lbnRPcHRpb25zT3ZlcmxheScsXG4gIENvbnRlbnRTY3JpcHROZWVkc0VsZW1lbnQgPSAnQ29udGVudFNjcmlwdE5lZWRzRWxlbWVudCcsXG4gIFJ1blNlbGVjdG9yR2VuZXJhdG9yID0gJ1J1blNlbGVjdG9yR2VuZXJhdG9yJyxcbiAgUmVzZXRTZWxlY3RvckdlbmVyYXRvciA9ICdSZXNldFNlbGVjdG9yR2VuZXJhdG9yJyxcbiAgQWRkSW5jbHVkZWRFbGVtZW50ID0gJ0FkZEluY2x1ZGVkRWxlbWVudCcsXG4gIFJlbW92ZUluY2x1ZGVkRWxlbWVudCA9ICdSZW1vdmVJbmNsdWRlZEVsZW1lbnQnLFxuICBBZGRFeGNsdWRlZEVsZW1lbnQgPSAnQWRkRXhjbHVkZWRFbGVtZW50JyxcbiAgUmVtb3ZlRXhjbHVkZWRFbGVtZW50ID0gJ1JlbW92ZUV4Y2x1ZGVkRWxlbWVudCcsXG4gIEZpbmlzaGVkU2VsZWN0b3JHZW5lcmF0aW9uID0gJ0ZpbmlzaGVkU2VsZWN0b3JHZW5lcmF0aW9uJyxcbiAgVXBkYXRlRWxlbWVudE9wdGlvbnMgPSAnVXBkYXRlRWxlbWVudE9wdGlvbnMnLFxuICBDbG9zZURldnRvb2xzUGFuZWwgPSAnQ2xvc2VEZXZ0b29sc1BhbmVsJyxcbiAgVG9nZ2xlSW5zcGVjdEVsZW1lbnRNb2RlID0gJ1RvZ2dsZUluc3BlY3RFbGVtZW50TW9kZScsXG4gIFVuZG9ja2VkRm9jdXNDaGFuZ2UgPSAnVW5kb2NrZWRGb2N1c0NoYW5nZScsXG59XG5cbmV4cG9ydCB0eXBlIElNZXNzYWdlRXZlbnRUeXBlID0ga2V5b2YgdHlwZW9mIE1lc3NhZ2VFdmVudFR5cGU7XG5cbmV4cG9ydCBlbnVtIE1lc3NhZ2VMb2NhdGlvbiB7XG4gIERldnRvb2xzUHJpdmF0ZSA9ICdEZXZ0b29sc1ByaXZhdGUnLFxuICBEZXZ0b29sc1NjcmlwdCA9ICdEZXZ0b29sc1NjcmlwdCcsXG4gIENvbnRlbnRTY3JpcHQgPSAnQ29udGVudFNjcmlwdCcsXG4gIENvcmUgPSAnQ29yZScsXG59XG5cbmV4cG9ydCB0eXBlIElNZXNzYWdlTG9jYXRpb24gPSBrZXlvZiB0eXBlb2YgTWVzc2FnZUxvY2F0aW9uO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY29uc3QgX19fc2VuZFRvQ29yZSA9ICdfX19zZW5kVG9Db3JlJztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNvbnN0IF9fX3JlY2VpdmVGcm9tQ29yZSA9ICdfX19yZWNlaXZlRnJvbUNvcmUnO1xuXG5leHBvcnQgY29uc3Qgc2VuZE1lc3NhZ2VGcm9tQnJvd3NlclRvQ29yZUZuTmFtZSA9ICdzZW5kTWVzc2FnZUZyb21Ccm93c2VyVG9VbGl4ZWVDb3JlJztcbmV4cG9ydCBjb25zdCBldmVudEVtaXR0ZXJOYW1lSW5Ccm93c2VyID0gJ2V2ZW50RW1pdHRlckZyb21VbGl4ZWVDb3JlJztcblxuZXhwb3J0IGVudW0gUmVzcG9uc2VDb2RlIHtcbiAgWSA9ICdZJyxcbiAgTiA9ICdOJyxcbiAgUiA9ICdSJyxcbn1cblxuZXhwb3J0IHR5cGUgSVJlc3BvbnNlQ29kZSA9IGtleW9mIHR5cGVvZiBSZXNwb25zZUNvZGU7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU1lc3NhZ2VPYmplY3Qge1xuICBkZXN0TG9jYXRpb246IElNZXNzYWdlTG9jYXRpb247XG4gIG9yaWdMb2NhdGlvbjogSU1lc3NhZ2VMb2NhdGlvbjtcbiAgb3JpZ1RhYklkPzogbnVtYmVyO1xuICByZXNwb25zZUNvZGU6IElSZXNwb25zZUNvZGU7XG4gIHJlc3BvbnNlSWQ/OiBzdHJpbmc7XG4gIHBheWxvYWQ6IGFueTtcbn1cblxuZXhwb3J0IHR5cGUgSVJlc3RPZk1lc3NhZ2VPYmplY3QgPSBPbWl0PElNZXNzYWdlT2JqZWN0LCAnZGVzdExvY2F0aW9uJyB8ICdyZXNwb25zZUNvZGUnPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJlc3BvbnNlSWQoKTogc3RyaW5nIHtcbiAgcmV0dXJuIG5hbm9pZCgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFja01lc3NhZ2UobWVzc2FnZTogSU1lc3NhZ2VPYmplY3QgfCBzdHJpbmcpOiBzdHJpbmcge1xuICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKGlzUGFja2VkTWVzc2FnZShtZXNzYWdlKSkgcmV0dXJuIG1lc3NhZ2U7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIG1lc3NhZ2UgZm9ybWF0Jyk7XG4gIH1cbiAgY29uc3QgeyBkZXN0TG9jYXRpb24gfSA9IG1lc3NhZ2U7XG4gIGNvbnN0IHJlc3BvbnNlQ29kZSA9IG1lc3NhZ2UucmVzcG9uc2VDb2RlIHx8IFJlc3BvbnNlQ29kZS5OO1xuICBjb25zdCBtZXNzYWdlVG9TdHJpbmdpZnkgPSB7IC4uLm1lc3NhZ2UgfTtcbiAgZGVsZXRlIG1lc3NhZ2VUb1N0cmluZ2lmeS5kZXN0TG9jYXRpb247XG4gIGRlbGV0ZSBtZXNzYWdlVG9TdHJpbmdpZnkucmVzcG9uc2VDb2RlO1xuICBjb25zdCBzdHJpbmdpZmllZE1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeShtZXNzYWdlVG9TdHJpbmdpZnkpO1xuICByZXR1cm4gYDoke2Rlc3RMb2NhdGlvbi5wYWRFbmQobGVuZ3RoT2ZEZXN0TG9jYXRpb25GaWVsZCl9OiR7cmVzcG9uc2VDb2RlfToke3N0cmluZ2lmaWVkTWVzc2FnZX1gO1xufVxuXG5mdW5jdGlvbiBpc1BhY2tlZE1lc3NhZ2UobWVzc2FnZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiBtZXNzYWdlLnN1YnN0cigwLCAxKSA9PT0gZmllbGREaXZpZGVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWVzc2FnZUV4cGVjdHNSZXNwb25zZShtZXNzYWdlOiBJTWVzc2FnZU9iamVjdCB8IHN0cmluZyk6IGJvb2xlYW4ge1xuICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKGlzUGFja2VkTWVzc2FnZShtZXNzYWdlKSkge1xuICAgICAgY29uc3QgcmVzcG9uc2VDb2RlID0gbWVzc2FnZS5zdWJzdHIoc3RhcnRPZlJlc3BvbnNlQ29kZUZpZWxkLCBsZW5ndGhPZlJlc3BvbnNlQ29kZUZpZWxkKTtcbiAgICAgIHJldHVybiByZXNwb25zZUNvZGUgPT09IFJlc3BvbnNlQ29kZS5ZO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gbWVzc2FnZSBmb3JtYXQnKTtcbiAgfVxuICByZXR1cm4gbWVzc2FnZS5yZXNwb25zZUNvZGUgPT09IFJlc3BvbnNlQ29kZS5ZO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNSZXNwb25zZU1lc3NhZ2UobWVzc2FnZTogSU1lc3NhZ2VPYmplY3QgfCBzdHJpbmcpOiBib29sZWFuIHtcbiAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgIGlmIChpc1BhY2tlZE1lc3NhZ2UobWVzc2FnZSkpIHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlQ29kZSA9IG1lc3NhZ2Uuc3Vic3RyKHN0YXJ0T2ZSZXNwb25zZUNvZGVGaWVsZCwgbGVuZ3RoT2ZSZXNwb25zZUNvZGVGaWVsZCk7XG4gICAgICByZXR1cm4gcmVzcG9uc2VDb2RlID09PSBSZXNwb25zZUNvZGUuUjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIG1lc3NhZ2UgZm9ybWF0Jyk7XG4gIH1cbiAgcmV0dXJuIG1lc3NhZ2UucmVzcG9uc2VDb2RlID09PSBSZXNwb25zZUNvZGUuUjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RTdHJpbmdpZmllZENvbXBvbmVudHNGcm9tTWVzc2FnZShcbiAgbWVzc2FnZTogSU1lc3NhZ2VPYmplY3QgfCBzdHJpbmcsXG4pOiBbZGVzdExvY2F0aW9uOiBzdHJpbmcsIHJlc3BvbnNlQ29kZToga2V5b2YgdHlwZW9mIFJlc3BvbnNlQ29kZSwgc3RyaW5naWZpZWRNZXNzYWdlOiBzdHJpbmddIHtcbiAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJyAmJiBpc1BhY2tlZE1lc3NhZ2UobWVzc2FnZSkpIHtcbiAgICBjb25zdCBkZXN0TG9jYXRpb24gPSBtZXNzYWdlLnN1YnN0cihzdGFydE9mRGVzdExvY2F0aW9uRmllbGQsIGxlbmd0aE9mRGVzdExvY2F0aW9uRmllbGQpO1xuICAgIGNvbnN0IHJlc3BvbnNlQ29kZSA9IG1lc3NhZ2Uuc3Vic3RyKHN0YXJ0T2ZSZXNwb25zZUNvZGVGaWVsZCwgbGVuZ3RoT2ZSZXNwb25zZUNvZGVGaWVsZCk7XG4gICAgY29uc3Qgc3RyaW5naWZpZWRNZXNzYWdlID0gbWVzc2FnZS5zdWJzdHIoc3RhcnRPZlN0cmluZ2lmaWVkTWVzc2FnZUZpZWxkKTtcbiAgICByZXR1cm4gW2Rlc3RMb2NhdGlvbi50cmltKCksIHJlc3BvbnNlQ29kZSBhcyBhbnksIHN0cmluZ2lmaWVkTWVzc2FnZV07XG4gIH1cbiAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIG1lc3NhZ2UgZm9ybWF0Jyk7XG5cbiAgY29uc3QgeyBkZXN0TG9jYXRpb24sIHJlc3BvbnNlQ29kZSwgLi4ubWVzc2FnZVRvU3RyaW5naWZ5IH0gPSBtZXNzYWdlO1xuICBjb25zdCBzdHJpbmdpZmllZE1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeShtZXNzYWdlVG9TdHJpbmdpZnkpO1xuICByZXR1cm4gW2Rlc3RMb2NhdGlvbiwgcmVzcG9uc2VDb2RlIHx8IFJlc3BvbnNlQ29kZS5OLCBzdHJpbmdpZmllZE1lc3NhZ2VdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFJlc3BvbnNlSWRGcm9tTWVzc2FnZShtZXNzYWdlOiBJTWVzc2FnZU9iamVjdCB8IHN0cmluZyk6IHN0cmluZyB7XG4gIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycgJiYgaXNQYWNrZWRNZXNzYWdlKG1lc3NhZ2UpKSB7XG4gICAgY29uc3Qgc3RyaW5naWZpZWRNZXNzYWdlID0gbWVzc2FnZS5zdWJzdHIoc3RhcnRPZlN0cmluZ2lmaWVkTWVzc2FnZUZpZWxkKTtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShzdHJpbmdpZmllZE1lc3NhZ2UpLnJlc3BvbnNlSWQgYXMgc3RyaW5nO1xuICB9XG4gIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBtdXN0IGJlIHN0cmluZ2lmaWVkTWVzc2FnZVxuICAgIHJldHVybiBKU09OLnBhcnNlKG1lc3NhZ2UpLnJlc3BvbnNlSWQgYXMgc3RyaW5nO1xuICB9XG4gIHJldHVybiBtZXNzYWdlLnJlc3BvbnNlSWQ7XG59XG4iLCJpbXBvcnQge1xuICBNZXNzYWdlRXZlbnRUeXBlLFxuICBfX19zZW5kVG9Db3JlLFxuICBJTWVzc2FnZU9iamVjdCxcbiAgTWVzc2FnZUxvY2F0aW9uLFxuICBwYWNrTWVzc2FnZSxcbiAgUmVzcG9uc2VDb2RlXG59IGZyb20gJ0B1bGl4ZWUvZGVza3RvcC1jb3JlL2xpYi9CcmlkZ2VIZWxwZXJzJztcbmltcG9ydCBFbGVtZW50c0J1Y2tldCBmcm9tICcuL0VsZW1lbnRzQnVja2V0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRWxlbWVudE9wdGlvbnNPdmVybGF5IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICBwdWJsaWMgaGFzU3RhcnRlZEluaXRpYWxpemF0aW9uID0gZmFsc2U7XG4gIHB1YmxpYyBoYXNGaW5pc2hlZEluaXRpYWxpemF0aW9uID0gZmFsc2U7XG4gIHB1YmxpYyBlbGVtZW50c0J1Y2tldDogRWxlbWVudHNCdWNrZXQ7XG5cbiAgcHJpdmF0ZSBpc09wZW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBpc1RtcEhpZGRlbiA9IGZhbHNlO1xuXG4gIHByaXZhdGUgc2VsZWN0ZWRFbGVtOiBIVE1MRWxlbWVudDtcbiAgcHJpdmF0ZSBzZWxlY3RlZEJhY2tlbmROb2RlSWQ6IG51bWJlcjtcblxuICBwcml2YXRlIHRpdGxlTmFtZUVsZW06IEhUTUxFbGVtZW50O1xuICBwcml2YXRlIHBvc2l0aW9uRWxlbTogSFRNTEVsZW1lbnQ7XG5cbiAgcHJpdmF0ZSBoaWdobGlnaHRFbGVtOiBIVE1MRWxlbWVudDtcbiAgcHJpdmF0ZSBvdmVybGF5RWxlbTogSFRNTEVsZW1lbnQ7XG5cbiAgcHJpdmF0ZSBtdXN0SW5jbHVkZVRvZ2dsZTogSFRNTEVsZW1lbnQ7XG4gIHByaXZhdGUgbXVzdEV4Y2x1ZGVUb2dnbGU6IEhUTUxFbGVtZW50O1xuXG4gIHB1YmxpYyBhdHRhY2hFbGVtZW50c0J1Y2tldChlbGVtZW50c0J1Y2tldDogRWxlbWVudHNCdWNrZXQpIHtcbiAgICB0aGlzLmVsZW1lbnRzQnVja2V0ID0gZWxlbWVudHNCdWNrZXQ7XG4gIH1cblxuICBwdWJsaWMgb3BlbkJ5QmFja2VuZE5vZGVJZChiYWNrZW5kTm9kZUlkOiBudW1iZXIpIHtcbiAgICB0aGlzLmVsZW1lbnRzQnVja2V0LmdldEJ5QmFja2VuZE5vZGVJZChiYWNrZW5kTm9kZUlkKVxuICAgICAgLnRoZW4oZWxlbWVudCA9PiB0aGlzLm9wZW4oYmFja2VuZE5vZGVJZCwgZWxlbWVudCkpXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgRVJST1I6IENvdWxkIG5vdCBmZXRjaCBlbGVtZW50IGZvciBiYWNrZW5kTm9kZUlkOiAke2JhY2tlbmROb2RlSWR9YCwgZXJyb3IpO1xuICAgICAgfSk7XG4gIH1cblxuICBwdWJsaWMgb3BlbihiYWNrZW5kTm9kZUlkOiBudW1iZXIsIGVsZW1lbnQ6IEhUTUxFbGVtZW50KSB7XG4gICAgaWYgKCF0aGlzLmhhc0ZpbmlzaGVkSW5pdGlhbGl6YXRpb24pIHtcbiAgICAgIHRoaXMuaGFzRmluaXNoZWRJbml0aWFsaXphdGlvbiA9IHRydWU7XG4gICAgICByZXR1cm4gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMub3BlbihiYWNrZW5kTm9kZUlkLCBlbGVtZW50KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuc2VsZWN0ZWRFbGVtID0gZWxlbWVudDtcbiAgICB0aGlzLnNlbGVjdGVkQmFja2VuZE5vZGVJZCA9IGJhY2tlbmROb2RlSWQ7XG4gICAgaWYgKCFlbGVtZW50KSByZXR1cm47XG5cbiAgICBjb25zdCB0YWdOYW1lID0gZWxlbWVudC5sb2NhbE5hbWU7XG4gICAgY29uc3QgY2xhc3NlcyA9IEFycmF5LmZyb20oZWxlbWVudC5jbGFzc0xpc3QpO1xuICAgIGNvbnN0IHRpdGxlVGV4dCA9IFtgPHNwYW4gY2xhc3M9XCJ0YWdcIj4ke3RhZ05hbWV9PC9zcGFuPmAsIC4uLmNsYXNzZXNdLmpvaW4oJy4nKTtcblxuICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgdG9wLCBsZWZ0IH0gPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IGFic0xlZnQgPSBsZWZ0ICsgd2luZG93LnNjcm9sbFg7XG4gICAgY29uc3QgYWJzVG9wID0gdG9wICsgd2luZG93LnNjcm9sbFk7XG5cbiAgICBjb25zdCBwb3NpdGlvblRleHQgPSBgJHtNYXRoLnJvdW5kKHdpZHRoICogMTAwKS8xMDB9IHggJHtNYXRoLnJvdW5kKGhlaWdodCAqIDEwMCkvMTAwfWA7XG5cbiAgICB0aGlzLmlzT3BlbiA9IHRydWU7XG4gICAgdGhpcy5zdHlsZS5sZWZ0ID0gYCR7YWJzTGVmdH1weGA7XG4gICAgdGhpcy5zdHlsZS50b3AgPSBgJHthYnNUb3B9cHhgO1xuICAgIHRoaXMuc3R5bGUud2lkdGggPSBgJHt3aWR0aH1weGA7XG4gICAgdGhpcy5zdHlsZS5oZWlnaHQgPSBgJHtoZWlnaHR9cHhgO1xuXG4gICAgdGhpcy50aXRsZU5hbWVFbGVtLmlubmVySFRNTCA9IHRpdGxlVGV4dDtcbiAgICB0aGlzLnBvc2l0aW9uRWxlbS50ZXh0Q29udGVudCA9IHBvc2l0aW9uVGV4dDtcbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG4gICAgY29uc3Qgb3ZlcmxheUhlaWdodCA9IHRoaXMub3ZlcmxheUVsZW0ub2Zmc2V0SGVpZ2h0O1xuXG4gICAgaWYgKHRvcCAtIG92ZXJsYXlIZWlnaHQgPCAwKSB7XG4gICAgICB0aGlzLm92ZXJsYXlFbGVtLmNsYXNzTGlzdC5yZW1vdmUoJ3RvcCcpO1xuICAgICAgdGhpcy5vdmVybGF5RWxlbS5jbGFzc0xpc3QuYWRkKCdib3R0b20nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vdmVybGF5RWxlbS5jbGFzc0xpc3QucmVtb3ZlKCdib3R0b20nKTtcbiAgICAgIHRoaXMub3ZlcmxheUVsZW0uY2xhc3NMaXN0LmFkZCgndG9wJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuZWxlbWVudHNCdWNrZXQuaXNJbmNsdWRlZEJhY2tlbmROb2RlSWQodGhpcy5zZWxlY3RlZEJhY2tlbmROb2RlSWQpKSB7XG4gICAgICB0aGlzLmFkZE9uQ2xhc3NUb0luY2x1ZGVUb2dnbGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hZGRPZmZDbGFzc1RvSW5jbHVkZVRvZ2dsZSgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmVsZW1lbnRzQnVja2V0LmlzRXhjbHVkZWRCYWNrZW5kTm9kZUlkKHRoaXMuc2VsZWN0ZWRCYWNrZW5kTm9kZUlkKSkge1xuICAgICAgdGhpcy5hZGRPbkNsYXNzVG9FeGNsdWRlVG9nZ2xlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWRkT2ZmQ2xhc3NUb0V4Y2x1ZGVUb2dnbGUoKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgdG1wSGlkZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIGlmICghdGhpcy5pc09wZW4pIHJldHVybjtcbiAgICBpZiAodmFsdWUgPT09IHRydWUpIHtcbiAgICAgIHRoaXMuaXNUbXBIaWRkZW4gPSB0cnVlO1xuICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH0gZWxzZSBpZiAodGhpcy5pc1RtcEhpZGRlbikge1xuICAgICAgdGhpcy5pc1RtcEhpZGRlbiA9IGZhbHNlO1xuICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgY2xvc2UoKSB7XG4gICAgdGhpcy5pc09wZW4gPSBmYWxzZTtcbiAgICB0aGlzLmlzVG1wSGlkZGVuID0gZmFsc2U7XG4gICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB9XG5cbiAgLy8gUFJJVkFURSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbiAgcHJpdmF0ZSBhZGRPZmZDbGFzc1RvSW5jbHVkZVRvZ2dsZSgpIHtcbiAgICB0aGlzLm11c3RJbmNsdWRlVG9nZ2xlLmNsYXNzTGlzdC5yZW1vdmUoJ29uJyk7XG4gICAgdGhpcy5tdXN0SW5jbHVkZVRvZ2dsZS5jbGFzc0xpc3QuYWRkKCdvZmYnKTtcbiAgfVxuXG4gIHByaXZhdGUgYWRkT25DbGFzc1RvSW5jbHVkZVRvZ2dsZSgpIHtcbiAgICB0aGlzLm11c3RJbmNsdWRlVG9nZ2xlLmNsYXNzTGlzdC5yZW1vdmUoJ29mZicpO1xuICAgIHRoaXMubXVzdEluY2x1ZGVUb2dnbGUuY2xhc3NMaXN0LmFkZCgnb24nKTtcbiAgICB0aGlzLmFkZE9mZkNsYXNzVG9FeGNsdWRlVG9nZ2xlKCk7XG4gIH1cblxuICBwcml2YXRlIGFkZE9uQ2xhc3NUb0V4Y2x1ZGVUb2dnbGUoKSB7XG4gICAgdGhpcy5tdXN0RXhjbHVkZVRvZ2dsZS5jbGFzc0xpc3QuYWRkKCdvbicpO1xuICAgIHRoaXMubXVzdEV4Y2x1ZGVUb2dnbGUuY2xhc3NMaXN0LnJlbW92ZSgnb2ZmJyk7XG4gICAgdGhpcy5hZGRPZmZDbGFzc1RvSW5jbHVkZVRvZ2dsZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhZGRPZmZDbGFzc1RvRXhjbHVkZVRvZ2dsZSgpIHtcbiAgICB0aGlzLm11c3RFeGNsdWRlVG9nZ2xlLmNsYXNzTGlzdC5hZGQoJ29mZicpO1xuICAgIHRoaXMubXVzdEV4Y2x1ZGVUb2dnbGUuY2xhc3NMaXN0LnJlbW92ZSgnb24nKTtcblxuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGVJbmNsdWRlZCgpIHtcbiAgICBvcGVuU2VsZWN0b3JHZW5lcmF0b3JQYW5lbCgpO1xuICAgIGNvbnN0IGlzSW5jbHVkZWQgPSB0aGlzLmVsZW1lbnRzQnVja2V0LmlzSW5jbHVkZWRCYWNrZW5kTm9kZUlkKHRoaXMuc2VsZWN0ZWRCYWNrZW5kTm9kZUlkKTtcbiAgICBpZiAoaXNJbmNsdWRlZCkge1xuICAgICAgdGhpcy5lbGVtZW50c0J1Y2tldC5yZW1vdmVJbmNsdWRlZEVsZW1lbnQodGhpcy5zZWxlY3RlZEJhY2tlbmROb2RlSWQpO1xuICAgICAgdGhpcy5hZGRPZmZDbGFzc1RvSW5jbHVkZVRvZ2dsZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVsZW1lbnRzQnVja2V0LmFkZEluY2x1ZGVkRWxlbWVudCh0aGlzLnNlbGVjdGVkQmFja2VuZE5vZGVJZCwgdGhpcy5zZWxlY3RlZEVsZW0pO1xuICAgICAgdGhpcy5hZGRPbkNsYXNzVG9JbmNsdWRlVG9nZ2xlKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGVNdXN0RXhjbHVkZSgpIHtcbiAgICBvcGVuU2VsZWN0b3JHZW5lcmF0b3JQYW5lbCgpO1xuICAgIGNvbnN0IGlzRXhjbHVkZWQgPSB0aGlzLmVsZW1lbnRzQnVja2V0LmlzRXhjbHVkZWRCYWNrZW5kTm9kZUlkKHRoaXMuc2VsZWN0ZWRCYWNrZW5kTm9kZUlkKTtcbiAgICBpZiAoaXNFeGNsdWRlZCkge1xuICAgICAgdGhpcy5lbGVtZW50c0J1Y2tldC5yZW1vdmVFeGNsdWRlZEVsZW1lbnQodGhpcy5zZWxlY3RlZEJhY2tlbmROb2RlSWQpO1xuICAgICAgdGhpcy5hZGRPZmZDbGFzc1RvRXhjbHVkZVRvZ2dsZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVsZW1lbnRzQnVja2V0LmFkZEV4Y2x1ZGVkRWxlbWVudCh0aGlzLnNlbGVjdGVkQmFja2VuZE5vZGVJZCwgdGhpcy5zZWxlY3RlZEVsZW0pO1xuICAgICAgdGhpcy5hZGRPbkNsYXNzVG9FeGNsdWRlVG9nZ2xlKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBpbml0aWFsaXplKCkge1xuICAgIHRoaXMuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICAgIHRoaXMuc3R5bGUuekluZGV4ID0gJzIxNDc0ODM2NDcnO1xuXG4gICAgdGhpcy5hdHRhY2hTaGFkb3coeyBtb2RlOiAnb3BlbicgfSk7XG4gICAgdGhpcy5jcmVhdGVTdHlsZUVsZW0oKTtcbiAgICB0aGlzLmNyZWF0ZUhpZ2hsaWdodGVyRWxlbSgpO1xuICAgIHRoaXMuY3JlYXRlT3ZlcmxheUVsZW0oKTtcblxuICAgIHRoaXMuc2hhZG93Um9vdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcbiAgICAgIGV2ZW50LmNhbmNlbEJ1YmJsZSA9IHRydWU7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZU92ZXJsYXlFbGVtKCkge1xuICAgIGNvbnN0IHRyaWFuZ2xlV2lkdGggPSAxNTtcbiAgICBjb25zdCBvdmVybGF5RWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIG92ZXJsYXlFbGVtLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnb3ZlcmxheScpO1xuICAgIG92ZXJsYXlFbGVtLmlubmVySFRNTCA9IGBcbiAgICAgIDxkaXYgY2xhc3M9XCJvdmVybGF5LXBhbmVsXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0aXRsZVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYW1lXCI+LS0tLS0tPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInBvc2l0aW9uXCI+PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29udHJvbGxlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbnRyb1wiPlNlbGVjdG9yIEdlbmVyYXRvciBPcHRpb25zOjwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJvcHRpb24gbXVzdC1pbmNsdWRlXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ltYm9sIHBsdXNcIj48L2Rpdj5cbiAgICAgICAgICAgIDxsYWJlbD5NdXN0IEluY2x1ZGU8L2xhYmVsPlxuICAgICAgICAgICAgPGRpdiBpZD1cIm11c3QtaW5jbHVkZVwiIGNsYXNzPVwidG9nZ2xlLWNvbXBvbmVudFwiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImxhYmVsIG9mZlwiPk9GRjwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJsYWJlbCBvblwiPk9OPC9zcGFuPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidG9nZ2xlXCI+PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwib3B0aW9uIG11c3QtZXhjbHVkZVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN5bWJvbCBtaW51c1wiPjwvZGl2PlxuICAgICAgICAgICAgPGxhYmVsPk11c3QgRXhjbHVkZTwvbGFiZWw+XG4gICAgICAgICAgICA8ZGl2IGlkPVwibXVzdC1leGNsdWRlXCIgY2xhc3M9XCJ0b2dnbGUtY29tcG9uZW50XCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWwgb2ZmXCI+T0ZGPC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImxhYmVsIG9uXCI+T048L3NwYW4+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0b2dnbGVcIj48L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cIm92ZXJsYXktdHJpYW5nbGVcIiBzdHlsZT1cIndpZHRoOiAkeyhNYXRoLnNxcnQoMikqdHJpYW5nbGVXaWR0aCkrNX1weDsgaGVpZ2h0OiAkeyhNYXRoLnNxcnQoMikqKHRyaWFuZ2xlV2lkdGgvMikpKzV9cHhcIj5cbiAgICAgICAgPGRpdiBzdHlsZT1cIndpZHRoOiAke3RyaWFuZ2xlV2lkdGh9cHg7IGhlaWdodDogJHt0cmlhbmdsZVdpZHRofXB4XCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICBgO1xuXG4gICAgdGhpcy5tdXN0SW5jbHVkZVRvZ2dsZSA9IG92ZXJsYXlFbGVtLnF1ZXJ5U2VsZWN0b3IoJ2RpdiNtdXN0LWluY2x1ZGUnKTtcbiAgICB0aGlzLm11c3RJbmNsdWRlVG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZlbnQgPT4ge1xuICAgICAgdGhpcy50b2dnbGVJbmNsdWRlZCgpO1xuICAgICAgZXZlbnQuY2FuY2VsQnViYmxlID0gdHJ1ZTtcbiAgICB9KTtcblxuICAgIHRoaXMubXVzdEV4Y2x1ZGVUb2dnbGUgPSBvdmVybGF5RWxlbS5xdWVyeVNlbGVjdG9yKCdkaXYjbXVzdC1leGNsdWRlJyk7XG4gICAgdGhpcy5tdXN0RXhjbHVkZVRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcbiAgICAgIHRoaXMudG9nZ2xlTXVzdEV4Y2x1ZGUoKTtcbiAgICAgIGV2ZW50LmNhbmNlbEJ1YmJsZSA9IHRydWU7XG4gICAgfSk7XG5cbiAgICB0aGlzLm92ZXJsYXlFbGVtID0gb3ZlcmxheUVsZW07XG4gICAgdGhpcy50aXRsZU5hbWVFbGVtID0gb3ZlcmxheUVsZW0ucXVlcnlTZWxlY3RvcignLnRpdGxlIC5uYW1lJyk7XG4gICAgdGhpcy5wb3NpdGlvbkVsZW0gPSBvdmVybGF5RWxlbS5xdWVyeVNlbGVjdG9yKCcudGl0bGUgLnBvc2l0aW9uJyk7XG5cbiAgICB0aGlzLnNoYWRvd1Jvb3QuYXBwZW5kQ2hpbGQob3ZlcmxheUVsZW0pO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVIaWdobGlnaHRlckVsZW0oKSB7XG4gICAgaWYgKHRoaXMuaGlnaGxpZ2h0RWxlbSkgcmV0dXJuO1xuICAgIHRoaXMuaGlnaGxpZ2h0RWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRoaXMuaGlnaGxpZ2h0RWxlbS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2hpZ2hsaWdodGVyJyk7XG4gICAgdGhpcy5zaGFkb3dSb290LmFwcGVuZENoaWxkKHRoaXMuaGlnaGxpZ2h0RWxlbSk7XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZVN0eWxlRWxlbSgpIHtcbiAgICBjb25zdCBjc3MgPSBgXG4gICAgICAuaGlnaGxpZ2h0ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDkxLCAxNTAsIDIwMiwgMC41KTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICB9XG4gICAgICAub3ZlcmxheSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgIH0gICAgICBcbiAgICAgIC5vdmVybGF5LXBhbmVsIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDhweCAwIHJnYigwIDAgMCAvIDQwJSk7XG4gICAgICAgIG1pbi13aWR0aDogMjkwcHg7XG4gICAgICAgIG1heC13aWR0aDogMzkwcHg7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5vdmVybGF5LXRyaWFuZ2xlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgfVxuICAgICAgLm92ZXJsYXktdHJpYW5nbGUgZGl2IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDhweCAwIHJnYigwIDAgMCAvIDQwJSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5vdmVybGF5LnRvcCB7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGJvdHRvbTogY2FsYygxMDAlICsgOHB4KTtcbiAgICAgIH1cbiAgICAgIC5vdmVybGF5LnRvcCAub3ZlcmxheS10cmlhbmdsZSB7XG4gICAgICAgIGxlZnQ6IDE1cHg7XG4gICAgICAgIHRvcDogMTAwJTtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgIH1cbiAgICAgIC5vdmVybGF5LnRvcCAub3ZlcmxheS10cmlhbmdsZSBkaXYge1xuICAgICAgICB0b3A6IC03cHg7XG4gICAgICAgIGxlZnQ6IDVweDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLm92ZXJsYXkuYm90dG9tIHtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgdG9wOiBjYWxjKDEwMCUgKyA4cHgpO1xuICAgICAgfVxuICAgICAgLm92ZXJsYXkuYm90dG9tIC5vdmVybGF5LXRyaWFuZ2xlIHtcbiAgICAgICAgbGVmdDogMTVweDtcbiAgICAgICAgdG9wOiAtMTVweDtcbiAgICAgICAgei1pbmRleDogMjtcbiAgICAgIH1cbiAgICAgIC5vdmVybGF5LmJvdHRvbSAub3ZlcmxheS10cmlhbmdsZSBkaXYge1xuICAgICAgICB0b3A6IDdweDtcbiAgICAgICAgbGVmdDogNXB4O1xuICAgICAgfVxuICAgICAgXG4gICAgICAudGl0bGUge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB9XG4gICAgICAudGl0bGUgLm5hbWUge1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBjb2xvcjogIzFBMUFBNjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTAwcHg7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgIH1cbiAgICAgIC50aXRsZSAubmFtZSAudGFnIHtcbiAgICAgICAgY29sb3I6ICM4ODEyODA7XG4gICAgICB9XG4gICAgICAudGl0bGUgLnBvc2l0aW9uIHtcbiAgICAgICAgcGFkZGluZzogNXB4IDA7XG4gICAgICAgIGNvbG9yOiBzaWx2ZXI7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLmNvbnRyb2xsZXIge1xuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpO1xuICAgICAgICBwYWRkaW5nOiA1cHggMDtcbiAgICAgIH1cbiAgICAgIC5jb250cm9sbGVyIC5pbnRybyB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgICAgIGNvbG9yOiAjNTk1OTU5O1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDA7IFxuICAgICAgfVxuICAgICAgLmNvbnRyb2xsZXIgLm9wdGlvbiB7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMDtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xKTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgIH1cbiAgICAgIC5jb250cm9sbGVyIC5vcHRpb24gbGFiZWwge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIH1cbiAgICAgIC5jb250cm9sbGVyIC5vcHRpb24gLnN5bWJvbCB7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgfVxuICAgICAgLmNvbnRyb2xsZXIgLm9wdGlvbiAuc3ltYm9sOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogNHB4O1xuICAgICAgICB0b3A6IDZweDtcbiAgICAgICAgd2lkdGg6IDEycHg7XG4gICAgICAgIGhlaWdodDogNHB4O1xuICAgICAgfVxuICAgICAgLmNvbnRyb2xsZXIgLm9wdGlvbiAuc3ltYm9sLnBsdXM6YmVmb3JlIHtcbiAgICAgICAgYmFja2dyb3VuZDogIzFDQTYwMDtcbiAgICAgIH1cbiAgICAgIC5jb250cm9sbGVyIC5vcHRpb24gLnN5bWJvbC5wbHVzOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDJweDtcbiAgICAgICAgbGVmdDogOHB4O1xuICAgICAgICB3aWR0aDogNHB4O1xuICAgICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICMxQ0E2MDA7XG4gICAgICB9XG4gICAgICAuY29udHJvbGxlciAub3B0aW9uIC5zeW1ib2wubWludXM6YmVmb3JlIHtcbiAgICAgICAgYmFja2dyb3VuZDogI0UyMDAwMDtcbiAgICAgIH1cbiAgICAgIC5jb250cm9sbGVyIC5vcHRpb24ubXVzdC1pbmNsdWRlIHtcbiAgICAgICAgY29sb3I6ICMxQ0E2MDA7XG4gICAgICB9XG4gICAgICAuY29udHJvbGxlciAub3B0aW9uLm11c3QtZXhjbHVkZSB7XG4gICAgICAgIGNvbG9yOiAjRTIwMDAwO1xuICAgICAgfVxuICAgICAgXG4gICAgICAudG9nZ2xlLWNvbXBvbmVudCB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNFRkVGRUY7XG4gICAgICAgIHdpZHRoOiA5MHB4O1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNCM0IzQjM7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBjb2xvcjogc2lsdmVyO1xuICAgICAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCB3aGl0ZTtcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgfVxuICAgICAgLnRvZ2dsZS1jb21wb25lbnQgLmxhYmVsIHtcbiAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB9XG4gICAgICAudG9nZ2xlLWNvbXBvbmVudCAudG9nZ2xlIHtcbiAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjOEU4RThFO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogLTFweDtcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDFweCByZ2IoMCAwIDAgLyAxMCUpO1xuICAgICAgfVxuICAgICAgLnRvZ2dsZS1jb21wb25lbnQub24gLmxhYmVsLm9uIHtcbiAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgfVxuICAgICAgLnRvZ2dsZS1jb21wb25lbnQub2ZmIC5sYWJlbC5vZmYge1xuICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICB9XG4gICAgICAudG9nZ2xlLWNvbXBvbmVudC5vbiAudG9nZ2xlIHtcbiAgICAgICAgcmlnaHQ6IC0xcHg7XG4gICAgICB9XG4gICAgICAudG9nZ2xlLWNvbXBvbmVudC5vZmYgLnRvZ2dsZSB7XG4gICAgICAgIGxlZnQ6IC0xcHg7XG4gICAgICB9XG4gICAgYDtcbiAgICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cbiAgICB0aGlzLnNoYWRvd1Jvb3QuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcHJpdmF0ZSBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAodGhpcy5oYXNTdGFydGVkSW5pdGlhbGl6YXRpb24pIHJldHVybjtcbiAgICB0aGlzLmhhc1N0YXJ0ZWRJbml0aWFsaXphdGlvbiA9IHRydWU7XG4gICAgdGhpcy5pbml0aWFsaXplKCk7XG4gIH1cbn1cblxuLy8gSEVMUEVSUyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5mdW5jdGlvbiBvcGVuU2VsZWN0b3JHZW5lcmF0b3JQYW5lbCgpIHtcbiAgY29uc3QgbWVzc2FnZTogSU1lc3NhZ2VPYmplY3QgPSB7XG4gICAgZGVzdExvY2F0aW9uOiBNZXNzYWdlTG9jYXRpb24uRGV2dG9vbHNQcml2YXRlLFxuICAgIG9yaWdMb2NhdGlvbjogTWVzc2FnZUxvY2F0aW9uLkNvbnRlbnRTY3JpcHQsXG4gICAgcmVzcG9uc2VDb2RlOiBSZXNwb25zZUNvZGUuTixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBldmVudDogTWVzc2FnZUV2ZW50VHlwZS5PcGVuU2VsZWN0b3JHZW5lcmF0b3JQYW5lbCxcbiAgICB9XG4gIH07XG4gIGNvbnN0IHBhY2tlZE1lc3NhZ2UgPSBwYWNrTWVzc2FnZShtZXNzYWdlKTtcbiAgd2luZG93W19fX3NlbmRUb0NvcmVdKHBhY2tlZE1lc3NhZ2UpO1xufVxuIiwiaW1wb3J0IHtcbiAgX19fcmVjZWl2ZUZyb21Db3JlLFxuICBfX19zZW5kVG9Db3JlLFxuICBjcmVhdGVSZXNwb25zZUlkLFxuICBJTWVzc2FnZUxvY2F0aW9uLFxuICBJTWVzc2FnZU9iamVjdCxcbiAgSVJlc3BvbnNlQ29kZSxcbiAgSVJlc3RPZk1lc3NhZ2VPYmplY3QsXG4gIGlzUmVzcG9uc2VNZXNzYWdlLFxuICBtZXNzYWdlRXhwZWN0c1Jlc3BvbnNlLFxuICBNZXNzYWdlTG9jYXRpb24sXG4gIHBhY2tNZXNzYWdlLFxuICBSZXNwb25zZUNvZGUsXG59IGZyb20gJ0B1bGl4ZWUvZGVza3RvcC1jb3JlL2xpYi9CcmlkZ2VIZWxwZXJzJztcblxudHlwZSBJUmVzcG9uc2VGbiA9IChyZXNwb25zZTogYW55KSA9PiB2b2lkO1xuXG5jb25zdCBjdXJyZW50TWVzc2VuZ2VyTG9jYXRpb24gPSBNZXNzYWdlTG9jYXRpb24uQ29udGVudFNjcmlwdDtcblxuZXhwb3J0IGZ1bmN0aW9uIHNlbmRUb0RldnRvb2xzU2NyaXB0KHBheWxvYWQ6IGFueSwgcmVzcG9uc2VDYWxsYmFja0ZuPzogSVJlc3BvbnNlRm4pIHtcbiAgY29uc3QgbWVzc2FnZTogSU1lc3NhZ2VPYmplY3QgPSB7XG4gICAgZGVzdExvY2F0aW9uOiBNZXNzYWdlTG9jYXRpb24uRGV2dG9vbHNTY3JpcHQsXG4gICAgb3JpZ0xvY2F0aW9uOiBjdXJyZW50TWVzc2VuZ2VyTG9jYXRpb24sXG4gICAgcGF5bG9hZCxcbiAgICAuLi5jb252ZXJ0UmVzcG9uc2VGblRvQ29kZUFuZElkKHJlc3BvbnNlQ2FsbGJhY2tGbiksXG4gIH07XG4gIHJvdXRlSW50ZXJuYWxseShtZXNzYWdlKTtcbn1cblxuLy8gQHRzLWlnbm9yZVxud2luZG93LnNlbmRUb0RldnRvb2xzU2NyaXB0ID0gc2VuZFRvRGV2dG9vbHNTY3JpcHQ7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZW5kVG9EZXZ0b29sc1ByaXZhdGUocGF5bG9hZDogYW55LCByZXNwb25zZUNhbGxiYWNrRm4/OiBJUmVzcG9uc2VGbikge1xuICBjb25zdCBtZXNzYWdlOiBJTWVzc2FnZU9iamVjdCA9IHtcbiAgICBkZXN0TG9jYXRpb246IE1lc3NhZ2VMb2NhdGlvbi5EZXZ0b29sc1ByaXZhdGUsXG4gICAgb3JpZ0xvY2F0aW9uOiBjdXJyZW50TWVzc2VuZ2VyTG9jYXRpb24sXG4gICAgcGF5bG9hZCxcbiAgICAuLi5jb252ZXJ0UmVzcG9uc2VGblRvQ29kZUFuZElkKHJlc3BvbnNlQ2FsbGJhY2tGbiksXG4gIH07XG4gIHJvdXRlSW50ZXJuYWxseShtZXNzYWdlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlbmRUb0NvcmUocGF5bG9hZDogYW55LCByZXNwb25zZUNhbGxiYWNrRm4/OiBJUmVzcG9uc2VGbikge1xuICBjb25zdCBtZXNzYWdlOiBJTWVzc2FnZU9iamVjdCA9IHtcbiAgICBkZXN0TG9jYXRpb246IE1lc3NhZ2VMb2NhdGlvbi5Db3JlLFxuICAgIG9yaWdMb2NhdGlvbjogY3VycmVudE1lc3NlbmdlckxvY2F0aW9uLFxuICAgIHBheWxvYWQsXG4gICAgLi4uY29udmVydFJlc3BvbnNlRm5Ub0NvZGVBbmRJZChyZXNwb25zZUNhbGxiYWNrRm4pLFxuICB9O1xuICByb3V0ZUludGVybmFsbHkobWVzc2FnZSk7XG59XG5cbmxldCBvbk1lc3NhZ2VQYXlsb2FkRm47XG5leHBvcnQgZnVuY3Rpb24gb25NZXNzYWdlUGF5bG9hZChmbjogKHBheWxvYWQ6IGFueSwgcmVzcG9uc2VGbjogSVJlc3BvbnNlRm4pID0+IHZvaWQpIHtcbiAgaWYgKG9uTWVzc2FnZVBheWxvYWRGbikgdGhyb3cgbmV3IEVycm9yKCdvbk1lc3NhZ2UgaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQnKTtcbiAgb25NZXNzYWdlUGF5bG9hZEZuID0gZm47XG59XG5cbi8vIExJU1RFTkVSIFRPIDwtPiBGUk9NIENPUkUgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLy8gcmVjZWl2ZSBhbmQgcm91dGUgbWVzc2FnZXMgY29taW5nIGluIGZyb20gY29yZVxud2luZG93W19fX3JlY2VpdmVGcm9tQ29yZV0gPSAoXG4gIGRlc3RMb2NhdGlvbjogSU1lc3NhZ2VMb2NhdGlvbixcbiAgcmVzcG9uc2VDb2RlOiBJUmVzcG9uc2VDb2RlLFxuICByZXN0T2ZNZXNzYWdlOiBJUmVzdE9mTWVzc2FnZU9iamVjdCxcbikgPT4ge1xuICBjb25zdCBtZXNzYWdlOiBJTWVzc2FnZU9iamVjdCA9IHtcbiAgICBkZXN0TG9jYXRpb24sXG4gICAgcmVzcG9uc2VDb2RlLFxuICAgIC4uLnJlc3RPZk1lc3NhZ2UsXG4gIH07XG4gIGlmIChtZXNzYWdlLmRlc3RMb2NhdGlvbiA9PT0gY3VycmVudE1lc3NlbmdlckxvY2F0aW9uKSB7XG4gICAgaWYgKGlzUmVzcG9uc2VNZXNzYWdlKG1lc3NhZ2UpKSB7XG4gICAgICBoYW5kbGVJbmNvbWluZ0xvY2FsUmVzcG9uc2UobWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhhbmRsZUluY29taW5nTG9jYWxNZXNzYWdlKG1lc3NhZ2UpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gZGVzdExvY2F0aW9uJyk7XG4gIH1cbn07XG5cbi8vIElOVEVSTkFMIFZBUklBQkxFUyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuY29uc3QgcGVuZGluZ0J5UmVzcG9uc2VJZDoge1xuICBbaWQ6IHN0cmluZ106IHtcbiAgICByZXNwb25zZUZuOiBJUmVzcG9uc2VGbjtcbiAgICB0aW1lb3V0SWQ6IGFueTtcbiAgfTtcbn0gPSB7fTtcblxuLy8gSEVMUEVSUyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuZnVuY3Rpb24gaGFuZGxlSW5jb21pbmdMb2NhbE1lc3NhZ2UobWVzc2FnZTogSU1lc3NhZ2VPYmplY3QpIHtcbiAgY29uc3QgbmVlZHNSZXNwb25zZSA9IG1lc3NhZ2VFeHBlY3RzUmVzcG9uc2UobWVzc2FnZSk7XG4gIGNvbnN0IHJlc3BvbnNlRm4gPSBuZWVkc1Jlc3BvbnNlID8gcmVzcG9uc2UgPT4gc2VuZFJlc3BvbnNlQmFjayhtZXNzYWdlLCByZXNwb25zZSkgOiB1bmRlZmluZWQ7XG4gIG9uTWVzc2FnZVBheWxvYWRGbihtZXNzYWdlLnBheWxvYWQsIHJlc3BvbnNlRm4pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVJbmNvbWluZ0xvY2FsUmVzcG9uc2UocmVzcG9uc2U6IElNZXNzYWdlT2JqZWN0KSB7XG4gIGNvbnN0IHBlbmRpbmcgPSBwZW5kaW5nQnlSZXNwb25zZUlkW3Jlc3BvbnNlLnJlc3BvbnNlSWRdO1xuICBpZiAoIXBlbmRpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEluY29taW5nIHJlc3BvbnNlICgke3Jlc3BvbnNlLnJlc3BvbnNlSWR9KSBjb3VsZCBub3QgYmUgaGFuZGxlZGApO1xuICB9XG4gIGRlbGV0ZSBwZW5kaW5nQnlSZXNwb25zZUlkW3Jlc3BvbnNlLnJlc3BvbnNlSWRdO1xuICBjbGVhclRpbWVvdXQocGVuZGluZy50aW1lb3V0SWQpO1xuICBwZW5kaW5nLnJlc3BvbnNlRm4ocmVzcG9uc2UucGF5bG9hZCk7XG59XG5cbmZ1bmN0aW9uIHNlbmRSZXNwb25zZUJhY2sobWVzc2FnZTogSU1lc3NhZ2VPYmplY3QsIHJlc3BvbnNlUGF5bG9hZCkge1xuICBjb25zdCByZXNwb25zZUNvZGUgPSBSZXNwb25zZUNvZGUuUjtcbiAgY29uc3QgeyByZXNwb25zZUlkLCBvcmlnTG9jYXRpb246IGRlc3RMb2NhdGlvbiB9ID0gbWVzc2FnZTtcbiAgY29uc3QgcmVzcG9uc2U6IElNZXNzYWdlT2JqZWN0ID0ge1xuICAgIGRlc3RMb2NhdGlvbixcbiAgICBvcmlnTG9jYXRpb246IE1lc3NhZ2VMb2NhdGlvbi5Db3JlLFxuICAgIHJlc3BvbnNlSWQsXG4gICAgcmVzcG9uc2VDb2RlLFxuICAgIHBheWxvYWQ6IHJlc3BvbnNlUGF5bG9hZCxcbiAgfTtcbiAgcm91dGVJbnRlcm5hbGx5KHJlc3BvbnNlKTtcbn1cblxuLy8gSU5URVJOQUwgUk9VVElORyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5mdW5jdGlvbiByb3V0ZUludGVybmFsbHkobWVzc2FnZTogSU1lc3NhZ2VPYmplY3QpIHtcbiAgY29uc3QgcGFja2VkTWVzc2FnZSA9IHBhY2tNZXNzYWdlKG1lc3NhZ2UpO1xuICB3aW5kb3dbX19fc2VuZFRvQ29yZV0ocGFja2VkTWVzc2FnZSk7XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRSZXNwb25zZUZuVG9Db2RlQW5kSWQocmVzcG9uc2VGbjogSVJlc3BvbnNlRm4pIHtcbiAgaWYgKHJlc3BvbnNlRm4pIHtcbiAgICBjb25zdCByZXNwb25zZUlkID0gY3JlYXRlUmVzcG9uc2VJZCgpO1xuICAgIHBlbmRpbmdCeVJlc3BvbnNlSWRbcmVzcG9uc2VJZF0gPSB7XG4gICAgICByZXNwb25zZUZuLFxuICAgICAgdGltZW91dElkOiBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXNwb25zZSBmb3IgJHtyZXNwb25zZUlkfSBub3QgcmVjZWl2ZWQgd2l0aGluIDEwc2ApO1xuICAgICAgfSwgMTBlMyksXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzcG9uc2VDb2RlOiBSZXNwb25zZUNvZGUuWSxcbiAgICAgIHJlc3BvbnNlSWQsXG4gICAgfTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHJlc3BvbnNlQ29kZTogUmVzcG9uc2VDb2RlLk4sXG4gIH07XG59XG4iLCJpbXBvcnQgeyBNZXNzYWdlRXZlbnRUeXBlIH0gZnJvbSAnQHVsaXhlZS9kZXNrdG9wLWNvcmUvbGliL0JyaWRnZUhlbHBlcnMnO1xuaW1wb3J0IHsgc2VuZFRvQ29yZSwgc2VuZFRvRGV2dG9vbHNQcml2YXRlLCBzZW5kVG9EZXZ0b29sc1NjcmlwdCB9IGZyb20gJy4vY29udGVudC9Db250ZW50TWVzc2VuZ2VyJztcblxuaW50ZXJmYWNlIElSZXNvbHZhYmxlPFQgPSBhbnk+IHtcbiAgcmVzb2x2ZTogKHZhbHVlPzogVCB8IFByb21pc2VMaWtlPFQ+KSA9PiB2b2lkO1xuICByZWplY3Q6IChyZWFzb24/OiBhbnkpID0+IHZvaWQ7XG59XG5cbmNvbnN0IGVsZW1lbnRQcm9taXNlc0J5SWQ6IHsgW2lkOiBzdHJpbmddOiBJUmVzb2x2YWJsZTxIVE1MRWxlbWVudD4gfSA9IHt9O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbGVtZW50c0J1Y2tldCB7XG4gIHByaXZhdGUgaW5jbHVkZWRFbGVtZW50c0J5SWQ6IE1hcDxudW1iZXIsIEhUTUxFbGVtZW50PiA9IG5ldyBNYXAoKTtcbiAgcHJpdmF0ZSBleGNsdWRlZEVsZW1lbnRzQnlJZDogTWFwPG51bWJlciwgSFRNTEVsZW1lbnQ+ID0gbmV3IE1hcCgpO1xuXG4gIHB1YmxpYyBnZXQgaW5jbHVkZWRFbGVtZW50cygpOiBIVE1MRWxlbWVudFtdIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmluY2x1ZGVkRWxlbWVudHNCeUlkLnZhbHVlcygpKTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBnZXRCeUJhY2tlbmROb2RlSWQoYmFja2VuZE5vZGVJZDogbnVtYmVyKTogUHJvbWlzZTxIVE1MRWxlbWVudD4ge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBjb25zdCBjYWxsYmFja0ZuTmFtZSA9IHdpbmRvdy5vbkVsZW1lbnRGcm9tQ29yZS5uYW1lO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZTxIVE1MRWxlbWVudD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgZWxlbWVudFByb21pc2VzQnlJZFtiYWNrZW5kTm9kZUlkXSA9IHsgcmVzb2x2ZSwgcmVqZWN0IH07XG4gICAgICBzZW5kVG9Db3JlKHsgZXZlbnQ6IE1lc3NhZ2VFdmVudFR5cGUuQ29udGVudFNjcmlwdE5lZWRzRWxlbWVudCwgYmFja2VuZE5vZGVJZCwgY2FsbGJhY2tGbk5hbWUgfSk7XG4gICAgfSk7XG4gICAgY29uc3QgZWxlbWVudCA9IGF3YWl0IHByb21pc2U7XG4gICAgZGVsZXRlIGVsZW1lbnRQcm9taXNlc0J5SWRbYmFja2VuZE5vZGVJZF07XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cblxuICBwdWJsaWMgcmVzZXQoKSB7XG4gICAgdGhpcy5pbmNsdWRlZEVsZW1lbnRzQnlJZCA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLmV4Y2x1ZGVkRWxlbWVudHNCeUlkID0gbmV3IE1hcCgpO1xuICB9XG5cbiAgcHVibGljIGlzSW5jbHVkZWRCYWNrZW5kTm9kZUlkKGJhY2tlbmROb2RlSWQ6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmluY2x1ZGVkRWxlbWVudHNCeUlkLmhhcyhiYWNrZW5kTm9kZUlkKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRJbmNsdWRlZEVsZW1lbnQoYmFja2VuZE5vZGVJZDogbnVtYmVyLCBlbGVtZW50OiBIVE1MRWxlbWVudCk6IHZvaWQge1xuICAgIGNvbnN0IHRhZ1RleHQgPSBleHRyYWN0VGFnVGV4dChlbGVtZW50KTtcbiAgICB0aGlzLmluY2x1ZGVkRWxlbWVudHNCeUlkLnNldChiYWNrZW5kTm9kZUlkLCBlbGVtZW50KTtcbiAgICB0aGlzLnJlbW92ZUV4Y2x1ZGVkRWxlbWVudChiYWNrZW5kTm9kZUlkKTtcblxuICAgIGNvbnN0IHBheWxvYWQgPSB7IGV2ZW50OiBNZXNzYWdlRXZlbnRUeXBlLkFkZEluY2x1ZGVkRWxlbWVudCwgbmFtZTogdGFnVGV4dCwgYmFja2VuZE5vZGVJZCB9O1xuICAgIHNlbmRUb0RldnRvb2xzU2NyaXB0KHBheWxvYWQpO1xuICAgIHNlbmRUb0RldnRvb2xzUHJpdmF0ZShwYXlsb2FkKTtcbiAgfVxuXG4gIHB1YmxpYyByZW1vdmVJbmNsdWRlZEVsZW1lbnQoYmFja2VuZE5vZGVJZDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5pbmNsdWRlZEVsZW1lbnRzQnlJZC5kZWxldGUoYmFja2VuZE5vZGVJZCk7XG5cbiAgICBjb25zdCBwYXlsb2FkID0geyBldmVudDogTWVzc2FnZUV2ZW50VHlwZS5SZW1vdmVJbmNsdWRlZEVsZW1lbnQsIGJhY2tlbmROb2RlSWQgfTtcbiAgICBzZW5kVG9EZXZ0b29sc1NjcmlwdChwYXlsb2FkKTtcbiAgICBzZW5kVG9EZXZ0b29sc1ByaXZhdGUocGF5bG9hZCk7XG4gIH1cblxuICBwdWJsaWMgaXNFeGNsdWRlZEJhY2tlbmROb2RlSWQoYmFja2VuZE5vZGVJZDogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZXhjbHVkZWRFbGVtZW50c0J5SWQuaGFzKGJhY2tlbmROb2RlSWQpO1xuICB9XG5cbiAgcHVibGljIGFkZEV4Y2x1ZGVkRWxlbWVudChiYWNrZW5kTm9kZUlkOiBudW1iZXIsIGVsZW1lbnQ6IEhUTUxFbGVtZW50KTogdm9pZCB7XG4gICAgY29uc3QgdGFnVGV4dCA9IGV4dHJhY3RUYWdUZXh0KGVsZW1lbnQpO1xuICAgIHRoaXMuZXhjbHVkZWRFbGVtZW50c0J5SWQuc2V0KGJhY2tlbmROb2RlSWQsIGVsZW1lbnQpO1xuICAgIHRoaXMucmVtb3ZlSW5jbHVkZWRFbGVtZW50KGJhY2tlbmROb2RlSWQpO1xuXG4gICAgY29uc3QgcGF5bG9hZCA9IHsgZXZlbnQ6IE1lc3NhZ2VFdmVudFR5cGUuQWRkRXhjbHVkZWRFbGVtZW50LCBiYWNrZW5kTm9kZUlkLCBuYW1lOiB0YWdUZXh0IH07XG4gICAgc2VuZFRvRGV2dG9vbHNTY3JpcHQocGF5bG9hZCk7XG4gICAgc2VuZFRvRGV2dG9vbHNQcml2YXRlKHBheWxvYWQpO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZUV4Y2x1ZGVkRWxlbWVudChiYWNrZW5kTm9kZUlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLmV4Y2x1ZGVkRWxlbWVudHNCeUlkLmRlbGV0ZShiYWNrZW5kTm9kZUlkKTtcblxuICAgIGNvbnN0IHBheWxvYWQgPSB7IGV2ZW50OiBNZXNzYWdlRXZlbnRUeXBlLlJlbW92ZUV4Y2x1ZGVkRWxlbWVudCwgYmFja2VuZE5vZGVJZCB9O1xuICAgIHNlbmRUb0RldnRvb2xzU2NyaXB0KHBheWxvYWQpO1xuICAgIHNlbmRUb0RldnRvb2xzUHJpdmF0ZShwYXlsb2FkKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRCeUtleShiYWNrZW5kTm9kZUlkOiBudW1iZXIpOiBIVE1MRWxlbWVudCB7XG4gICAgcmV0dXJuIHRoaXMuaW5jbHVkZWRFbGVtZW50c0J5SWQuZ2V0KGJhY2tlbmROb2RlSWQpIHx8IHRoaXMuZXhjbHVkZWRFbGVtZW50c0J5SWQuZ2V0KGJhY2tlbmROb2RlSWQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RUYWdUZXh0KGVsZW1lbnQ6IEhUTUxFbGVtZW50KTogc3RyaW5nIHtcbiAgY29uc3Qgb3V0ZXJIdG1sID0gZWxlbWVudC5vdXRlckhUTUw7XG4gIGNvbnN0IGxlbiA9IG91dGVySHRtbC5sZW5ndGg7XG5cbiAgY29uc3Qgb3BlblRhZ0xlbmd0aCA9IG91dGVySHRtbFtsZW4gLSAyXSA9PT0gJy8nID8gLy8gSXMgc2VsZi1jbG9zaW5nIHRhZz9cbiAgICBsZW4gOlxuICAgIGxlbiAtIGVsZW1lbnQuaW5uZXJIVE1MLmxlbmd0aCAtIChlbGVtZW50LnRhZ05hbWUubGVuZ3RoICsgMyk7XG5cbiAgcmV0dXJuIG91dGVySHRtbC5zbGljZSgwLCBvcGVuVGFnTGVuZ3RoKTtcbn1cblxuLy8gQHRzLWlnbm9yZVxud2luZG93Lm9uRWxlbWVudEZyb21Db3JlID0gZnVuY3Rpb24gb25FbGVtZW50RnJvbUNvcmUoYmFja2VuZE5vZGVJZDogbnVtYmVyLCBlbGVtZW50OiBIVE1MRWxlbWVudCkge1xuICBpZiAoIWVsZW1lbnRQcm9taXNlc0J5SWRbYmFja2VuZE5vZGVJZF0pIHJldHVybjtcbiAgZWxlbWVudFByb21pc2VzQnlJZFtiYWNrZW5kTm9kZUlkXS5yZXNvbHZlKGVsZW1lbnQpO1xuICBkZWxldGUgZWxlbWVudFByb21pc2VzQnlJZFtiYWNrZW5kTm9kZUlkXTtcbn07XG4iLCJ0eXBlIElTZWxlY3Rvck9wdGlvbiA9IHN0cmluZ1tdO1xuXG5pbnRlcmZhY2UgSVRhcmdldCB7XG4gIGVsZW1lbnQ6IEVsZW1lbnQ7XG4gIHNlbGVjdG9yT3B0aW9uczogSVNlbGVjdG9yT3B0aW9uW107XG59XG5cbnR5cGUgSUFuY2VzdG9ycyA9IElUYXJnZXRbXTtcbnR5cGUgSUxheWVycyA9IElUYXJnZXRbXTtcblxuY29uc3QgUmFua0J5VHlwZSA9IHtcbiAgdGFnOiAxLFxuICBpZDogMixcbiAgY2xhc3M6IDMsXG4gIGF0dHI6IDQsXG59O1xuXG5mdW5jdGlvbiBzb3J0QnlMZW5ndGgoYSwgYikge1xuICByZXR1cm4gYS5sZW5ndGggLSBiLmxlbmd0aDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZmluZFNlbGVjdG9ycyhlbGVtZW50OiBFbGVtZW50KSB7XG4gIGNvbnN0IHRhcmdldCA9IGdlbmVyYXRlVGFyZ2V0KGVsZW1lbnQpO1xuICBjb25zdCBhbmNlc3RvcnMgPSBnZW5lcmF0ZUFuY2VzdG9ycyhlbGVtZW50KTtcbiAgY29uc3QgbGF5ZXJLZXlQYWlycyA9IGdlbmVyYXRlTGF5ZXJLZXlQYWlycyh0YXJnZXQsIGFuY2VzdG9ycyk7XG4gIGNvbnN0IGxheWVycyA9IFsuLi5hbmNlc3RvcnMsIHRhcmdldF07XG4gIGNvbnN0IHBvc3NpYmxlU2VsZWN0b3JDb3VudCA9IGNhbGN1bGF0ZVBvc3NpYmxlU2VsZWN0b3JDb3VudChsYXllcnMsIGxheWVyS2V5UGFpcnMpO1xuXG4gIGNvbnNvbGUubG9nKCd0YXJnZXQ6ICcsIHRhcmdldCk7XG4gIGNvbnNvbGUubG9nKCdhbmNlc3RvcnM6ICcsIGFuY2VzdG9ycyk7XG4gIGNvbnNvbGUubG9nKCdhbmNlc3RvcnNLZXlQYWlyczogJywgbGF5ZXJLZXlQYWlycyk7XG4gIGNvbnNvbGUubG9nKCdwb3NzaWJsZVNlbGVjdG9yczogJywgcG9zc2libGVTZWxlY3RvckNvdW50KTtcblxuICBjb25zdCBzZWxlY3RvcnMgPSBnZW5lcmF0ZVNob3J0U2VsZWN0b3JzKGxheWVycywgbGF5ZXJLZXlQYWlycyk7XG4gIGNvbnNvbGUubG9nKCdzZWxlY3RvcnM6ICcsIHNlbGVjdG9ycyk7XG5cbiAgcmV0dXJuIHNlbGVjdG9ycy5zb3J0KHNvcnRCeUxlbmd0aCk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlU2hvcnRTZWxlY3RvcnMobGF5ZXJzOiBJTGF5ZXJzLCBhbmNlc3RvcktleVBhaXJzOiBzdHJpbmdbXVtdKTogc3RyaW5nW10ge1xuICBjb25zdCBzZWxlY3RvcnM6IHN0cmluZ1tdID0gW107XG4gIGNvbnN0IG1heFNlbGVjdG9yQ291bnQgPSAxZTM7XG4gIGxldCBzZWxlY3RvckRlcHRoID0gMDtcbiAgd2hpbGUgKHNlbGVjdG9ycy5sZW5ndGggPCBtYXhTZWxlY3RvckNvdW50KSB7XG4gICAgY29uc3QgbWF4U2VsZWN0b3JDb3VudFJlbWFpbmluZyA9IG1heFNlbGVjdG9yQ291bnQgLSBzZWxlY3RvcnMubGVuZ3RoO1xuICAgIGNvbnN0IHBvc3NpYmxlU2VsZWN0b3JzID0gZmV0Y2hTZWxlY3RvcnNUb0NoZWNrKFxuICAgICAgc2VsZWN0b3JEZXB0aCxcbiAgICAgIGxheWVycyxcbiAgICAgIGFuY2VzdG9yS2V5UGFpcnMsXG4gICAgICBtYXhTZWxlY3RvckNvdW50UmVtYWluaW5nLFxuICAgICk7XG4gICAgZm9yIChjb25zdCBwb3NzaWJsZVNlbGVjdG9yIG9mIHBvc3NpYmxlU2VsZWN0b3JzKSB7XG4gICAgICBjb25zdCBoYXNPbmVNYXRjaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocG9zc2libGVTZWxlY3RvcikubGVuZ3RoID09PSAxO1xuICAgICAgaWYgKCFoYXNPbmVNYXRjaCkgY29udGludWU7XG5cbiAgICAgIHNlbGVjdG9ycy5wdXNoKHBvc3NpYmxlU2VsZWN0b3IpO1xuICAgIH1cbiAgICBzZWxlY3RvckRlcHRoICs9IDE7XG4gIH1cbiAgcmV0dXJuIHNlbGVjdG9ycztcbn1cblxuZnVuY3Rpb24gZmV0Y2hTZWxlY3RvcnNUb0NoZWNrKFxuICBkZXB0aDogbnVtYmVyLFxuICBsYXllcnM6IElMYXllcnMsXG4gIGFuY2VzdG9yS2V5UGFpcnM6IHN0cmluZ1tdW10sXG4gIG1heFNlbGVjdG9yQ291bnQ6IG51bWJlcixcbik6IHN0cmluZ1tdIHtcbiAgY29uc3Qgc2VsZWN0b3JzID0gW107XG4gIGZvciAoY29uc3QgYW5jZXN0b3JLZXlzIG9mIGFuY2VzdG9yS2V5UGFpcnMuZmlsdGVyKHggPT4geC5sZW5ndGggPT09IGRlcHRoICsgMikpIHtcbiAgICBsZXQgYmFzZVNlbGVjdG9ycyA9IFsnJ107XG4gICAgbGV0IHByZXZLZXk7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgYW5jZXN0b3JLZXlzKSB7XG4gICAgICBsZXQgaXNEaXJlY3RTaWJsaW5nID0gZmFsc2U7XG4gICAgICBpZiAocHJldktleSAmJiBOdW1iZXIoa2V5KSAtIE51bWJlcihwcmV2S2V5KSA9PT0gMSkge1xuICAgICAgICBpc0RpcmVjdFNpYmxpbmcgPSB0cnVlO1xuICAgICAgfVxuICAgICAgY29uc3QgbGF5ZXIgPSBsYXllcnNba2V5XTtcbiAgICAgIGNvbnN0IHNlbGVjdG9yT3B0aW9ucyA9IGxheWVyLnNlbGVjdG9yT3B0aW9ucy5maWx0ZXIoeCA9PiB4Lmxlbmd0aCA9PT0gZGVwdGggKyAxKTtcbiAgICAgIGJhc2VTZWxlY3RvcnMgPSBhcHBlbmRUb1NlbGVjdG9ycyhiYXNlU2VsZWN0b3JzLCBzZWxlY3Rvck9wdGlvbnMsIGlzRGlyZWN0U2libGluZyk7XG4gICAgfVxuICAgIHNlbGVjdG9ycy5wdXNoKC4uLmJhc2VTZWxlY3RvcnMpO1xuICAgIGlmIChzZWxlY3RvcnMubGVuZ3RoID49IG1heFNlbGVjdG9yQ291bnQpIGJyZWFrO1xuICB9XG4gIHJldHVybiBzZWxlY3RvcnM7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZFRvU2VsZWN0b3JzKFxuICBiYXNlU2VsZWN0b3JzLFxuICBzZWxlY3Rvck9wdGlvbnM6IElTZWxlY3Rvck9wdGlvbltdLFxuICBpc0RpcmVjdFNpYmxpbmc6IGJvb2xlYW4sXG4pOiBzdHJpbmdbXSB7XG4gIGNvbnN0IG5ld1NlbGVjdG9ycyA9IFtdO1xuICBjb25zdCByZWxhdGlvbiA9IGlzRGlyZWN0U2libGluZyA/ICcgPiAnIDogJyAnO1xuICBmb3IgKGNvbnN0IHNlbGVjdG9yT3B0aW9uIG9mIHNlbGVjdG9yT3B0aW9ucykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBuZXdQYXJ0ID0gc2VsZWN0b3JPcHRpb24uam9pbignJyk7XG4gICAgICBmb3IgKGNvbnN0IGJhc2VTZWxlY3RvciBvZiBiYXNlU2VsZWN0b3JzKSB7XG4gICAgICAgIG5ld1NlbGVjdG9ycy5wdXNoKGAke2Jhc2VTZWxlY3Rvcn0ke3JlbGF0aW9ufSR7bmV3UGFydH1gKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coc2VsZWN0b3JPcHRpb24pO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG4gIHJldHVybiBuZXdTZWxlY3RvcnM7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlTGF5ZXJLZXlQYWlycyh0YXJnZXQ6IElUYXJnZXQsIGFuY2VzdG9yczogSUFuY2VzdG9ycyk6IHN0cmluZ1tdW10ge1xuICBjb25zdCBhbmNlc3RvckNvbWJpbmF0aW9ucyA9IGdlbmVyYXRlQWxsQ29tYmluYXRpb25zKE9iamVjdC5rZXlzKGFuY2VzdG9ycykpO1xuICBjb25zdCBhbGxDb21iaW5hdGlvbnM6IHN0cmluZ1tdW10gPSBbXTtcbiAgZm9yIChjb25zdCBhbmNlc3RvckNvbWJpbmF0aW9uIG9mIGFuY2VzdG9yQ29tYmluYXRpb25zKSB7XG4gICAgYWxsQ29tYmluYXRpb25zLnB1c2goWy4uLmFuY2VzdG9yQ29tYmluYXRpb24sIGFuY2VzdG9ycy5sZW5ndGgudG9TdHJpbmcoKV0pO1xuICB9XG4gIHJldHVybiBhbGxDb21iaW5hdGlvbnMuc29ydChzb3J0QnlMZW5ndGgpO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVRhcmdldChlbGVtZW50OiBFbGVtZW50KTogSVRhcmdldCB7XG4gIGNvbnN0IHNlbGVjdG9yT3B0aW9ucyA9IGV4dHJhY3RTZWxlY3Rvck9wdGlvbnMoZWxlbWVudCk7XG4gIGNvbnN0IHBhcmVudEVsZW1lbnQgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7XG4gIHRyeSB7XG4gICAgY29uc3QgdW5pcXVlVG9QYXJlbnQgPSBzZWxlY3Rvck9wdGlvbnMuZmlsdGVyKFxuICAgICAgeCA9PiBwYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoeC5qb2luKCcnKSkubGVuZ3RoID09PSAxLFxuICAgICk7XG4gICAgcmV0dXJuIHsgZWxlbWVudCwgc2VsZWN0b3JPcHRpb25zOiB1bmlxdWVUb1BhcmVudCB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKHNlbGVjdG9yT3B0aW9ucyk7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVBbmNlc3RvcnMoZWxlbWVudDogRWxlbWVudCk6IElBbmNlc3RvcnMge1xuICBjb25zdCBhbmNlc3RvcnM6IElBbmNlc3RvcnMgPSBbXTtcbiAgd2hpbGUgKGVsZW1lbnQpIHtcbiAgICBjb25zdCBwYXJlbnQgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ7XG4gICAgaWYgKHBhcmVudC5sb2NhbE5hbWUgPT09ICdib2R5JykgYnJlYWs7XG4gICAgY29uc3Qgc2VsZWN0b3JPcHRpb25zID0gZXh0cmFjdFNlbGVjdG9yT3B0aW9ucyhwYXJlbnQpO1xuICAgIGFuY2VzdG9ycy51bnNoaWZ0KHsgZWxlbWVudDogcGFyZW50LCBzZWxlY3Rvck9wdGlvbnMgfSk7XG4gICAgZWxlbWVudCA9IHBhcmVudDtcbiAgfVxuICByZXR1cm4gYW5jZXN0b3JzO1xufVxuXG5mdW5jdGlvbiBleHRyYWN0U2VsZWN0b3JPcHRpb25zKGVsZW1lbnQ6IEVsZW1lbnQpOiBJU2VsZWN0b3JPcHRpb25bXSB7XG4gIGNvbnN0IHRhZ05hbWUgPSBlbGVtZW50LmxvY2FsTmFtZTtcbiAgY29uc3QgaWQgPSBlbGVtZW50LmlkICYmICFlbGVtZW50LmlkLm1hdGNoKC9eWzAtOV0vKSA/IGAjJHtlbGVtZW50LmlkfWAgOiBudWxsO1xuICBjb25zdCBjbGFzc2VzID0gQXJyYXkuZnJvbShlbGVtZW50LmNsYXNzTGlzdCkubWFwKHggPT4gYC4ke3h9YCk7XG4gIGNvbnN0IGF0dHJOYW1lcyA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlTmFtZXMoKS5maWx0ZXIoayA9PiAhWydjbGFzcyddLmluY2x1ZGVzKGspKTtcbiAgY29uc3QgYXR0cnMgPSBhdHRyTmFtZXMubWFwKHggPT4ge1xuICAgIGNvbnN0IHYgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSh4KTtcbiAgICAvLyBvbmx5IHRyZWF0IElEIGFzIGFuIGF0dHJpYnV0ZSBpZiBpdCBzdGFydHMgd2l0aCBhIG51bWJlclxuICAgIGlmICh4ID09PSAnaWQnICYmIHYgJiYgIXYubWF0Y2goL15bMC05XS8pKSByZXR1cm47XG4gICAgcmV0dXJuIGBbJHt4fT1cIiR7dn1cIl1gO1xuICB9KTtcbiAgY29uc3QgcGFydHMgPSBbXG4gICAgeyB0eXBlOiAndGFnJywgcmFuazogUmFua0J5VHlwZS50YWcsIHZhbHVlOiB0YWdOYW1lIH0sXG4gICAgeyB0eXBlOiAnaWQnLCByYW5rOiBSYW5rQnlUeXBlLmlkLCB2YWx1ZTogaWQgfSxcbiAgICAuLi5jbGFzc2VzLm1hcCh2YWx1ZSA9PiAoeyB0eXBlOiAnY2xhc3MnLCByYW5rOiBSYW5rQnlUeXBlLmNsYXNzLCB2YWx1ZSB9KSksXG4gICAgLi4uYXR0cnMubWFwKHZhbHVlID0+ICh7IHR5cGU6ICdhdHRyJywgcmFuazogUmFua0J5VHlwZS5hdHRyLCB2YWx1ZSB9KSksXG4gIF0uZmlsdGVyKHggPT4geC52YWx1ZSk7XG5cbiAgY29uc3Qgc2VsZWN0b3JDb21iaW5hdGlvbnMgPSBnZW5lcmF0ZUFsbENvbWJpbmF0aW9ucyhwYXJ0cykubWFwKGNvbWJpbmF0aW9uID0+IHtcbiAgICByZXR1cm4gY29tYmluYXRpb24uc29ydCgoYSwgYikgPT4gYS5yYW5rIC0gYi5yYW5rKTtcbiAgfSk7XG5cbiAgc2VsZWN0b3JDb21iaW5hdGlvbnMuc29ydCgoYSwgYikgPT4ge1xuICAgIGxldCBhU2NvcmUgPSBhLmxlbmd0aDtcbiAgICBpZiAoYS5zb21lKHggPT4geC50eXBlID09PSAnYXR0cicpKSBhU2NvcmUgKz0gMTtcbiAgICBpZiAoYVswXS50eXBlID09PSAnYXR0cicpIGFTY29yZSArPSAxO1xuICAgIGxldCBiU2NvcmUgPSBiLmxlbmd0aDtcbiAgICBpZiAoYi5zb21lKHggPT4geC50eXBlID09PSAnYXR0cicpKSBiU2NvcmUgKz0gMTtcbiAgICBpZiAoYlswXS50eXBlID09PSAnYXR0cicpIGJTY29yZSArPSAxO1xuICAgIHJldHVybiBhU2NvcmUgLSBiU2NvcmU7XG4gIH0pO1xuXG4gIHJldHVybiBzZWxlY3RvckNvbWJpbmF0aW9ucy5tYXAoeCA9PiB4Lm1hcCh5ID0+IHkudmFsdWUpKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVBbGxDb21iaW5hdGlvbnMob3B0aW9ucykge1xuICBmdW5jdGlvbiBjb21iaW5hdGlvbkZuKGFjdGl2ZVNldCwgcmVzdE9mQXJyYXksIGFsbCkge1xuICAgIGlmICghYWN0aXZlU2V0Lmxlbmd0aCAmJiAhcmVzdE9mQXJyYXkubGVuZ3RoKSByZXR1cm47XG4gICAgaWYgKCFyZXN0T2ZBcnJheS5sZW5ndGgpIHtcbiAgICAgIGFsbC5wdXNoKGFjdGl2ZVNldCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbWJpbmF0aW9uRm4oWy4uLmFjdGl2ZVNldCwgcmVzdE9mQXJyYXlbMF1dLCByZXN0T2ZBcnJheS5zbGljZSgxKSwgYWxsKTtcbiAgICAgIGNvbWJpbmF0aW9uRm4oWy4uLmFjdGl2ZVNldF0sIHJlc3RPZkFycmF5LnNsaWNlKDEpLCBhbGwpO1xuICAgIH1cbiAgICByZXR1cm4gYWxsO1xuICB9O1xuICByZXR1cm4gY29tYmluYXRpb25GbihbXSwgWy4uLm9wdGlvbnNdLCBbXSk7XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZVBvc3NpYmxlU2VsZWN0b3JDb3VudChsYXllcnM6IElMYXllcnMsIGFuY2VzdG9yS2V5UGFpcnM6IHN0cmluZ1tdW10pIHtcbiAgbGV0IGNvdW50ID0gMDtcbiAgZm9yIChjb25zdCBhbmNlc3RvcktleXMgb2YgYW5jZXN0b3JLZXlQYWlycykge1xuICAgIGxldCBsb2NhbENvdW50ID0gMTtcbiAgICBmb3IgKGNvbnN0IGFuY2VzdG9yS2V5IG9mIGFuY2VzdG9yS2V5cykge1xuICAgICAgbG9jYWxDb3VudCAqPSBsYXllcnNbYW5jZXN0b3JLZXldLnNlbGVjdG9yT3B0aW9ucy5sZW5ndGg7XG4gICAgfVxuICAgIGNvdW50ICs9IGxvY2FsQ291bnQ7XG4gIH1cbiAgcmV0dXJuIGNvdW50O1xufVxuIiwiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJjaHJvbWVcIi8+XG5pbXBvcnQgJ0B3ZWJjb21wb25lbnRzL2N1c3RvbS1lbGVtZW50cyc7XG5pbXBvcnQgeyBNZXNzYWdlRXZlbnRUeXBlIH0gZnJvbSAnQHVsaXhlZS9kZXNrdG9wLWNvcmUvbGliL0JyaWRnZUhlbHBlcnMnO1xuaW1wb3J0IEVsZW1lbnRPcHRpb25zT3ZlcmxheSBmcm9tICcuL2xpYi9FbGVtZW50T3B0aW9uc092ZXJsYXknO1xuaW1wb3J0IHsgb25NZXNzYWdlUGF5bG9hZCwgc2VuZFRvRGV2dG9vbHNTY3JpcHQgfSBmcm9tICcuL2xpYi9jb250ZW50L0NvbnRlbnRNZXNzZW5nZXInO1xuaW1wb3J0IEVsZW1lbnRzQnVja2V0IGZyb20gJy4vbGliL0VsZW1lbnRzQnVja2V0JztcbmltcG9ydCBmaW5kU2VsZWN0b3JzIGZyb20gJy4vbGliL2NvbnRlbnQvZmluZFNlbGVjdG9ycyc7XG5cblxuLy8gRGVmaW5lIHRoZSBuZXcgZWxlbWVudFxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdjaHJvbWVhbGl2ZS1lbGVtZW50LW9wdGlvbnMtb3ZlcmxheScsIEVsZW1lbnRPcHRpb25zT3ZlcmxheSk7XG5cbmxldCBlbGVtZW50T3B0aW9uc092ZXJsYXk6IEVsZW1lbnRPcHRpb25zT3ZlcmxheTtcbmNvbnN0IGVsZW1lbnRzQnVja2V0ID0gbmV3IEVsZW1lbnRzQnVja2V0KCk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmZ1bmN0aW9uIG9wZW5TZWxlY3Rvck1lbnUoX29wdGlvbnM6IHsgYmFja2VuZE5vZGVJZD86IG51bWJlciwgZWxlbWVudD86IEhUTUxFbGVtZW50IH0pIHtcbiAgLy8gY29uc3QgeyBiYWNrZW5kTm9kZUlkLCBlbGVtZW50IH0gPSBvcHRpb25zO1xuICAvLyBpZiAoIWVsZW1lbnRPcHRpb25zT3ZlcmxheSkge1xuICAvLyAgIGVsZW1lbnRPcHRpb25zT3ZlcmxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Nocm9tZWFsaXZlLWVsZW1lbnQtb3B0aW9ucy1vdmVybGF5JykgYXMgRWxlbWVudE9wdGlvbnNPdmVybGF5O1xuICAvLyAgIGVsZW1lbnRPcHRpb25zT3ZlcmxheS5hdHRhY2hFbGVtZW50c0J1Y2tldChlbGVtZW50c0J1Y2tldCk7XG4gIC8vICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50T3B0aW9uc092ZXJsYXkpO1xuICAvLyAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZVNlbGVjdG9yTWVudSk7XG4gIC8vIH1cbiAgLy8gZWxlbWVudCA/Pz0gZWxlbWVudHNCdWNrZXQuZ2V0QnlLZXkoYmFja2VuZE5vZGVJZCk7XG4gIC8vIGlmIChlbGVtZW50ICYmIGJhY2tlbmROb2RlSWQpIHtcbiAgLy8gICBlbGVtZW50T3B0aW9uc092ZXJsYXkub3BlbihiYWNrZW5kTm9kZUlkLCBlbGVtZW50KVxuICAvLyB9IGVsc2UgaWYgKGJhY2tlbmROb2RlSWQpIHtcbiAgLy8gICBlbGVtZW50T3B0aW9uc092ZXJsYXkub3BlbkJ5QmFja2VuZE5vZGVJZChiYWNrZW5kTm9kZUlkKTtcbiAgLy8gfVxufVxuXG5mdW5jdGlvbiBjbG9zZVNlbGVjdG9yTWVudSgpIHtcbiAgaWYgKCFlbGVtZW50T3B0aW9uc092ZXJsYXkpIHJldHVybjtcbiAgZWxlbWVudE9wdGlvbnNPdmVybGF5LmNsb3NlKCk7XG59XG5cbmZ1bmN0aW9uIHRtcEhpZGVTZWxlY3Rvck1lbnUodmFsdWU6IGJvb2xlYW4pIHtcbiAgaWYgKCFlbGVtZW50T3B0aW9uc092ZXJsYXkpIHJldHVybjtcbiAgZWxlbWVudE9wdGlvbnNPdmVybGF5LnRtcEhpZGUodmFsdWUpO1xufVxuXG5vbk1lc3NhZ2VQYXlsb2FkKGFzeW5jIHBheWxvYWQgPT4ge1xuICBjb25zdCB7IGV2ZW50LCBiYWNrZW5kTm9kZUlkIH0gPSBwYXlsb2FkO1xuICBpZiAoZXZlbnQgPT09IE1lc3NhZ2VFdmVudFR5cGUuSW5zcGVjdEVsZW1lbnRNb2RlQ2hhbmdlZCkge1xuICAgIGlmIChwYXlsb2FkLmlzQWN0aXZlKSB7XG4gICAgICBjbG9zZVNlbGVjdG9yTWVudSgpO1xuICAgIH1cblxuICB9IGVsc2UgaWYgKGV2ZW50ID09PSBNZXNzYWdlRXZlbnRUeXBlLk9wZW5FbGVtZW50T3B0aW9uc092ZXJsYXkpIHtcbiAgICBvcGVuU2VsZWN0b3JNZW51KHsgYmFja2VuZE5vZGVJZCB9KTtcblxuICB9IGVsc2UgaWYgKGV2ZW50ID09PSBNZXNzYWdlRXZlbnRUeXBlLkhpZGVFbGVtZW50T3B0aW9uc092ZXJsYXkpIHtcbiAgICB0bXBIaWRlU2VsZWN0b3JNZW51KHRydWUpO1xuXG4gIH0gZWxzZSBpZiAoZXZlbnQgPT09IE1lc3NhZ2VFdmVudFR5cGUuUmVtb3ZlSGlkZUZyb21FbGVtZW50T3B0aW9uc092ZXJsYXkpIHtcbiAgICB0bXBIaWRlU2VsZWN0b3JNZW51KGZhbHNlKTtcblxuICB9IGVsc2UgaWYgKGV2ZW50ID09PSBNZXNzYWdlRXZlbnRUeXBlLkNsb3NlRWxlbWVudE9wdGlvbnNPdmVybGF5KSB7XG4gICAgY2xvc2VTZWxlY3Rvck1lbnUoKTtcblxuICB9IGVsc2UgaWYgKGV2ZW50ID09PSBNZXNzYWdlRXZlbnRUeXBlLlVwZGF0ZUVsZW1lbnRPcHRpb25zKSB7XG4gICAgaWYgKCdpc0luY2x1ZGVkJyBpbiBwYXlsb2FkKSB7XG4gICAgICBpZiAocGF5bG9hZC5pc0luY2x1ZGVkKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBhd2FpdCBlbGVtZW50c0J1Y2tldC5nZXRCeUJhY2tlbmROb2RlSWQoYmFja2VuZE5vZGVJZCk7XG4gICAgICAgIGVsZW1lbnRzQnVja2V0LmFkZEluY2x1ZGVkRWxlbWVudChiYWNrZW5kTm9kZUlkLCBlbGVtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnRzQnVja2V0LnJlbW92ZUluY2x1ZGVkRWxlbWVudChiYWNrZW5kTm9kZUlkKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCdpc0V4Y2x1ZGVkJyBpbiBwYXlsb2FkKSB7XG4gICAgICBpZiAocGF5bG9hZC5pc0V4Y2x1ZGVkKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBhd2FpdCBlbGVtZW50c0J1Y2tldC5nZXRCeUJhY2tlbmROb2RlSWQoYmFja2VuZE5vZGVJZCk7XG4gICAgICAgIGVsZW1lbnRzQnVja2V0LmFkZEV4Y2x1ZGVkRWxlbWVudChiYWNrZW5kTm9kZUlkLCBlbGVtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnRzQnVja2V0LnJlbW92ZUV4Y2x1ZGVkRWxlbWVudChiYWNrZW5kTm9kZUlkKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAoZXZlbnQgPT09IE1lc3NhZ2VFdmVudFR5cGUuUnVuU2VsZWN0b3JHZW5lcmF0b3IpIHtcbiAgICAvLyBjb25zdCBzZWxlY3RvcnM6IHN0cmluZ1tdID0gW107XG4gICAgY29uc3QgZWxlbWVudCA9IGVsZW1lbnRzQnVja2V0LmluY2x1ZGVkRWxlbWVudHNbMF07XG4gICAgY29uc3Qgc2VsZWN0b3JzOiBzdHJpbmdbXVtdID0gZmluZFNlbGVjdG9ycyhlbGVtZW50KS5tYXAoeCA9PiB4LnNwbGl0KCcgJykpO1xuICAgIHNlbmRUb0RldnRvb2xzU2NyaXB0KHsgZXZlbnQ6IE1lc3NhZ2VFdmVudFR5cGUuRmluaXNoZWRTZWxlY3RvckdlbmVyYXRpb24sIHNlbGVjdG9ycyB9KTtcblxuICB9IGVsc2UgaWYgKGV2ZW50ID09PSBNZXNzYWdlRXZlbnRUeXBlLlJlc2V0U2VsZWN0b3JHZW5lcmF0b3IpIHtcbiAgICBlbGVtZW50c0J1Y2tldC5yZXNldCgpO1xuXG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJ1VOSEFORExFRCBNRVNTQUdFOiAnLCBwYXlsb2FkKTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOlsibiIsInAiLCJhYSIsImJhIiwiY2EiLCJkYSIsImVhIiwicSIsInIiLCJ0IiwidSIsInYiLCJ3IiwieSIsInoiLCJBIiwiQiIsIkMiLCJEIiwiRSIsIkYiLCJHIiwiSCIsImZhIiwiaGEiLCJpYSIsImphIiwia2EiLCJsYSIsIm1hIiwibmEiLCJJIiwib2EiLCJwYSIsInFhIiwiYSIsInJhIiwiYiIsInNhIiwiSiIsIksiLCJMIiwiTSIsImQiLCJmIiwiYyIsImUiLCJOIiwiTyIsIlAiLCJ0YSIsInVhIiwiUSIsIlIiLCJTIiwiVCIsIlUiLCJWIiwiZyIsImgiLCJrIiwibCIsIm0iLCJYIiwidmEiLCJ3YSIsInhhIiwieWEiLCJZIiwiemEiLCJBYSIsIkJhIiwieCIsIloiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIm5hbm9pZCIsInNpemUiLCJpZCIsImJ5dGUiLCJmaWVsZERpdmlkZXIiLCJsZW5ndGhPZkRlc3RMb2NhdGlvbkZpZWxkIiwibGVuZ3RoT2ZGaWVsZERpdmlkZXIiLCJsZW5ndGhPZlJlc3BvbnNlQ29kZUZpZWxkIiwic3RhcnRPZkRlc3RMb2NhdGlvbkZpZWxkIiwic3RhcnRPZlJlc3BvbnNlQ29kZUZpZWxkIiwiTWVzc2FnZUV2ZW50VHlwZSIsIk1lc3NhZ2VMb2NhdGlvbiIsIl9fX3NlbmRUb0NvcmUiLCJfX19yZWNlaXZlRnJvbUNvcmUiLCJSZXNwb25zZUNvZGUiLCJjcmVhdGVSZXNwb25zZUlkIiwicGFja01lc3NhZ2UiLCJtZXNzYWdlIiwiaXNQYWNrZWRNZXNzYWdlIiwiZGVzdExvY2F0aW9uIiwicmVzcG9uc2VDb2RlIiwibWVzc2FnZVRvU3RyaW5naWZ5Iiwic3RyaW5naWZpZWRNZXNzYWdlIiwibWVzc2FnZUV4cGVjdHNSZXNwb25zZSIsImlzUmVzcG9uc2VNZXNzYWdlIiwiRWxlbWVudE9wdGlvbnNPdmVybGF5IiwiZWxlbWVudHNCdWNrZXQiLCJiYWNrZW5kTm9kZUlkIiwiZWxlbWVudCIsImVycm9yIiwidGFnTmFtZSIsImNsYXNzZXMiLCJ0aXRsZVRleHQiLCJ3aWR0aCIsImhlaWdodCIsInRvcCIsImxlZnQiLCJhYnNMZWZ0IiwiYWJzVG9wIiwicG9zaXRpb25UZXh0Iiwib3ZlcmxheUhlaWdodCIsInZhbHVlIiwib3BlblNlbGVjdG9yR2VuZXJhdG9yUGFuZWwiLCJldmVudCIsIm92ZXJsYXlFbGVtIiwiY3NzIiwic3R5bGUiLCJwYWNrZWRNZXNzYWdlIiwiY3VycmVudE1lc3NlbmdlckxvY2F0aW9uIiwic2VuZFRvRGV2dG9vbHNTY3JpcHQiLCJwYXlsb2FkIiwicmVzcG9uc2VDYWxsYmFja0ZuIiwiY29udmVydFJlc3BvbnNlRm5Ub0NvZGVBbmRJZCIsInJvdXRlSW50ZXJuYWxseSIsInNlbmRUb0RldnRvb2xzUHJpdmF0ZSIsInNlbmRUb0NvcmUiLCJvbk1lc3NhZ2VQYXlsb2FkRm4iLCJvbk1lc3NhZ2VQYXlsb2FkIiwiZm4iLCJyZXN0T2ZNZXNzYWdlIiwiaGFuZGxlSW5jb21pbmdMb2NhbFJlc3BvbnNlIiwiaGFuZGxlSW5jb21pbmdMb2NhbE1lc3NhZ2UiLCJwZW5kaW5nQnlSZXNwb25zZUlkIiwicmVzcG9uc2VGbiIsInJlc3BvbnNlIiwic2VuZFJlc3BvbnNlQmFjayIsInBlbmRpbmciLCJyZXNwb25zZVBheWxvYWQiLCJyZXNwb25zZUlkIiwiZWxlbWVudFByb21pc2VzQnlJZCIsIkVsZW1lbnRzQnVja2V0IiwiY2FsbGJhY2tGbk5hbWUiLCJyZXNvbHZlIiwicmVqZWN0IiwidGFnVGV4dCIsImV4dHJhY3RUYWdUZXh0Iiwib3V0ZXJIdG1sIiwibGVuIiwib3BlblRhZ0xlbmd0aCIsIlJhbmtCeVR5cGUiLCJzb3J0QnlMZW5ndGgiLCJmaW5kU2VsZWN0b3JzIiwidGFyZ2V0IiwiZ2VuZXJhdGVUYXJnZXQiLCJhbmNlc3RvcnMiLCJnZW5lcmF0ZUFuY2VzdG9ycyIsImxheWVyS2V5UGFpcnMiLCJnZW5lcmF0ZUxheWVyS2V5UGFpcnMiLCJsYXllcnMiLCJwb3NzaWJsZVNlbGVjdG9yQ291bnQiLCJjYWxjdWxhdGVQb3NzaWJsZVNlbGVjdG9yQ291bnQiLCJzZWxlY3RvcnMiLCJnZW5lcmF0ZVNob3J0U2VsZWN0b3JzIiwiYW5jZXN0b3JLZXlQYWlycyIsInNlbGVjdG9yRGVwdGgiLCJtYXhTZWxlY3RvckNvdW50UmVtYWluaW5nIiwicG9zc2libGVTZWxlY3RvcnMiLCJmZXRjaFNlbGVjdG9yc1RvQ2hlY2siLCJwb3NzaWJsZVNlbGVjdG9yIiwiZGVwdGgiLCJtYXhTZWxlY3RvckNvdW50IiwiYW5jZXN0b3JLZXlzIiwiYmFzZVNlbGVjdG9ycyIsImtleSIsImlzRGlyZWN0U2libGluZyIsInNlbGVjdG9yT3B0aW9ucyIsImFwcGVuZFRvU2VsZWN0b3JzIiwibmV3U2VsZWN0b3JzIiwicmVsYXRpb24iLCJzZWxlY3Rvck9wdGlvbiIsIm5ld1BhcnQiLCJiYXNlU2VsZWN0b3IiLCJhbmNlc3RvckNvbWJpbmF0aW9ucyIsImdlbmVyYXRlQWxsQ29tYmluYXRpb25zIiwiYWxsQ29tYmluYXRpb25zIiwiYW5jZXN0b3JDb21iaW5hdGlvbiIsImV4dHJhY3RTZWxlY3Rvck9wdGlvbnMiLCJwYXJlbnRFbGVtZW50IiwidW5pcXVlVG9QYXJlbnQiLCJwYXJlbnQiLCJhdHRycyIsInBhcnRzIiwic2VsZWN0b3JDb21iaW5hdGlvbnMiLCJjb21iaW5hdGlvbiIsImFTY29yZSIsImJTY29yZSIsIm9wdGlvbnMiLCJjb21iaW5hdGlvbkZuIiwiYWN0aXZlU2V0IiwicmVzdE9mQXJyYXkiLCJhbGwiLCJjb3VudCIsImxvY2FsQ291bnQiLCJhbmNlc3RvcktleSJdLCJtYXBwaW5ncyI6ImNBQUMsVUFBVSxDQVdFLElBQUlBLEVBQUUsT0FBTyxTQUFTLFVBQVUsY0FBY0MsRUFBRSxPQUFPLFNBQVMsVUFBVSxnQkFBZ0JDLEVBQUcsT0FBTyxTQUFTLFVBQVUsV0FBV0MsRUFBRyxPQUFPLFNBQVMsVUFBVSxRQUFRQyxFQUFHLE9BQU8sU0FBUyxVQUFVLE9BQU9DLEVBQUcsT0FBTyxpQkFBaUIsVUFBVSxRQUFRQyxFQUFHLE9BQU8saUJBQWlCLFVBQVUsT0FBT0MsRUFBRSxPQUFPLEtBQUssVUFBVSxVQUFVQyxFQUFFLE9BQU8sS0FBSyxVQUFVLFlBQVlDLEVBQUUsT0FBTyxLQUFLLFVBQVUsYUFBYUMsRUFBRSxPQUFPLEtBQUssVUFBVSxZQUFZQyxFQUFFLE9BQU8sS0FBSyxVQUFVLGFBQWFDLEVBQUUsT0FBTyx5QkFBeUIsT0FBTyxLQUFLLFVBQ25oQixhQUFhLEVBQUVDLEVBQUUsT0FBTyxRQUFRLFVBQVUsYUFBYUMsRUFBRSxPQUFPLHlCQUF5QixPQUFPLFFBQVEsVUFBVSxXQUFXLEVBQUVDLEVBQUUsT0FBTyxRQUFRLFVBQVUsYUFBYUMsR0FBRSxPQUFPLFFBQVEsVUFBVSxhQUFhQyxHQUFFLE9BQU8sUUFBUSxVQUFVLGdCQUFnQkMsRUFBRSxPQUFPLFFBQVEsVUFBVSxnQkFBZ0JDLEVBQUUsT0FBTyxRQUFRLFVBQVUsZUFBZUMsR0FBRSxPQUFPLFFBQVEsVUFBVSxlQUFlQyxHQUFFLE9BQU8sUUFB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QUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtB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
